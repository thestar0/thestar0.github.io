<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>安全沉思录</title>
        <link>https://thestar0.github.io//</link>
        <description>记录所思</description>
        <lastBuildDate>Wed, 10 Sep 2025 14:22:36 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>zh-CN</language>
        <copyright>All rights reserved 2025, thestar</copyright>
        <item>
            <title><![CDATA[CVE-2024-23897漏洞复现]]></title>
            <link>https://thestar0.github.io//article/2024/10/30/12eb67db-fc9a-8056-8c41-dbc587108bd8</link>
            <guid>https://thestar0.github.io//article/2024/10/30/12eb67db-fc9a-8056-8c41-dbc587108bd8</guid>
            <pubDate>Wed, 30 Oct 2024 00:00:00 GMT</pubDate>
            <description><![CDATA[Jenkins CLI 接口任意文件读取漏洞]]></description>
            <content:encoded><![CDATA[<div id="notion-article" class="mx-auto overflow-hidden "><main class="notion light-mode notion-page notion-block-12eb67dbfc9a80568c41dbc587108bd8"><div class="notion-viewport"></div><div class="notion-collection-page-properties"></div><h3 class="notion-h notion-h2 notion-h-indent-0 notion-block-12eb67dbfc9a80cb99a7d035d834583d" data-id="12eb67dbfc9a80cb99a7d035d834583d"><span><div id="12eb67dbfc9a80cb99a7d035d834583d" class="notion-header-anchor"></div><a class="notion-hash-link" href="#12eb67dbfc9a80cb99a7d035d834583d" title="环境搭建"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">环境搭建</span></span></h3><div class="notion-text notion-block-12eb67dbfc9a80cc9ae7de18b44dc75c">使用 <code class="notion-inline-code">vulhub</code> 的环境</div><div class="notion-row"><a target="_blank" rel="noopener noreferrer" class="notion-bookmark notion-block-12eb67dbfc9a800ca3d4f84a25aa2bee" href="https://github.com/vulhub/vulhub/tree/master/jenkins/CVE-2024-23897"><div><div class="notion-bookmark-title">vulhub/jenkins/CVE-2024-23897 at master · vulhub/vulhub</div><div class="notion-bookmark-description">Pre-Built Vulnerable Environments Based on Docker-Compose - vulhub/vulhub</div><div class="notion-bookmark-link"><div class="notion-bookmark-link-icon"><img src="https://www.notion.so/image/https%3A%2F%2Fgithub.com%2Ffluidicon.png?table=block&amp;id=12eb67db-fc9a-800c-a3d4-f84a25aa2bee&amp;t=12eb67db-fc9a-800c-a3d4-f84a25aa2bee" alt="vulhub/jenkins/CVE-2024-23897 at master · vulhub/vulhub" loading="lazy" decoding="async"/></div><div class="notion-bookmark-link-text">https://github.com/vulhub/vulhub/tree/master/jenkins/CVE-2024-23897</div></div></div><div class="notion-bookmark-image"><img style="object-fit:cover" src="https://www.notion.so/image/https%3A%2F%2Fopengraph.githubassets.com%2F3a0ea0c4498b11b8952cee7ebd7404db0aa8feaed43e99816a227983744441c1%2Fvulhub%2Fvulhub?table=block&amp;id=12eb67db-fc9a-800c-a3d4-f84a25aa2bee&amp;t=12eb67db-fc9a-800c-a3d4-f84a25aa2bee" alt="vulhub/jenkins/CVE-2024-23897 at master · vulhub/vulhub" loading="lazy" decoding="async"/></div></a></div><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-12eb67dbfc9a80febc95e3f227df4ed2"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column;height:100%"><img style="object-fit:cover" src="https://www.notion.so/image/https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2F0dd8935a-39f8-4c94-aaf7-d2de23196366%2F664fb866-090c-4fc7-8c45-29409d97a421%2Fimage.png?table=block&amp;id=12eb67db-fc9a-80fe-bc95-e3f227df4ed2&amp;t=12eb67db-fc9a-80fe-bc95-e3f227df4ed2&amp;width=707.9921875&amp;cache=v2" alt="notion image" loading="lazy" decoding="async"/></div></figure><div class="notion-text notion-block-12eb67dbfc9a80cdb747db34880901fe">起起来后在 8080 端口</div><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-12eb67dbfc9a8003a8cdc9fa948b349d"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column;height:100%"><img style="object-fit:cover" src="https://www.notion.so/image/https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2F0dd8935a-39f8-4c94-aaf7-d2de23196366%2F4a7e3514-f927-4f46-a373-a79e5cbfd487%2Fimage.png?table=block&amp;id=12eb67db-fc9a-8003-a8cd-c9fa948b349d&amp;t=12eb67db-fc9a-8003-a8cd-c9fa948b349d&amp;width=3094&amp;cache=v2" alt="notion image" loading="lazy" decoding="async"/></div></figure><h3 class="notion-h notion-h2 notion-h-indent-0 notion-block-12eb67dbfc9a80b6b9cec23728ffecb5" data-id="12eb67dbfc9a80b6b9cec23728ffecb5"><span><div id="12eb67dbfc9a80b6b9cec23728ffecb5" class="notion-header-anchor"></div><a class="notion-hash-link" href="#12eb67dbfc9a80b6b9cec23728ffecb5" title="漏洞简述"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">漏洞简述</span></span></h3><blockquote class="notion-quote notion-block-12eb67dbfc9a809e8d7cd0f85cdd199e"><div>Jenkins服务端处理 CLI 命令时使用了一个第三方库<a target="_blank" rel="noopener noreferrer" class="notion-link" href="https://github.com/kohsuke/args4j">args4j</a>来解析 Jenkins CLI上的命令参数和选项，这个库实现了Linux中一个常见的功能——如果一个参数是以<code class="notion-inline-code">@</code>开头，则会被自动认为是一个文件名，文件内容会被读取作为参数</div></blockquote><div class="notion-blank notion-block-12eb67dbfc9a80b6af68c51d73dac4d2"> </div><h3 class="notion-h notion-h2 notion-h-indent-0 notion-block-12eb67dbfc9a80a988f7f18873781860" data-id="12eb67dbfc9a80a988f7f18873781860"><span><div id="12eb67dbfc9a80a988f7f18873781860" class="notion-header-anchor"></div><a class="notion-hash-link" href="#12eb67dbfc9a80a988f7f18873781860" title="影响版本"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">影响版本</span></span></h3><div class="notion-text notion-block-12eb67dbfc9a8012a7cadf586f2d0337">Jenkins ≤ 2.441</div><h3 class="notion-h notion-h2 notion-h-indent-0 notion-block-12fb67dbfc9a8091b97cc2f531750130" data-id="12fb67dbfc9a8091b97cc2f531750130"><span><div id="12fb67dbfc9a8091b97cc2f531750130" class="notion-header-anchor"></div><a class="notion-hash-link" href="#12fb67dbfc9a8091b97cc2f531750130" title="复现过程"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">复现过程</span></span></h3><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-13cb67dbfc9a803781b1c4480e5071fe"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column;height:100%"><img style="object-fit:cover" src="https://www.notion.so/image/https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2F0dd8935a-39f8-4c94-aaf7-d2de23196366%2F284ae4a9-1869-43cb-9a84-3af70280cfda%2FCleanShot_2024-11-12_at_14.48.482x.png?table=block&amp;id=13cb67db-fc9a-8037-81b1-c4480e5071fe&amp;t=13cb67db-fc9a-8037-81b1-c4480e5071fe&amp;width=3018&amp;cache=v2" alt="notion image" loading="lazy" decoding="async"/></div></figure><div class="notion-text notion-block-12fb67dbfc9a80f296c0f15614bd7c3c">读取文件：</div><div class="notion-blank notion-block-12fb67dbfc9a80c8ac60ef25a900065c"> </div><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-13cb67dbfc9a800cb333fd154bdce383"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column;height:100%"><img style="object-fit:cover" src="https://www.notion.so/image/https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2F0dd8935a-39f8-4c94-aaf7-d2de23196366%2Fabf962db-f6f8-4cfd-becc-b2dd9f196c7b%2FCleanShot_2024-11-12_at_14.34.482x.png?table=block&amp;id=13cb67db-fc9a-800c-b333-fd154bdce383&amp;t=13cb67db-fc9a-800c-b333-fd154bdce383&amp;width=707.9609375&amp;cache=v2" alt="notion image" loading="lazy" decoding="async"/></div></figure><div class="notion-text notion-block-13cb67dbfc9a8069862bf4c2167744a1">help命令只能读取两行，要读取全部文件内容必须在开启了下面这个匿名用户可读的选项后，才能用 <code class="notion-inline-code">connet-node</code> 或者<code class="notion-inline-code">reload-job</code> 命令读取所有内容</div><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-13cb67dbfc9a8028a1c7dd6692425448"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column;height:100%"><img style="object-fit:cover" src="https://www.notion.so/image/https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2F0dd8935a-39f8-4c94-aaf7-d2de23196366%2F8d22c218-e9c4-4ca2-9191-bd247c3b6385%2FCleanShot_2024-11-12_at_15.21.49.png?table=block&amp;id=13cb67db-fc9a-8028-a1c7-dd6692425448&amp;t=13cb67db-fc9a-8028-a1c7-dd6692425448&amp;width=707.984375&amp;cache=v2" alt="notion image" loading="lazy" decoding="async"/></div></figure><div class="notion-text notion-block-13cb67dbfc9a801684add46c9b95f527">如图： 使用 <code class="notion-inline-code">connet-node</code> 读取<code class="notion-inline-code">/etc/passwd</code>文件全部内容</div><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-13cb67dbfc9a808084a7c37add854a63"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column;height:100%"><img style="object-fit:cover" src="https://www.notion.so/image/https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2F0dd8935a-39f8-4c94-aaf7-d2de23196366%2F2185d88e-42e8-42c9-b326-bec1302ea572%2FCleanShot_2024-11-12_at_15.25.25.png?table=block&amp;id=13cb67db-fc9a-8080-84a7-c37add854a63&amp;t=13cb67db-fc9a-8080-84a7-c37add854a63&amp;width=707.96875&amp;cache=v2" alt="notion image" loading="lazy" decoding="async"/></div></figure><div class="notion-blank notion-block-13cb67dbfc9a8057b4b5e5668de9547e"> </div><h3 class="notion-h notion-h2 notion-h-indent-0 notion-block-13cb67dbfc9a807591ade4f8f23fd310" data-id="13cb67dbfc9a807591ade4f8f23fd310"><span><div id="13cb67dbfc9a807591ade4f8f23fd310" class="notion-header-anchor"></div><a class="notion-hash-link" href="#13cb67dbfc9a807591ade4f8f23fd310" title="漏洞读取目录"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">漏洞读取目录</span></span></h3><div class="notion-text notion-block-13cb67dbfc9a80a4955ee0e53f831d20">常见文件读取目录：</div><h3 class="notion-h notion-h2 notion-h-indent-0 notion-block-12fb67dbfc9a8046b315e5c15bc9d986" data-id="12fb67dbfc9a8046b315e5c15bc9d986"><span><div id="12fb67dbfc9a8046b315e5c15bc9d986" class="notion-header-anchor"></div><a class="notion-hash-link" href="#12fb67dbfc9a8046b315e5c15bc9d986" title="Jenkins后台 Rce 命令"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title"><b>Jenkins后台 Rce 命令</b></span></span></h3><div class="notion-text notion-block-13cb67dbfc9a802198f6cdf728306f23">后台 Script Console 可以执行任意命令</div><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-13cb67dbfc9a80d1b6acff50540b8f45"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column;height:100%"><img style="object-fit:cover" src="https://www.notion.so/image/https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2F0dd8935a-39f8-4c94-aaf7-d2de23196366%2F529725b2-09ea-438a-a76f-819f9b05eadc%2FCleanShot_2024-11-12_at_15.30.36.png?table=block&amp;id=13cb67db-fc9a-80d1-b6ac-ff50540b8f45&amp;t=13cb67db-fc9a-80d1-b6ac-ff50540b8f45&amp;width=707.984375&amp;cache=v2" alt="notion image" loading="lazy" decoding="async"/></div></figure><div class="notion-blank notion-block-13cb67dbfc9a80289f84c9928e917577"> </div><div class="notion-text notion-block-13cb67dbfc9a80148cabf4bb5bf4544a">常见命令备忘：</div><div class="notion-blank notion-block-13cb67dbfc9a80acbe01d17407838552"> </div><div class="notion-text notion-block-12fb67dbfc9a8036a32fc15016f704ef">执行 <code class="notion-inline-code">whoami</code></div><div class="notion-blank notion-block-1a0b67dbfc9a80f89c76cc216be6e69b"> </div><div class="notion-blank notion-block-12fb67dbfc9a80b6b51bd02fef17dc15"> </div></main></div>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[契约锁-dbtest接口JDBC反序列化漏洞复现]]></title>
            <link>https://thestar0.github.io//article/2025/06/12/20fb67db-fc9a-8088-9172-e2de1af90222</link>
            <guid>https://thestar0.github.io//article/2025/06/12/20fb67db-fc9a-8088-9172-e2de1af90222</guid>
            <pubDate>Thu, 12 Jun 2025 16:00:00 GMT</pubDate>
            <content:encoded><![CDATA[<div id="notion-article" class="mx-auto overflow-hidden "><main class="notion light-mode notion-page notion-block-20fb67dbfc9a80889172e2de1af90222"><div class="notion-viewport"></div><div class="notion-collection-page-properties"></div><h3 class="notion-h notion-h2 notion-h-indent-0 notion-block-211b67dbfc9a80fab190f21827f0ef2c" data-id="211b67dbfc9a80fab190f21827f0ef2c"><span><div id="211b67dbfc9a80fab190f21827f0ef2c" class="notion-header-anchor"></div><a class="notion-hash-link" href="#211b67dbfc9a80fab190f21827f0ef2c" title="基本信息"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title"><b>基本信息</b></span></span></h3><div class="notion-text notion-block-210b67dbfc9a80e4823fdc97e3a2e565">指纹信息：</div><div class="notion-text notion-block-210b67dbfc9a80dc84fbe766bbc24f98">默认端口为：9181 </div><div class="notion-text notion-block-210b67dbfc9a80deb475eff707655c24">POC：</div><div class="notion-text notion-block-210b67dbfc9a80329ddcf65d6a0f2cc7">界面如图所示：</div><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-210b67dbfc9a80e581e5fc5cc425d6ce"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column;height:100%"><img style="object-fit:cover" src="https://www.notion.so/image/attachment%3Af6297794-d7fc-4969-a4df-273434a0a546%3A%E6%88%AA%E5%9B%BE2025_06_13-00_10_382x.png?table=block&amp;id=210b67db-fc9a-80e5-81e5-fc5cc425d6ce&amp;t=210b67db-fc9a-80e5-81e5-fc5cc425d6ce" alt="notion image" loading="lazy" decoding="async"/></div></figure><div class="notion-text notion-block-210b67dbfc9a80e7adc2e4d58681e793">漏洞影响版本号：</div><div class="notion-blank notion-block-211b67dbfc9a80bdacfbee4df67fb885"> </div><h3 class="notion-h notion-h2 notion-h-indent-0 notion-block-20fb67dbfc9a80d3aaeae440dbe3ff2f" data-id="20fb67dbfc9a80d3aaeae440dbe3ff2f"><span><div id="20fb67dbfc9a80d3aaeae440dbe3ff2f" class="notion-header-anchor"></div><a class="notion-hash-link" href="#20fb67dbfc9a80d3aaeae440dbe3ff2f" title="漏洞详细分析"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">漏洞详细分析</span></span></h3><div class="notion-text notion-block-211b67dbfc9a804e9645e4b5efd20717">漏洞source位于：<code class="notion-inline-code">com.qiyuesuo.setup.SetupController#dbtest()</code></div><div class="notion-text notion-block-211b67dbfc9a8058b214e9c77169c51b">只会简单判断参数Host，Port，Name和Username是否存在，不判断password，所以Payload里面可以不用加password</div><div class="notion-text notion-block-211b67dbfc9a8073a670cb4d320bc2be">这些参数用户可以完全可控</div><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-211b67dbfc9a80c897cdf96e4cb20197"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column;height:100%"><img style="object-fit:cover" src="https://www.notion.so/image/attachment%3A672e6a1a-0eca-407e-93e5-8467460bb4e2%3A%E6%88%AA%E5%9B%BE2025_06_14-00_02_272x.png?table=block&amp;id=211b67db-fc9a-80c8-97cd-f96e4cb20197&amp;t=211b67db-fc9a-80c8-97cd-f96e4cb20197" alt="notion image" loading="lazy" decoding="async"/></div></figure><div class="notion-text notion-block-211b67dbfc9a80eca69ed29d5d195705"><code class="notion-inline-code">com.qiyuesuo.setup.SetupService#check</code></div><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-211b67dbfc9a806cb025d162a2fda14a"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column;height:100%"><img style="object-fit:cover" src="https://www.notion.so/image/attachment%3A64b1e901-9919-4fc5-921f-ed7766eafdd0%3A%E6%88%AA%E5%9B%BE2025_06_14-00_10_242x.png?table=block&amp;id=211b67db-fc9a-806c-b025-d162a2fda14a&amp;t=211b67db-fc9a-806c-b025-d162a2fda14a" alt="notion image" loading="lazy" decoding="async"/></div></figure><div class="notion-text notion-block-211b67dbfc9a80eb8a82fcbe696fe3cb"><code class="notion-inline-code">com.qiyuesuo.setup.SetupService#dbtest</code></div><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-211b67dbfc9a80c0a9fbfa9fcf0ed468"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column;height:100%"><img style="object-fit:cover" src="https://www.notion.so/image/attachment%3Af438b421-b9d5-4d70-9445-d44cc32d83c9%3A%E6%88%AA%E5%9B%BE2025_06_14-00_10_502x.png?table=block&amp;id=211b67db-fc9a-80c0-a9fb-fa9fcf0ed468&amp;t=211b67db-fc9a-80c0-a9fb-fa9fcf0ed468" alt="notion image" loading="lazy" decoding="async"/></div></figure><div class="notion-text notion-block-211b67dbfc9a8029bfebdd640ba2c6f4"><code class="notion-inline-code">com.qiyuesuo.database.DatabaseService#getConnection</code></div><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-211b67dbfc9a804da368eefc0671ed24"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column;height:100%"><img style="object-fit:cover" src="https://www.notion.so/image/attachment%3A5e143482-ef35-4726-bfd5-5feef3ad5a17%3A%E6%88%AA%E5%9B%BE2025_06_14-00_12_492x.png?table=block&amp;id=211b67db-fc9a-804d-a368-eefc0671ed24&amp;t=211b67db-fc9a-804d-a368-eefc0671ed24" alt="notion image" loading="lazy" decoding="async"/></div></figure><div class="notion-text notion-block-211b67dbfc9a80ef9659c3420f27299b"><code class="notion-inline-code">com.qiyuesuo.database.DatabaseService#getConnectionManager</code></div><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-211b67dbfc9a803c8072c322e06eb774"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column;height:100%"><img style="object-fit:cover" src="https://www.notion.so/image/attachment%3A26992594-2254-4147-a4dd-5749939160d3%3A%E6%88%AA%E5%9B%BE2025_06_14-00_18_182x.png?table=block&amp;id=211b67db-fc9a-803c-8072-c322e06eb774&amp;t=211b67db-fc9a-803c-8072-c322e06eb774" alt="notion image" loading="lazy" decoding="async"/></div></figure><div class="notion-text notion-block-211b67dbfc9a80aabc93cd39820514ac"><code class="notion-inline-code">com.qiyuesuo.database.DatabaseService#getConnectionManager</code></div><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-211b67dbfc9a8070af05f512dfbbefd9"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column;height:100%"><img style="object-fit:cover" src="https://www.notion.so/image/attachment%3Ae769196d-2523-4210-9733-131ef6157b5d%3A%E6%88%AA%E5%9B%BE2025_06_14-00_18_482x.png?table=block&amp;id=211b67db-fc9a-8070-af05-f512dfbbefd9&amp;t=211b67db-fc9a-8070-af05-f512dfbbefd9" alt="notion image" loading="lazy" decoding="async"/></div></figure><div class="notion-text notion-block-211b67dbfc9a80c4897acfb03c30e3af"><code class="notion-inline-code">com.qiyuesuo.database.DatabaseConnection#getConnection</code></div><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-211b67dbfc9a80819bf2e81c68ac4c57"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column;height:100%"><img style="object-fit:cover" src="https://www.notion.so/image/attachment%3Ac4b0f64c-8a21-490e-9315-53e4790d9bcc%3A%E6%88%AA%E5%9B%BE2025_06_14-00_20_012x.png?table=block&amp;id=211b67db-fc9a-8081-9bf2-e81c68ac4c57&amp;t=211b67db-fc9a-8081-9bf2-e81c68ac4c57" alt="notion image" loading="lazy" decoding="async"/></div></figure><div class="notion-text notion-block-211b67dbfc9a80ec946ddb76073aa02a">漏洞sink，jdbc url用户可控导致类加载任意字节码</div><div class="notion-text notion-block-211b67dbfc9a803b8273d38ceaa80409"><code class="notion-inline-code">java.lang.Class#forName(java.lang.String)</code></div><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-211b67dbfc9a80ccbb0ed4df742b9fa3"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column;height:100%"><img style="object-fit:cover" src="https://www.notion.so/image/attachment%3A59aaeed9-aa54-4c53-ac87-a809075fb5f0%3A%E6%88%AA%E5%9B%BE2025_06_14-00_20_402x.png?table=block&amp;id=211b67db-fc9a-80cc-bb0e-d4df742b9fa3&amp;t=211b67db-fc9a-80cc-bb0e-d4df742b9fa3" alt="notion image" loading="lazy" decoding="async"/></div></figure><div class="notion-text notion-block-211b67dbfc9a80ff81ffc9622eb50fdc">整个Gadget</div><div class="notion-blank notion-block-211b67dbfc9a80fd9a3cf662fd28a7b0"> </div><div class="notion-text notion-block-211b67dbfc9a8013845cdb8813f6cfac">系统支持如下数据库驱动</div><div class="notion-text notion-block-210b67dbfc9a8007878ae52a27654eac">从  <code class="notion-inline-code">com.qiyuesuo.config.ConsoleConfiguration</code> 可以看出dbtest接口在setup路径下，不需要鉴权,所以这个洞是一个前台洞</div><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-210b67dbfc9a80c88d3dca268094bc9e"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column;height:100%"><img style="object-fit:cover" src="https://www.notion.so/image/attachment%3Abb4f8534-4cde-40c0-8dd6-af0308acd9c4%3A%E6%88%AA%E5%9B%BE2025_06_13-00_42_242x.png?table=block&amp;id=210b67db-fc9a-80c8-8d3d-ca268094bc9e&amp;t=210b67db-fc9a-80c8-8d3d-ca268094bc9e" alt="notion image" loading="lazy" decoding="async"/></div></figure><div class="notion-text notion-block-210b67dbfc9a80aca9cbd24bb232870b">接口修复前：</div><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-210b67dbfc9a80a0b822cf9eb17bfddd"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column;height:100%"><img style="object-fit:cover" src="https://www.notion.so/image/attachment%3Af343b208-c3da-454a-bdb7-765e3225f6db%3A%E6%88%AA%E5%9B%BE2025_06_13-00_58_042x.png?table=block&amp;id=210b67db-fc9a-80a0-b822-cf9eb17bfddd&amp;t=210b67db-fc9a-80a0-b822-cf9eb17bfddd" alt="notion image" loading="lazy" decoding="async"/></div></figure><div class="notion-blank notion-block-210b67dbfc9a80549782fe241b303a10"> </div><div class="notion-text notion-block-210b67dbfc9a80098175c40e301a9baa">补丁修复：</div><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-210b67dbfc9a808680c2f553f9483902"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column;height:100%"><img style="object-fit:cover" src="https://www.notion.so/image/attachment%3A556667ec-ad59-47c5-87b5-f403aeb03c7d%3A%E6%88%AA%E5%9B%BE2025_06_13-00_55_022x.png?table=block&amp;id=210b67db-fc9a-8086-80c2-f553f9483902&amp;t=210b67db-fc9a-8086-80c2-f553f9483902" alt="notion image" loading="lazy" decoding="async"/></div></figure><div class="notion-blank notion-block-210b67dbfc9a8010b786d03f061e662b"> </div><div class="notion-text notion-block-210b67dbfc9a80e2898fe80999c7989d">接口修复后：</div><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-210b67dbfc9a80178b36c35a44a880c1"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column;height:100%"><img style="object-fit:cover" src="https://www.notion.so/image/attachment%3Ab0f011da-3b94-4829-813e-caeed372ce6c%3A%E6%88%AA%E5%9B%BE2025_06_13-00_55_582x.png?table=block&amp;id=210b67db-fc9a-8017-8b36-c35a44a880c1&amp;t=210b67db-fc9a-8017-8b36-c35a44a880c1" alt="notion image" loading="lazy" decoding="async"/></div></figure><h3 class="notion-h notion-h2 notion-h-indent-0 notion-block-20fb67dbfc9a80b4a506c50214f447f3" data-id="20fb67dbfc9a80b4a506c50214f447f3"><span><div id="20fb67dbfc9a80b4a506c50214f447f3" class="notion-header-anchor"></div><a class="notion-hash-link" href="#20fb67dbfc9a80b4a506c50214f447f3" title="MySql任意文件读取"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title"><b>MySql任意文件读取</b></span></span></h3><div class="notion-text notion-block-211b67dbfc9a808da44bc4d0a81c37b2">在下面这些范围的都能打这个洞：</div><div class="notion-text notion-block-210b67dbfc9a80ef9211f665cfae016d">Payload:</div><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-210b67dbfc9a804fb3a6e81f51fd2904"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column;height:100%"><img style="object-fit:cover" src="https://www.notion.so/image/attachment%3Aaee51dc3-6340-48e7-b724-2b449bf40c60%3A%E6%88%AA%E5%9B%BE2025_06_13-02_39_112x.png?table=block&amp;id=210b67db-fc9a-804f-b3a6-e81f51fd2904&amp;t=210b67db-fc9a-804f-b3a6-e81f51fd2904" alt="notion image" loading="lazy" decoding="async"/></div></figure><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-210b67dbfc9a8058b602fed90a9d508d"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column;height:100%"><img style="object-fit:cover" src="https://www.notion.so/image/attachment%3A7af47ae1-96dd-488b-a614-26abe1a469e3%3Aimage.png?table=block&amp;id=210b67db-fc9a-8058-b602-fed90a9d508d&amp;t=210b67db-fc9a-8058-b602-fed90a9d508d" alt="notion image" loading="lazy" decoding="async"/></div></figure><div class="notion-text notion-block-210b67dbfc9a80ad8daaf482b5a03602">文件读取如图所示：</div><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-210b67dbfc9a802b9480d786b1c31e52"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column;height:100%"><img style="object-fit:cover" src="https://www.notion.so/image/attachment%3A32e2ca2f-3cce-4dbd-bc4b-8a678b0d665a%3A%E6%88%AA%E5%9B%BE2025_06_13-02_40_232x.png?table=block&amp;id=210b67db-fc9a-802b-9480-d786b1c31e52&amp;t=210b67db-fc9a-802b-9480-d786b1c31e52" alt="notion image" loading="lazy" decoding="async"/></div></figure><div class="notion-blank notion-block-210b67dbfc9a8065a97ada3a386ca2bf"> </div><h3 class="notion-h notion-h2 notion-h-indent-0 notion-block-20fb67dbfc9a80a1a36ad5f3ca850a4b" data-id="20fb67dbfc9a80a1a36ad5f3ca850a4b"><span><div id="20fb67dbfc9a80a1a36ad5f3ca850a4b" class="notion-header-anchor"></div><a class="notion-hash-link" href="#20fb67dbfc9a80a1a36ad5f3ca850a4b" title="PostgreSQL RCE"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title"><b>PostgreSQL RCE</b></span></span></h3><div class="notion-text notion-block-210b67dbfc9a8050baf8fa9a33372054">打CVE-2022-21724需要满足PostgreSQL版本如下：</div><div class="notion-text notion-block-211b67dbfc9a8000a883da612cf4f4a6">实测在5.1.*的20241122版本中<b>PostgreSQL </b>版本为42.5.5不满足</div><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-211b67dbfc9a80d8afb6e6e0cb346962"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column;height:100%"><img style="object-fit:cover" src="https://www.notion.so/image/attachment%3Aff8cc0ff-d963-4a3a-85c5-9ec33787d43b%3A%E6%88%AA%E5%9B%BE2025_06_13-17_08_452x.png?table=block&amp;id=211b67db-fc9a-80d8-afb6-e6e0cb346962&amp;t=211b67db-fc9a-80d8-afb6-e6e0cb346962" alt="notion image" loading="lazy" decoding="async"/></div></figure><div class="notion-text notion-block-211b67dbfc9a80b68a3be3a68d849b9b">在4.3.*的20230203版本中满足版本</div><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-211b67dbfc9a80728d22fe346b862feb"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column;height:100%"><img style="object-fit:cover" src="https://www.notion.so/image/attachment%3A1960e83d-0f66-4824-8ce0-650c9f25888f%3A%E6%88%AA%E5%9B%BE2025_06_13-17_30_452x.png?table=block&amp;id=211b67db-fc9a-8072-8d22-fe346b862feb&amp;t=211b67db-fc9a-8072-8d22-fe346b862feb" alt="notion image" loading="lazy" decoding="async"/></div></figure><div class="notion-text notion-block-211b67dbfc9a80d0a2a4d34e1dacd6cf">预测能打的版本在下面</div><div class="notion-text notion-block-210b67dbfc9a80aa8ca2eb30df540a32">直接用Java Chains 起一个Http Server Payload「这里直接以打内存马为例，实战中一般是先打DNSLOG，再打内存马」</div><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-210b67dbfc9a80e68c6dd76889d6d1f8"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column;height:100%"><img style="object-fit:cover" src="https://www.notion.so/image/attachment%3Ad6f2ad52-b609-46d2-ae50-f7fde71f7273%3A%E6%88%AA%E5%9B%BE2025_06_13-01_42_432x.png?table=block&amp;id=210b67db-fc9a-80e6-8c6d-d76889d6d1f8&amp;t=210b67db-fc9a-80e6-8c6d-d76889d6d1f8" alt="notion image" loading="lazy" decoding="async"/></div></figure><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-210b67dbfc9a80f98807dba11801bc73"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column;height:100%"><img style="object-fit:cover" src="https://www.notion.so/image/attachment%3Aa89e7077-9996-49ad-9a33-2157ae347597%3A%E6%88%AA%E5%9B%BE2025_06_13-01_43_232x.png?table=block&amp;id=210b67db-fc9a-80f9-8807-dba11801bc73&amp;t=210b67db-fc9a-80f9-8807-dba11801bc73" alt="notion image" loading="lazy" decoding="async"/></div></figure><div class="notion-text notion-block-210b67dbfc9a808ba84bd3f565db8d94">payload1:</div><div class="notion-blank notion-block-211b67dbfc9a80b78b0fd689f698262f"> </div><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-210b67dbfc9a8085a6fcdb444edd126e"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column;height:100%"><img style="object-fit:cover" src="https://www.notion.so/image/attachment%3A006648f3-1ba5-4842-97a8-bb6a919e610c%3Aimage.png?table=block&amp;id=210b67db-fc9a-8085-a6fc-db444edd126e&amp;t=210b67db-fc9a-8085-a6fc-db444edd126e" alt="notion image" loading="lazy" decoding="async"/></div></figure><div class="notion-blank notion-block-211b67dbfc9a805c913cc3e52e3d452a"> </div><div class="notion-text notion-block-20fb67dbfc9a80c29816e489300dbf8d">payload2:</div><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-210b67dbfc9a8071bdb2ef8fc55714f4"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column;height:100%"><img style="object-fit:cover" src="https://www.notion.so/image/attachment%3A9d43a8c5-03c2-4342-9e2d-a728c5643f49%3A%E6%88%AA%E5%9B%BE2025_06_13-02_25_072x.png?table=block&amp;id=210b67db-fc9a-8071-bdb2-ef8fc55714f4&amp;t=210b67db-fc9a-8071-bdb2-ef8fc55714f4" alt="notion image" loading="lazy" decoding="async"/></div></figure><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-210b67dbfc9a80828dfff8a8ef4923b6"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column;height:100%"><img style="object-fit:cover" src="https://www.notion.so/image/attachment%3A380e9dba-e6d6-438d-8918-926f8ac693fa%3Aimage.png?table=block&amp;id=210b67db-fc9a-8082-8dff-f8a8ef4923b6&amp;t=210b67db-fc9a-8082-8dff-f8a8ef4923b6" alt="notion image" loading="lazy" decoding="async"/></div></figure><div class="notion-blank notion-block-210b67dbfc9a80c2816deb9b3ca86165"> </div><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-210b67dbfc9a80d6b077ca6ffe7a52df"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column;height:100%"><img style="object-fit:cover" src="https://www.notion.so/image/attachment%3A20bd3d84-c804-47b7-934a-1385d9f034bf%3Aimage.png?table=block&amp;id=210b67db-fc9a-80d6-b077-ca6ffe7a52df&amp;t=210b67db-fc9a-80d6-b077-ca6ffe7a52df" alt="notion image" loading="lazy" decoding="async"/></div></figure><div class="notion-blank notion-block-211b67dbfc9a8018a00bccc46fbdce21"> </div><h3 class="notion-h notion-h2 notion-h-indent-0 notion-block-211b67dbfc9a80c6a698caf82c3bdf54" data-id="211b67dbfc9a80c6a698caf82c3bdf54"><span><div id="211b67dbfc9a80c6a698caf82c3bdf54" class="notion-header-anchor"></div><a class="notion-hash-link" href="#211b67dbfc9a80c6a698caf82c3bdf54" title="参考"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">参考</span></span></h3><div class="notion-text notion-block-211b67dbfc9a8086a317cffe04947dcc">感谢le1a师傅的帮助</div><div class="notion-row"><a target="_blank" rel="noopener noreferrer" class="notion-bookmark notion-block-211b67dbfc9a80dea4d7eca196fc55f9" href="https://le1a.github.io/article/20f7c031-1dd6-80e5-9c91-c325793a6c0e#20f7c0311dd6808b8e07de2070a8b01f"><div><div class="notion-bookmark-title">契约锁 dbtest JDBC 任意文件文件读取 &amp; 远程代码执行漏洞 | Le1a的菜园坝</div><div class="notion-bookmark-description">一个NotionNext搭建的博客</div><div class="notion-bookmark-link"><div class="notion-bookmark-link-icon"><img src="https://www.notion.so/image/https%3A%2F%2Fle1a.github.io%2Ffavicon.ico?table=block&amp;id=211b67db-fc9a-80de-a4d7-eca196fc55f9&amp;t=211b67db-fc9a-80de-a4d7-eca196fc55f9" alt="契约锁 dbtest JDBC 任意文件文件读取 &amp; 远程代码执行漏洞 | Le1a的菜园坝" loading="lazy" decoding="async"/></div><div class="notion-bookmark-link-text">https://le1a.github.io/article/20f7c031-1dd6-80e5-9c91-c325793a6c0e#20f7c0311dd6808b8e07de2070a8b01f</div></div></div><div class="notion-bookmark-image"><img style="object-fit:cover" src="https://www.notion.so/image/https%3A%2F%2Fimages.unsplash.com%2Fphoto-1518791841217-8f162f1e1131%3Fixlib%3Drb-4.1.0%26q%3D50%26fm%3Dwebp%26crop%3Dentropy%26cs%3Dsrgb%26t%3D20f7c031-1dd6-80e5-9c91-c325793a6c0e%26width%3D800%26fmt%3Dwebp?table=block&amp;id=211b67db-fc9a-80de-a4d7-eca196fc55f9&amp;t=211b67db-fc9a-80de-a4d7-eca196fc55f9" alt="契约锁 dbtest JDBC 任意文件文件读取 &amp; 远程代码执行漏洞 | Le1a的菜园坝" loading="lazy" decoding="async"/></div></a></div><div class="notion-row"><a target="_blank" rel="noopener noreferrer" class="notion-bookmark notion-block-211b67dbfc9a8039bfcac45fd13c7456" href="https://xz.aliyun.com/news/18245"><div><div class="notion-bookmark-title">xz.aliyun.com</div><div class="notion-bookmark-link"><div class="notion-bookmark-link-icon"><img src="https://www.notion.so/image/https%3A%2F%2Fxz.aliyun.com%2Ffavicon.ico?table=block&amp;id=211b67db-fc9a-8039-bfca-c45fd13c7456&amp;t=211b67db-fc9a-8039-bfca-c45fd13c7456" alt="xz.aliyun.com" loading="lazy" decoding="async"/></div><div class="notion-bookmark-link-text">https://xz.aliyun.com/news/18245</div></div></div></a></div><div class="notion-blank notion-block-211b67dbfc9a80a0b120dd5813ab4175"> </div></main></div>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[x86汇编语言指北(汉化翻译)]]></title>
            <link>https://thestar0.github.io//article/2023/01/30/f036a70a-0a8c-4715-b382-3b70ee00ea05</link>
            <guid>https://thestar0.github.io//article/2023/01/30/f036a70a-0a8c-4715-b382-3b70ee00ea05</guid>
            <pubDate>Mon, 30 Jan 2023 16:00:00 GMT</pubDate>
            <description><![CDATA[x86汇编学习]]></description>
            <content:encoded><![CDATA[<div id="notion-article" class="mx-auto overflow-hidden "><main class="notion light-mode notion-page notion-block-f036a70a0a8c4715b3823b70ee00ea05"><div class="notion-viewport"></div><div class="notion-collection-page-properties"></div><h2 class="notion-h notion-h1 notion-h-indent-0 notion-block-f57df6d4dc3d41d6b4fa19cce3ac63f8" data-id="f57df6d4dc3d41d6b4fa19cce3ac63f8"><span><div id="f57df6d4dc3d41d6b4fa19cce3ac63f8" class="notion-header-anchor"></div><a class="notion-hash-link" href="#f57df6d4dc3d41d6b4fa19cce3ac63f8" title="简介(Introduction)"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">简介(<b>Introduction</b>)</span></span></h2><h2 class="notion-h notion-h1 notion-h-indent-0 notion-block-1c9f04c6fee040968012b5123c07129f" data-id="1c9f04c6fee040968012b5123c07129f"><span><div id="1c9f04c6fee040968012b5123c07129f" class="notion-header-anchor"></div><a class="notion-hash-link" href="#1c9f04c6fee040968012b5123c07129f" title="本文github地址"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">本文github地址</span></span></h2><a target="_blank" rel="noopener noreferrer" href="https://github.com/thestar0/ASM_WIKI" class="notion-external notion-external-block notion-row notion-block-461d67f977e745b08efa20edc8e1bb3b"><div class="notion-external-image"><svg viewBox="0 0 260 260"><g><path d="M128.00106,0 C57.3172926,0 0,57.3066942 0,128.00106 C0,184.555281 36.6761997,232.535542 87.534937,249.460899 C93.9320223,250.645779 96.280588,246.684165 96.280588,243.303333 C96.280588,240.251045 96.1618878,230.167899 96.106777,219.472176 C60.4967585,227.215235 52.9826207,204.369712 52.9826207,204.369712 C47.1599584,189.574598 38.770408,185.640538 38.770408,185.640538 C27.1568785,177.696113 39.6458206,177.859325 39.6458206,177.859325 C52.4993419,178.762293 59.267365,191.04987 59.267365,191.04987 C70.6837675,210.618423 89.2115753,204.961093 96.5158685,201.690482 C97.6647155,193.417512 100.981959,187.77078 104.642583,184.574357 C76.211799,181.33766 46.324819,170.362144 46.324819,121.315702 C46.324819,107.340889 51.3250588,95.9223682 59.5132437,86.9583937 C58.1842268,83.7344152 53.8029229,70.715562 60.7532354,53.0843636 C60.7532354,53.0843636 71.5019501,49.6441813 95.9626412,66.2049595 C106.172967,63.368876 117.123047,61.9465949 128.00106,61.8978432 C138.879073,61.9465949 149.837632,63.368876 160.067033,66.2049595 C184.49805,49.6441813 195.231926,53.0843636 195.231926,53.0843636 C202.199197,70.715562 197.815773,83.7344152 196.486756,86.9583937 C204.694018,95.9223682 209.660343,107.340889 209.660343,121.315702 C209.660343,170.478725 179.716133,181.303747 151.213281,184.472614 C155.80443,188.444828 159.895342,196.234518 159.895342,208.176593 C159.895342,225.303317 159.746968,239.087361 159.746968,243.303333 C159.746968,246.709601 162.05102,250.70089 168.53925,249.443941 C219.370432,232.499507 256,184.536204 256,128.00106 C256,57.3066942 198.691187,0 128.00106,0 Z M47.9405593,182.340212 C47.6586465,182.976105 46.6581745,183.166873 45.7467277,182.730227 C44.8183235,182.312656 44.2968914,181.445722 44.5978808,180.80771 C44.8734344,180.152739 45.876026,179.97045 46.8023103,180.409216 C47.7328342,180.826786 48.2627451,181.702199 47.9405593,182.340212 Z M54.2367892,187.958254 C53.6263318,188.524199 52.4329723,188.261363 51.6232682,187.366874 C50.7860088,186.474504 50.6291553,185.281144 51.2480912,184.70672 C51.8776254,184.140775 53.0349512,184.405731 53.8743302,185.298101 C54.7115892,186.201069 54.8748019,187.38595 54.2367892,187.958254 Z M58.5562413,195.146347 C57.7719732,195.691096 56.4895886,195.180261 55.6968417,194.042013 C54.9125733,192.903764 54.9125733,191.538713 55.713799,190.991845 C56.5086651,190.444977 57.7719732,190.936735 58.5753181,192.066505 C59.3574669,193.22383 59.3574669,194.58888 58.5562413,195.146347 Z M65.8613592,203.471174 C65.1597571,204.244846 63.6654083,204.03712 62.5716717,202.981538 C61.4524999,201.94927 61.1409122,200.484596 61.8446341,199.710926 C62.5547146,198.935137 64.0575422,199.15346 65.1597571,200.200564 C66.2704506,201.230712 66.6095936,202.705984 65.8613592,203.471174 Z M75.3025151,206.281542 C74.9930474,207.284134 73.553809,207.739857 72.1039724,207.313809 C70.6562556,206.875043 69.7087748,205.700761 70.0012857,204.687571 C70.302275,203.678621 71.7478721,203.20382 73.2083069,203.659543 C74.6539041,204.09619 75.6035048,205.261994 75.3025151,206.281542 Z M86.046947,207.473627 C86.0829806,208.529209 84.8535871,209.404622 83.3316829,209.4237 C81.8013,209.457614 80.563428,208.603398 80.5464708,207.564772 C80.5464708,206.498591 81.7483088,205.631657 83.2786917,205.606221 C84.8005962,205.576546 86.046947,206.424403 86.046947,207.473627 Z M96.6021471,207.069023 C96.7844366,208.099171 95.7267341,209.156872 94.215428,209.438785 C92.7295577,209.710099 91.3539086,209.074206 91.1652603,208.052538 C90.9808515,206.996955 92.0576306,205.939253 93.5413813,205.66582 C95.054807,205.402984 96.4092596,206.021919 96.6021471,207.069023 Z" fill="#161614"></path></g></svg></div><div class="notion-external-description"><div class="notion-external-title">ASM_WIKI</div><div class="notion-external-block-desc">thestar0<span> • </span>Updated May 27, 2025</div></div></a><div class="notion-text notion-block-48948b7370f74dd3a31e989523fddef8">里面有每个示例文件源码以及编译后的二进制文件</div><h3 class="notion-h notion-h2 notion-h-indent-1 notion-block-5f6a7e2014dd412b8b5b787dc874b12d" data-id="5f6a7e2014dd412b8b5b787dc874b12d"><span><div id="5f6a7e2014dd412b8b5b787dc874b12d" class="notion-header-anchor"></div><a class="notion-hash-link" href="#5f6a7e2014dd412b8b5b787dc874b12d" title="什么是汇编语言？"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">什么是汇编语言？</span></span></h3><div class="notion-text notion-block-66bc634187ee4b0eaef8afd0306c7080">每台个人计算机都有一个微处理器，用于管理计算机的算术，逻辑和控制活动。</div><div class="notion-text notion-block-eb9df51f64b64f1380bde664e79e16fe">每个处理器系列都有自己的一套指令，用于处理各种操作，例如从键盘输入，在屏幕上显示信息以及执行各种其他工作。 这些指令集称为 “机器语言指令”。</div><div class="notion-text notion-block-4c59255e973c4c58a12f9eab80c7275a">处理器只能理解机器语言0(off)和1(on)指令。 但是，在软件开发中使用机器语言过于模糊和复杂。 因此，低级汇编语言是针对特定的处理器系列而设计的，这些处理器代表符号代码中的各种指令和更易理解的形式。</div><h3 class="notion-h notion-h2 notion-h-indent-1 notion-block-b6e44340334e4e169aee09896206dad6" data-id="b6e44340334e4e169aee09896206dad6"><span><div id="b6e44340334e4e169aee09896206dad6" class="notion-header-anchor"></div><a class="notion-hash-link" href="#b6e44340334e4e169aee09896206dad6" title="汇编语言优点"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">汇编语言优点</span></span></h3><ul class="notion-list notion-list-disc notion-block-6b22485fa4904ac2afda1ee969f9acd5"><li>程序如何与 OS(计算机操作系统)，处理器(CPU)和 BIOS 连接</li></ul><ul class="notion-list notion-list-disc notion-block-c6d73df6e7c34e96a64be82cccaf45ea"><li>如何在内存和其他外部设备中表示数据</li></ul><ul class="notion-list notion-list-disc notion-block-ab78c074ec7c41dd8abdd5795b8cd750"><li>处理器如何访问和执行指令</li></ul><ul class="notion-list notion-list-disc notion-block-57b0ef8514e04a0fb30e556622a1a830"><li>指令如何访问和处理数据</li></ul><ul class="notion-list notion-list-disc notion-block-22b3bf51e8544e948c575fcaa10cc4f7"><li>程序如何访问外部设备</li></ul><ul class="notion-list notion-list-disc notion-block-51a9e64c65314a7088136209948e677a"><li>它需要更少的内存和执行时间</li></ul><ul class="notion-list notion-list-disc notion-block-e3ac99274ef848329216d9ecc99393f9"><li>它以更简单的方式允许特定于硬件的复杂作业</li></ul><ul class="notion-list notion-list-disc notion-block-1f68e99e0c2b43128856fd40c3fac3d8"><li>它适用于对时间要求严格的工作</li></ul><ul class="notion-list notion-list-disc notion-block-b90a5a1a0ce14e79975f517d171946f7"><li>它最适合编写中断服务程序和其他内存驻留程序</li></ul><h3 class="notion-h notion-h2 notion-h-indent-1 notion-block-507923d452ea44bfa77ebcf51860a5b7" data-id="507923d452ea44bfa77ebcf51860a5b7"><span><div id="507923d452ea44bfa77ebcf51860a5b7" class="notion-header-anchor"></div><a class="notion-hash-link" href="#507923d452ea44bfa77ebcf51860a5b7" title="PC 硬件的基本功能"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">PC 硬件的基本功能</span></span></h3><div class="notion-text notion-block-09726d072d034b1ea64af2e5b8d0ebb2">PC 的主要内部硬件包括处理器(cpu)，存储器(memory)和寄存器(register)。 </div><div class="notion-text notion-block-bd1c988a48694d23933f413a45698b75">cpu是人的大脑，负责控制全身和运算</div><div class="notion-text notion-block-ad356da0ef8143cda7c8b9422383fda1">内存是人的记忆，负责临时存储</div><div class="notion-text notion-block-bc631c0418b64f64a04201647c50fd34">硬盘是人的笔记本，负责永久存储</div><div class="notion-text notion-block-abea980eaf9e48688edfb179fe0c70f1">输入设备是耳朵或眼睛或嘴巴，负责接收外部的信息存入内存</div><div class="notion-text notion-block-52d76b7f29d0466ca91caa9e4d88ad12">输出设备是你的脸部(表情)或者屁股，负责经过处理后输出的结果</div><div class="notion-text notion-block-1fe78f55129344cf85faaf730d50c433">以上所有的设备都通过总线连接，总线相当于人的神经</div><div class="notion-text notion-block-c926216c5341492cb9f569bf46deaaf0">寄存器是暂存指令,数据和地址的处理器组件。 </div><div class="notion-text notion-block-c54a0a19e3ba40f8be76b964a7409101">要执行程序，系统会将程序从外部设备(也就是外存)复制到内部存储器(内存)中。 然后处理器执行程序指令。</div><div class="notion-text notion-block-536cfb7abf724b95989a53b95ed9b36e">处理器支持以下数据大小 </div><ul class="notion-list notion-list-disc notion-block-9373013aa9c94e6da6f2d43f6e937c20"><li>位(bit)</li></ul><ul class="notion-list notion-list-disc notion-block-bc54b4d69d3845ab951aded5034ad5b1"><li>字节(byte) 数据存储基本单位 = 8(bit)</li></ul><ul class="notion-list notion-list-disc notion-block-e9f9b7213b464c0892928b479380b38a"><li>字(word):  2byte(16bit)</li></ul><ul class="notion-list notion-list-disc notion-block-1c6f721295d44829b36df9b024a441e8"><li>双字(dword): 4 byte(32bit)</li></ul><ul class="notion-list notion-list-disc notion-block-25d9f0c1d2224b869e105c507ea97c9f"><li>四字(qword): 8byte(64bit)</li></ul><ul class="notion-list notion-list-disc notion-block-386b40b98def4cea89666b6ba4c30c51"><li>代码块: 16byte(128bit)</li></ul><ul class="notion-list notion-list-disc notion-block-954a576a0e7c423d9cf88f0f66a1189d"><li>千字节(kb):1024 byte </li></ul><ul class="notion-list notion-list-disc notion-block-08c9e18ae9194d49aff3e8cbed001dad"><li>兆字节(mb): 1,048,576 byte</li></ul><h3 class="notion-h notion-h2 notion-h-indent-1 notion-block-89ca9f402813419db622da7b25e6e29e" data-id="89ca9f402813419db622da7b25e6e29e"><span><div id="89ca9f402813419db622da7b25e6e29e" class="notion-header-anchor"></div><a class="notion-hash-link" href="#89ca9f402813419db622da7b25e6e29e" title="二进制数字系统 (Binary Number System)"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">二进制数字系统 (Binary Number System)</span></span></h3><div class="notion-text notion-block-042713bb1ee741e6953b98e76bd0e593">每个数字系统使用位置表示法，即写入数字的每个位置具有不同的位置值。 每个位置的值是基数的位号幂，例如第七位，位号是6，位置值是64</div><div class="notion-text notion-block-910fa290db3c4862b6c5aabb8d910892">二进制数的基数是2，并且这些幂是从 0 开始并且增加 1。</div><div class="notion-text notion-block-c342ad473e6e40e38208dd974cc40e3e">下表显示了8bit二进制数的位置值和位号的关系</div><table class="notion-simple-table notion-block-c74fe5abb1c340d9a6973a03d0a6abac"><tbody><tr class="notion-simple-table-row notion-block-be7c03ca106646bb8698baad116bb732"><td class="" style="width:120px"><div class="notion-simple-table-cell">该位的bit值</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">1</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">1</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">1</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">1</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">1</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">1</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">1</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">1</div></td></tr><tr class="notion-simple-table-row notion-block-09251b931a6144f7a568a26b32d3c5a8"><td class="" style="width:120px"><div class="notion-simple-table-cell">该位的值</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">128</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">64</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">32</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">16</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">8</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">4</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">2</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">1</div></td></tr><tr class="notion-simple-table-row notion-block-1d458a16ee8d4691b0fa7585953d9afc"><td class="" style="width:120px"><div class="notion-simple-table-cell">该位的位号</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">7</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">6</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">5</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">4</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">3</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">2</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">1</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">0</div></td></tr></tbody></table><div class="notion-text notion-block-aa7d3b97579b497aa27dc5908da804b0"> 8bit二进制数的最大值是</div><div class="notion-text notion-block-31fb384e9a44425b97a3ce5cb1dd70bf">1 + 2 + 4 + 8 +16 + 32 + 64 + 128 = 255</div><div class="notion-text notion-block-07569d179afd4ee6a555cc9ca9d92467">与 2^8 - 1 相同。</div><h3 class="notion-h notion-h2 notion-h-indent-1 notion-block-879d972322a248a68828c164dc735f32" data-id="879d972322a248a68828c164dc735f32"><span><div id="879d972322a248a68828c164dc735f32" class="notion-header-anchor"></div><a class="notion-hash-link" href="#879d972322a248a68828c164dc735f32" title="十六进制数字系统 (Hexadecimal Number System)"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">十六进制数字系统 (Hexadecimal Number System)</span></span></h3><div class="notion-text notion-block-624be83b91c143faa057b968412d2b42">十六进制使用基数 16. 此系统中的数字范围为 0 到 15,字母 A 到 F 用于表示与十进制值 10 到 15 对应的十六进制数字</div><div class="notion-text notion-block-c221b99761844cad86681dd9c96a4e9e">计算中的十六进制数用于缩写冗长的二进制表示。</div><div class="notion-text notion-block-ada2ed330d99409c8b4880596b79fe68">十六进制数可以通过将每个字节分成两半并表示每个半字节的值来表示二进制数据。</div><div class="notion-text notion-block-12af2222d4b3473e8230dfb13e9ba731">下表提供了十进制，二进制和十六进制的等效项</div><table class="notion-simple-table notion-block-20c0b85932db4c06a7cba864074e85fd"><tbody><tr class="notion-simple-table-row notion-block-3d3e17629e204e06869b860a60bbf48c"><td class="" style="width:120px"><div class="notion-simple-table-cell">十进制数</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">二进制表示</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">十六进制表示</div></td></tr><tr class="notion-simple-table-row notion-block-2ea797c0b19b4d12a2edc099b4f96ce0"><td class="" style="width:120px"><div class="notion-simple-table-cell">0</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">0</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">0</div></td></tr><tr class="notion-simple-table-row notion-block-4f3bda82729a4db694b952df66b9e71f"><td class="" style="width:120px"><div class="notion-simple-table-cell">1</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">1</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">1</div></td></tr><tr class="notion-simple-table-row notion-block-53f847d5e8b94770b9cca5edff32d171"><td class="" style="width:120px"><div class="notion-simple-table-cell">2</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">10</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">2</div></td></tr><tr class="notion-simple-table-row notion-block-9489dd15d6cd4829810f34633bf57115"><td class="" style="width:120px"><div class="notion-simple-table-cell">3</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">11</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">3</div></td></tr><tr class="notion-simple-table-row notion-block-6fdfc8188b5447c98566edfcbf089199"><td class="" style="width:120px"><div class="notion-simple-table-cell">4</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">100</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">4</div></td></tr><tr class="notion-simple-table-row notion-block-a6f0043e86a9489d98b6dc90069c47a6"><td class="" style="width:120px"><div class="notion-simple-table-cell">5</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">101</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">5</div></td></tr><tr class="notion-simple-table-row notion-block-1acefbd39a874e94a6a13198086e50a8"><td class="" style="width:120px"><div class="notion-simple-table-cell">6</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">110</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">6</div></td></tr><tr class="notion-simple-table-row notion-block-6077995895bc4d3aa8633271c09560a9"><td class="" style="width:120px"><div class="notion-simple-table-cell">7</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">111</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">7</div></td></tr><tr class="notion-simple-table-row notion-block-6fad25dcdccc4a60ba3a9cca1fdc562a"><td class="" style="width:120px"><div class="notion-simple-table-cell">8</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">1000</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">8</div></td></tr><tr class="notion-simple-table-row notion-block-ff78cfd163f749a782aea405b52791f7"><td class="" style="width:120px"><div class="notion-simple-table-cell">9</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">1001</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">9</div></td></tr><tr class="notion-simple-table-row notion-block-ae00a165c2404a7bb2ec8c845d476970"><td class="" style="width:120px"><div class="notion-simple-table-cell">10</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">1010</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">A</div></td></tr><tr class="notion-simple-table-row notion-block-dfb22a86c0e844a587ec2dff1e1022f0"><td class="" style="width:120px"><div class="notion-simple-table-cell">11</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">1011</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">B</div></td></tr><tr class="notion-simple-table-row notion-block-3bac1f69141f48c6877a56df40734db3"><td class="" style="width:120px"><div class="notion-simple-table-cell">12</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">1100</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">C</div></td></tr><tr class="notion-simple-table-row notion-block-db4f53cf16344851a3355f445680b794"><td class="" style="width:120px"><div class="notion-simple-table-cell">13</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">1101</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">D</div></td></tr><tr class="notion-simple-table-row notion-block-7d2c0d0b1b924195bd350dd06619b612"><td class="" style="width:120px"><div class="notion-simple-table-cell">14</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">1110</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">E</div></td></tr><tr class="notion-simple-table-row notion-block-1bbab80bb3ab4dbf94a699ea9183cf71"><td class="" style="width:120px"><div class="notion-simple-table-cell">15</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">1111</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">F</div></td></tr></tbody></table><div class="notion-text notion-block-d42d806585134e2080efee8f86044ee9">要将二进制数转换为十六进制等效值，可以从右侧开始将其分为 4 个连续组的组，并将这些组写在十六进制数的相应数字上</div><div class="notion-text notion-block-48699ad0ae2d42b6b76440395e525e0e">示例(<b>Example)</b></div><div class="notion-text notion-block-790d68e2387e4ecc82ef3a2649ce324b">二进制数 1000 1100 1101 0001 </div><div class="notion-text notion-block-112d769450c54034bdf74ae754bf76e5">相当于十六进制 -8 C D 1</div><div class="notion-text notion-block-faed2237fdcb4dc0ab43855d47c14f4e">要将十六进制数转换为二进制数，只需将每个十六进制数写入其 4 位二进制数。</div><div class="notion-text notion-block-527a53e9b97046e7a3b5ab81535eef4e">示例(<b>Example)</b></div><div class="notion-text notion-block-ef939e14585441eab822844eea5aec05">十六进制数 F A D 8 </div><div class="notion-text notion-block-1bd82ffc349541089db214aaf084fd00">等效于二进制 </div><div class="notion-text notion-block-3a139f087812410ca934a2733e5b7661">1111 1010 1101 1000</div><h3 class="notion-h notion-h2 notion-h-indent-1 notion-block-2f4e6b4071924c749c313eb0c20efd0d" data-id="2f4e6b4071924c749c313eb0c20efd0d"><span><div id="2f4e6b4071924c749c313eb0c20efd0d" class="notion-header-anchor"></div><a class="notion-hash-link" href="#2f4e6b4071924c749c313eb0c20efd0d" title="二进制算术运算"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">二进制算术运算</span></span></h3><div class="notion-text notion-block-fcfeb07baf5b45899954723f57bbd8c8">下表说明了二元加法的四个简单规则 -</div><table class="notion-simple-table notion-block-35d19b1454fd4e3a8026718088a1e4b9"><tbody><tr class="notion-simple-table-row notion-block-2083fbe7614841728576a4a2ef3ea4af"><td class="" style="width:120px"><div class="notion-simple-table-cell">（i）</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">（ⅱ）</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">（ⅲ）</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">（ⅳ）</div></td></tr><tr class="notion-simple-table-row notion-block-20a586e1c1754a5fa46fdea73703b47b"><td class="" style="width:120px"><div class="notion-simple-table-cell">0</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">1</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">1</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">1</div></td></tr><tr class="notion-simple-table-row notion-block-32a366cb7ef64ec398b729e4b3d2f799"><td class="" style="width:120px"><div class="notion-simple-table-cell">+0</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">+0</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">+1</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">+1</div></td></tr><tr class="notion-simple-table-row notion-block-7804a4e27dcf4e2dbea7faa7f130ea39"><td class="" style="width:120px"><div class="notion-simple-table-cell">=0</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">=1</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">=10</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">=11</div></td></tr></tbody></table><div class="notion-text notion-block-89162a1162524a14bf5f7099887eb43e">示例(<b>Example)</b></div><table class="notion-simple-table notion-block-aa4670c43e904f41b816f0e1457a6956"><tbody><tr class="notion-simple-table-row notion-block-4de1ffe5a7b44bb79f5383c29f7b615c"><td class="" style="width:120px"><div class="notion-simple-table-cell">十进制</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">二进制</div></td></tr><tr class="notion-simple-table-row notion-block-1c88792ce476490b8dd856ace093299c"><td class="" style="width:120px"><div class="notion-simple-table-cell">60</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">00111100</div></td></tr><tr class="notion-simple-table-row notion-block-e29cae462490478aa93a858edaf7d7a9"><td class="" style="width:120px"><div class="notion-simple-table-cell">+42</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">00101010</div></td></tr><tr class="notion-simple-table-row notion-block-dd1d602be26045d6acfb3005bcb88ce8"><td class="" style="width:120px"><div class="notion-simple-table-cell">102</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">01100110</div></td></tr></tbody></table><div class="notion-text notion-block-76371745b48c4820bd4affd1eca36eed">负二进制值是以二进制的补码计算 </div><div class="notion-text notion-block-27cd32a674144b329fc75f7fe08f5cba">根据此规则，将二进制数转换为其负值，首先转换成反码，然后加一（如果溢出，则舍去）</div><table class="notion-simple-table notion-block-52c6054120b648a89e0fbce294f01de8"><tbody><tr class="notion-simple-table-row notion-block-f3cbb42d237344119f8711a8482fb8ef"><td class="" style="width:120px"><div class="notion-simple-table-cell">53</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">00110101</div></td></tr><tr class="notion-simple-table-row notion-block-2209369c662b4f65a1c9730ea05c49b0"><td class="" style="width:120px"><div class="notion-simple-table-cell">53的反码</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">11001010</div></td></tr><tr class="notion-simple-table-row notion-block-77818af2e93d44c7b57b0b04b2a9c412"><td class="" style="width:120px"><div class="notion-simple-table-cell">Add 1</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">00000001</div></td></tr><tr class="notion-simple-table-row notion-block-8e6efbef7394442bbfe0f994414c7db0"><td class="" style="width:120px"><div class="notion-simple-table-cell">-53</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">11001011</div></td></tr></tbody></table><div class="notion-text notion-block-f5c4cdd161134c198ebe31616dfc7f7f">要从另一个值中减去一个值，可以转换成一个值加上这个值的负数</div><div class="notion-text notion-block-3e7482509f7246b298b00b00e9652e1b"><b>Example</b></div><div class="notion-text notion-block-ee28611da76d47ce90fbd04965bfd405">53 减去 42</div><table class="notion-simple-table notion-block-746471483cb246b1bbb74577bf7018e0"><tbody><tr class="notion-simple-table-row notion-block-9d93e5b349484a2ca1c1e263f87a55f0"><td class="" style="width:120px"><div class="notion-simple-table-cell">53</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">00110101</div></td></tr><tr class="notion-simple-table-row notion-block-459b73856df441d3ac84892575c13e11"><td class="" style="width:120px"><div class="notion-simple-table-cell">42</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">00101010</div></td></tr><tr class="notion-simple-table-row notion-block-3e9727c7589c4a929fb7b33f7b27019c"><td class="" style="width:120px"><div class="notion-simple-table-cell">42的反码</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">11010101</div></td></tr><tr class="notion-simple-table-row notion-block-b4d2e399ccd74b5cad0dd997c8b4d353"><td class="" style="width:120px"><div class="notion-simple-table-cell">Add 1</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">0000000 1</div></td></tr><tr class="notion-simple-table-row notion-block-816094932d6a4be695c706501d5ec1fd"><td class="" style="width:120px"><div class="notion-simple-table-cell">-42</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">11010110</div></td></tr><tr class="notion-simple-table-row notion-block-dcf81a56915f4575a6ab76f48ab78cbd"><td class="" style="width:120px"><div class="notion-simple-table-cell">53 - 42 = 11</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">00001011</div></td></tr></tbody></table><div class="notion-text notion-block-4687f25162f947819dbeb557e7d4f717">最后 1 位的溢出则丢失</div><h3 class="notion-h notion-h2 notion-h-indent-1 notion-block-22c7d00a99bb4eeca89e8abb68cdd1b5" data-id="22c7d00a99bb4eeca89e8abb68cdd1b5"><span><div id="22c7d00a99bb4eeca89e8abb68cdd1b5" class="notion-header-anchor"></div><a class="notion-hash-link" href="#22c7d00a99bb4eeca89e8abb68cdd1b5" title="寻址内存中的数据"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">寻址内存中的数据</span></span></h3><div class="notion-text notion-block-7893e54f77594d17840a667312ea77c9">处理器控制指令执行的过程称为 <b>fetch-decode-execute cycle(获取指令-解码指令-执行指令)</b> 或 <b>execution cycle(执行周期)</b> 。 它由三个连续步骤组成</div><ul class="notion-list notion-list-disc notion-block-e1f5463e52904e8b9e61ea5796d7ef99"><li>从内存(内存储器)中获取指令</li></ul><ul class="notion-list notion-list-disc notion-block-f075d5d57f2645c7a2c027033649e663"><li>解码或识别指令</li></ul><ul class="notion-list notion-list-disc notion-block-1ffa4a70bda74456a12d1eb3ccfd8314"><li>执行指令</li></ul><div class="notion-text notion-block-58dc17349ce04db186cfcbf603aab0bd">处理器可以一次访问一个或多个字节的存储器(这里指的是内存储器)，处理器不能访问外存中的数据，为了严谨，<span class="notion-red">下文的存储器都是内存，也就是内存储器</span></div><div class="notion-text notion-block-be95ef4150ab4a8594982bfab723518b">我们考虑一个十六进制数 0725H。 这个数字需要两个字节的内存。 高位字节或最高有效字节为 07，低位字节为 25。</div><div class="notion-text notion-block-7cbb03b1f59b447793545c6c46226ec7">存储器以小端序存储数据，即低位字节存储在低存储器地址中，高位字节存储在高存储器地址中。 因此，如果寄存器将值 0725H 从寄存器带到存储器中，它将首先将 25 传输到较低的存储器地址，将 07 传输到下一个存储器地址。</div><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-13e78be86931443fabd5a4883b4aae84"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column"><img src="https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fd89c339d-0c88-43a7-b468-3ae2008a4a30%2F2bc22ce6-48f4-4c72-97f7-db4c8bb6a0c7.jpeg?table=block&amp;id=13e78be8-6931-443f-abd5-a4883b4aae84&amp;t=13e78be8-6931-443f-abd5-a4883b4aae84&amp;width=1080&amp;cache=v2" alt="notion image" loading="lazy" decoding="async"/></div></figure><div class="notion-text notion-block-5233bf5cfb1741379a5e503d1ca9a25a">x是内存地址</div><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-cb0806c4aaa5401498d0702050370324"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column;height:100%"><img style="object-fit:cover" src="https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F7f221171-c3da-49c4-821b-9d5d1b48da38%2FUntitled.png?table=block&amp;id=cb0806c4-aaa5-4014-98d0-702050370324&amp;t=cb0806c4-aaa5-4014-98d0-702050370324&amp;width=529&amp;cache=v2" alt="notion image" loading="lazy" decoding="async"/></div></figure><div class="notion-text notion-block-4571ef74b2bf4759ae10a31ebdc1f36e">附上之前画的一幅图</div><div class="notion-text notion-block-ca99a1959a53485db5832e6bf8a8fdcf">当处理器从存储器中获取数字数据以进行寄存时，它再次反转字节。 </div><div class="notion-text notion-block-7ac4f23a77df4b4d802f6d30272e010e">有两种内存地址 </div><ul class="notion-list notion-list-disc notion-block-2c9c1334697d471ea23cff840cdd7849"><li>绝对地址 - 特定位置的直接参考。</li></ul><ul class="notion-list notion-list-disc notion-block-d5dc0269dedf428bb9f95fe22865e152"><li>段地址（或偏移量） - 具有偏移值的存储器段的起始地址。</li></ul><h2 class="notion-h notion-h1 notion-h-indent-0 notion-block-97c26c1a3332440e8d491dac652b5ca6" data-id="97c26c1a3332440e8d491dac652b5ca6"><span><div id="97c26c1a3332440e8d491dac652b5ca6" class="notion-header-anchor"></div><a class="notion-hash-link" href="#97c26c1a3332440e8d491dac652b5ca6" title="汇编环境配置(Local Environment Setup)"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">汇编环境配置(Local Environment Setup)</span></span></h2><div class="notion-text notion-block-f3c8ab0d82a3425a8f917218ab084cb9">汇编语言取决于指令集和处理器的体系结构。 </div><div class="notion-text notion-block-f72bac83b0cf4ef19a021f0dbee88735">在本教程中，我们将重点介绍 Pentium 等 Intel-32 处理器。</div><div class="notion-text notion-block-be84e88db6e94dc3aba2f1e97a09c988"> 完成本文示例您需要 </div><ul class="notion-list notion-list-disc notion-block-fc89a67ebfec48f2989147d47a06c6a2"><li>IBM PC 或任何等效的兼容计算机</li></ul><ul class="notion-list notion-list-disc notion-block-642e01204f754a399abd28f39e257eb3"><li>Linux 操作系统的副本</li></ul><ul class="notion-list notion-list-disc notion-block-37546162790e4f1db1f642d4454f8c4d"><li>NASM 汇编程序的副本</li></ul><div class="notion-text notion-block-907f876c7aba47ad8d3cc91b6ae66b4e">有许多好的汇编程序，例如</div><ul class="notion-list notion-list-disc notion-block-3c671c29e15d46f09e469c69e369ddb2"><li>Microsoft Assembler（MASM）</li></ul><ul class="notion-list notion-list-disc notion-block-3936687ea36747ef986cd48c01876c25"><li>Borland Turbo Assembler（TASM）</li></ul><ul class="notion-list notion-list-disc notion-block-880bf4da5c984863a37164e5d983b7c8"><li>GNU 汇编程序（GAS）</li></ul><div class="notion-text notion-block-186d2085ea514b87b88556e0c8935735">我们将使用 NASM 汇编程序，因为它是</div><ul class="notion-list notion-list-disc notion-block-e634fcdd40c44ef6adca913dcfd93355"><li>免费</li></ul><ul class="notion-list notion-list-disc notion-block-426ed449b68d494b930fbca04a4c2d52"><li>可以在 Linux 和 Windows 上使用</li></ul><h3 class="notion-h notion-h2 notion-h-indent-1 notion-block-7011b0c749134ad582430139c93f49d9" data-id="7011b0c749134ad582430139c93f49d9"><span><div id="7011b0c749134ad582430139c93f49d9" class="notion-header-anchor"></div><a class="notion-hash-link" href="#7011b0c749134ad582430139c93f49d9" title="安装 NASM"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">安装 NASM</span></span></h3><div class="notion-text notion-block-4c290495c72e4de7a6ab2147307523b8">推荐使用ubuntu安装</div><div class="notion-text notion-block-1e6af270289346af82dc4dd951845997">其他linux发行版本根据包管理器自行安装</div><h2 class="notion-h notion-h1 notion-h-indent-0 notion-block-dde0b2ef32f9450fa4021509eddf39f5" data-id="dde0b2ef32f9450fa4021509eddf39f5"><span><div id="dde0b2ef32f9450fa4021509eddf39f5" class="notion-header-anchor"></div><a class="notion-hash-link" href="#dde0b2ef32f9450fa4021509eddf39f5" title="基本语法(Basic grammar)"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">基本语法(Basic grammar)</span></span></h2><div class="notion-text notion-block-30c1b29f2cd248f3b489c36ef872e868">汇编程序可分为三个部分(section翻译为部分，和段segment有区别，为了严谨这里直接说section部分)</div><ul class="notion-list notion-list-disc notion-block-97ebb253fa4346298e3bd8bab5c33b93"><li>.<b>data(数据部分)</b></li></ul><ul class="notion-list notion-list-disc notion-block-b7f9a36c725242a79af84d465b16478f"><li>.<b>bss</b></li></ul><ul class="notion-list notion-list-disc notion-block-e02c28652b0b47a6a50bb125274abed2"><li>.<b>text(代码部分)</b></li></ul><div class="notion-text notion-block-ac01ccc858fc4f4dab27de81e6369f22">_data</div><div class="notion-text notion-block-4655776755044986bf2a364da4c39d8d"><b>data部分用</b>于声明初始化数据或常量。 此数据在运行时不会更改。 您可以在这个section中声明各种常量值，文件名或缓冲区大小等</div><div class="notion-text notion-block-ed9403e894f640968a49b9cc433272b3">声明data section的语法是 </div><div class="notion-text notion-block-1417269e990c457a838c6581809c2646">_bss</div><div class="notion-text notion-block-2589b8b3320747619ff8e7c00bd74bd6"><b>bss段</b>用于声明变量。 声明 bss section的语法是</div><div class="notion-text notion-block-5782c71a821540559095a476df479d75">_text</div><div class="notion-text notion-block-d046b595fc154046bee9e9b89206eb7e"><b>text</b> 部分用于保存实际代码。 此section必须以声明 global _start 开头，它告诉内核程序执行的开始位置</div><div class="notion-text notion-block-e89f41eee02d471196eaf3134ff3a9e6">声明text section的语法是</div><h3 class="notion-h notion-h2 notion-h-indent-1 notion-block-534a552947194269b2f26e34b716ab02" data-id="534a552947194269b2f26e34b716ab02"><span><div id="534a552947194269b2f26e34b716ab02" class="notion-header-anchor"></div><a class="notion-hash-link" href="#534a552947194269b2f26e34b716ab02" title="注释 (Comments)"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">注释 (Comments)</span></span></h3><div class="notion-text notion-block-1d7fdfd68c964e429e7436225fae3c2a">汇编语言注释以分号（;）开头。 它可以包含任何可打印的字符，包括空白。 它可以单独出现在一条线上，如下示例</div><div class="notion-text notion-block-5dfb609179e64f91816908e574e4bb4e">或者，在同一行后注释，如下示例</div><div class="notion-text notion-block-f1b81f7f6dec44f09e256843beaf644a">汇编语言程序包含三种语句</div><ul class="notion-list notion-list-disc notion-block-eecad20321e349098800d33ec6274e16"><li>An executable instruction or instruction(可执行指令)</li></ul><ul class="notion-list notion-list-disc notion-block-949e257cad284bfe85ccbe9706aefe2c"><li>Assembler instruction or pseudo-operation(汇编程序指令或伪操作)不可执行指令</li></ul><ul class="notion-list notion-list-disc notion-block-bb8824c070a840c29211d78279ec1140"><li>Macros(宏指令)</li></ul><ol start="1" class="notion-list notion-list-numbered notion-block-c140fded9fe5426fbfdd38f95936c86f" style="list-style-type:decimal"><li><b>executable instructions</b> 或简单的<b>instructions</b> 告诉处理器该做什么，每条指令都包含一个 <b>operation code</b>（操作码），每个可执行指令生成一个机器语言指令。</li></ol><ol start="2" class="notion-list notion-list-numbered notion-block-763f1bc516804d9db1613d177f7d5ae3" style="list-style-type:decimal"><li><b>assembler directives</b> 或 <b>pseudo-ops</b> 告诉汇编程序有关汇编过程的各个方面。 这些是不可执行的，不会生成机器语言指令。</li></ol><ol start="3" class="notion-list notion-list-numbered notion-block-ec171cabbb2d48cfa4c5b0a0704acb63" style="list-style-type:decimal"><li><b>Macros</b> 基本上是文本替换机制。</li></ol><h3 class="notion-h notion-h2 notion-h-indent-1 notion-block-4f3ea76e9f9a49cbbebe9fcb3c912092" data-id="4f3ea76e9f9a49cbbebe9fcb3c912092"><span><div id="4f3ea76e9f9a49cbbebe9fcb3c912092" class="notion-header-anchor"></div><a class="notion-hash-link" href="#4f3ea76e9f9a49cbbebe9fcb3c912092" title="汇编语言语句"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">汇编语言语句</span></span></h3><div class="notion-text notion-block-5090b3beb08640c3bccb68d366c08fe3">汇编语言语句每行只输入一个语句。 每个声明都遵循以下格式 </div><div class="notion-text notion-block-6b285e5e329e4087b44279ef69edab6b">方括号中的字段是可选的。 基本指令有两部分，第一部分是要执行的指令（或操作码）的名称，第二部分是操作数或命令的参数。</div><div class="notion-text notion-block-9f48102f12084f1eb6fcafe72b4439e2">以下是汇编语言语法的一些示例</div><h3 class="notion-h notion-h2 notion-h-indent-1 notion-block-32a1bc28474041859d192e5b7559bbfb" data-id="32a1bc28474041859d192e5b7559bbfb"><span><div id="32a1bc28474041859d192e5b7559bbfb" class="notion-header-anchor"></div><a class="notion-hash-link" href="#32a1bc28474041859d192e5b7559bbfb" title="编写第一个汇编程序Hello World"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">编写第一个汇编程序Hello World</span></span></h3><div class="notion-text notion-block-256dea00994d439a97639d6a0d25d4c2">以下汇编语言代码在屏幕上打印字符串’Hello World’</div><div class="notion-text notion-block-e1a06e2f66264bcab199e3b2b93186bc">编译并执行上述代码时，会产生以下结果</div><h3 class="notion-h notion-h2 notion-h-indent-1 notion-block-1e5588519daf446986c2d84a72666925" data-id="1e5588519daf446986c2d84a72666925"><span><div id="1e5588519daf446986c2d84a72666925" class="notion-header-anchor"></div><a class="notion-hash-link" href="#1e5588519daf446986c2d84a72666925" title="编译和链接 NASM 中的汇编程序"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">编译和链接 NASM 中的汇编程序</span></span></h3><div class="notion-text notion-block-25ac7d899cf146d7b81b2e3cb3de67c6">确保在 PATH 环境变量中设置了 <b>nasm</b> 和 <b>ld</b> 二进制文件的路径。 用以下步骤来编译和链接上述程序</div><ul class="notion-list notion-list-disc notion-block-69dac0f5f9fb47eb9c06c2f58370aa64"><li>使用文本编辑器(VIM)输入上面的代码并将其保存为 hello.asm</li></ul><ul class="notion-list notion-list-disc notion-block-7ae5cd6daf534eeba56aadb8511d86e2"><li>确保您与保存 <b>hello.asm</b> 目录位于同一目录中。</li></ul><ul class="notion-list notion-list-disc notion-block-c427de3804cb4917a4abe1e2827f6ddc"><li>要组装程序，输入 <b>nasm -f elf hello.asm</b></li></ul><ul class="notion-list notion-list-disc notion-block-96e7f4f53d4b4ef392a3cb207a7f39df"><li>如果有任何错误，将在此阶段提示您。 否则，将创建名为 <b>hello.o</b> 的动态链接库程序的目标文件</li></ul><ul class="notion-list notion-list-disc notion-block-6157cf0554584e0f9fc30c3c14a1b0a4"><li>要链接目标文件并创建名为 hello 的可执行文件，请键入 <b>ld -m elf_i386 -s -o hello hello.o</b></li></ul><ul class="notion-list notion-list-disc notion-block-56bf0be63b004028bfb43c23170bbf00"><li>输入<b>./hello</b> 执行该程序</li></ul><div class="notion-text notion-block-ed1ccbfcb0ab4f5aa4b109d8a979c846">我们已经讨论过汇编程序的三个部分。 这些部分也代表各种存储器段。</div><div class="notion-text notion-block-e0f0cec72d874e9195f25c1ff54886d9">有趣的是，如果将 section 关键字替换为 segment，您将得到相同的结果。 请尝试以下代码 -</div><div class="notion-text notion-block-df9ad2dafdd24464a09f5a36cafbda9f">编译并执行上述代码时，会产生以下结果</div><h2 class="notion-h notion-h1 notion-h-indent-0 notion-block-e4546a03a51d462d885d9f13f53bdced" data-id="e4546a03a51d462d885d9f13f53bdced"><span><div id="e4546a03a51d462d885d9f13f53bdced" class="notion-header-anchor"></div><a class="notion-hash-link" href="#e4546a03a51d462d885d9f13f53bdced" title="内存段(Memory segment)"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">内存段(Memory segment)</span></span></h2><div class="notion-text notion-block-15d63c0fcfd94991824055491f6e3cae">分段存储器模型将系统存储器划分为由位于段寄存器中的指针引用的独立段组。 每个段用于包含特定类型的数据。 一个段用于包含指令代码，另一个段用于存储数据元素，第三个段用于保存程序堆栈。</div><div class="notion-text notion-block-29fe99be2019477d9e55ab680b6f3340">根据上述讨论，我们可以指定各种内存段</div><ul class="notion-list notion-list-disc notion-block-e682c5822ee94c868887bc0cb73e4a52"><li><b>Data segment</b> 由<b>.data部分</b>和<b>.bss部分组成</b> .data 部分用于声明内存区域，其中为程序存储数据元素。 声明数据元素后，此部分无法展开，并且在整个程序中保持静态。.bss 部分也是一个静态内存部分，它包含稍后在程序中声明的数据的缓冲区。 该缓冲存储器为零填充。</li></ul><ul class="notion-list notion-list-disc notion-block-99540f23282c47c0b60ff8fe1adec30f"><li><b>Code segment</b> 由<b>.text</b> 表示。 这定义了存储器中存储指令代码的区域。 这也是一个固定的区域。</li></ul><ul class="notion-list notion-list-disc notion-block-6c415fff37154f13a021a2396785e5e0"><li><b>Stack</b>  <b>segment </b>此段包含传递给程序中的函数和过程的数据值。</li></ul><h2 class="notion-h notion-h1 notion-h-indent-0 notion-block-423e9094924542ed85b89abae89d0f39" data-id="423e9094924542ed85b89abae89d0f39"><span><div id="423e9094924542ed85b89abae89d0f39" class="notion-header-anchor"></div><a class="notion-hash-link" href="#423e9094924542ed85b89abae89d0f39" title="寄存器(Registers)"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title"><b>寄存器(Registers)</b></span></span></h2><div class="notion-text notion-block-255efec2e1024332b0b7d25a9209a54d">处理器操作主要涉及处理数据。 该数据可以存储在存储器中并从其上访问。 然而，从存储器读取数据和将数据存储到存储器中会降低处理器的速度，因为它涉及到通过控制总线向存储器存储单元发送数据请求并通过相同通道获取数据的复杂过程。</div><div class="notion-text notion-block-075ab196c7774a51bdf91fed6b7c90e9">为了加速处理器操作效率，处理器包括一些内部存储器存储位置，称为 <b>registers</b> 。</div><div class="notion-text notion-block-2a4a35a4f08341dcb8d05bd35cda83b2">寄存器存储数据元素以便处理而无需访问存储器。 处理器芯片内置有限数量的寄存器。</div><h3 class="notion-h notion-h2 notion-h-indent-1 notion-block-b32b10d3cbe041d2935351cb9bd037c4" data-id="b32b10d3cbe041d2935351cb9bd037c4"><span><div id="b32b10d3cbe041d2935351cb9bd037c4" class="notion-header-anchor"></div><a class="notion-hash-link" href="#b32b10d3cbe041d2935351cb9bd037c4" title="处理器寄存器"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">处理器寄存器</span></span></h3><div class="notion-text notion-block-f3e26d675ca54536be969c809bdcf93d">IA-32 架构中有 10 个 32 位和 6 个 16 位处理器寄存器。 寄存器分为三类</div><ul class="notion-list notion-list-disc notion-block-d9ae4e6aa7d3465992e0828be0e12f64"><li>General registers(通用寄存器)</li></ul><ul class="notion-list notion-list-disc notion-block-6f7302cc1d1f495196223b6d74fd0e13"><li>control register(控制寄存器)</li></ul><ul class="notion-list notion-list-disc notion-block-924894b4c7054ba1a6be6fce668b280a"><li>segment register(段寄存器)</li></ul><div class="notion-text notion-block-e753613ebb2d45508958f00801890f84">通用寄存器进一步分为以下几组 </div><ul class="notion-list notion-list-disc notion-block-ff3f10c820f849859e15dc07c09ed24c"><li>data register(数据寄存器)</li></ul><ul class="notion-list notion-list-disc notion-block-4ead071fce89453e8ae79b842b3e05a3"><li>pointer register(指针寄存器)</li></ul><ul class="notion-list notion-list-disc notion-block-2e6c15194083497b979baba78e94204e"><li>index register(索引寄存器)</li></ul><h3 class="notion-h notion-h2 notion-h-indent-1 notion-block-6bc0166c9b6a4ba68c9a8b8f0b293f8a" data-id="6bc0166c9b6a4ba68c9a8b8f0b293f8a"><span><div id="6bc0166c9b6a4ba68c9a8b8f0b293f8a" class="notion-header-anchor"></div><a class="notion-hash-link" href="#6bc0166c9b6a4ba68c9a8b8f0b293f8a" title="数据寄存器"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">数据寄存器</span></span></h3><div class="notion-text notion-block-06fabc35e5f74c31adcb594cd22e8e86">四个 32 位数据寄存器用于算术，逻辑和其他操作。 </div><div class="notion-text notion-block-e6bcd0c55dde4da096c836ff8c24eaea">这些 32 位寄存器可以三种方式使用 </div><ul class="notion-list notion-list-disc notion-block-0db0ae19f1ef46bbae599cabd13b76f1"><li>作为完整的 32 位数据寄存器: EAX，EBX，ECX，EDX。</li></ul><ul class="notion-list notion-list-disc notion-block-89ee6e7716514d9e8be43bf224e227a8"><li>32 位寄存器的下半部分可用作 4 个 16 位数据寄存器: AX，BX，CX 和 DX。</li></ul><ul class="notion-list notion-list-disc notion-block-a380508d20ee490f82138fbf291d22d9"><li>上述四个 16 位寄存器的低半部分和高半部分可用作 8 个 8 位数据寄存器: AH，AL，BH，BL，CH，CL，DH 和 DL。</li></ul><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-9ed3d244236646a4a17af731904edfc5"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column"><img src="https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F3c609dbc-5f09-462c-bcfa-a05a64e532cc%2Ffc0c8232-df02-4c56-9318-ba7c0d92992f.jpeg?table=block&amp;id=9ed3d244-2366-46a4-a17a-f731904edfc5&amp;t=9ed3d244-2366-46a4-a17a-f731904edfc5&amp;width=1080&amp;cache=v2" alt="notion image" loading="lazy" decoding="async"/></div></figure><div class="notion-text notion-block-ee347fe2260d4b00919fc311d4ed6f30">其中一些数据寄存器在算术运算中具有特定用途。</div><div class="notion-text notion-block-6f5aea6a27924592aea4eca6e157b52b"><b>AX is the primary accumulator(</b>AX是主累加器<b>),</b>它用于输入 / 输出和大多数算术指令。 例如，在乘法运算中，根据操作数的大小，一个操作数存储在 EAX 或 AX 或 AL 寄存器中。</div><div class="notion-text notion-block-69022e2903ed4903b4e5fadea3c2b8f4"><b>BX is known as the base register</b>(BX被称为基寄存器),因为它可以用于索引寻址。</div><div class="notion-text notion-block-43fd3ab3eaa24a5fbe15cc701ed410a2"><b>CX is known as the count register(</b>CX被称为计数寄存器<b>)</b> ,因为ECX，CX 寄存器在迭代操作中存储循环计数。</div><div class="notion-text notion-block-b8d626a93f794813bfd82cf5009327f1"><b>DX is known as the data register(</b>DX被称为数据寄存器<b>),</b> 它也用于输入 / 输出操作。 它还与 AX 寄存器以及 DX 一起用于涉及大值的乘法和除法运算。</div><h3 class="notion-h notion-h2 notion-h-indent-1 notion-block-41cd8ff5fa034c3c9ec65e5d33649607" data-id="41cd8ff5fa034c3c9ec65e5d33649607"><span><div id="41cd8ff5fa034c3c9ec65e5d33649607" class="notion-header-anchor"></div><a class="notion-hash-link" href="#41cd8ff5fa034c3c9ec65e5d33649607" title="指针寄存器"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">指针寄存器</span></span></h3><div class="notion-text notion-block-eb29198e398a42088159faa2589161ac">指针寄存器是 32 位 EIP，ESP 和 EBP 寄存器以及相应的 16 位右部分 IP，SP 和 BP。</div><div class="notion-text notion-block-2ba7be1b89744172982cc202b06b111a"> 指针寄存器分为三类</div><ul class="notion-list notion-list-disc notion-block-5e7245e372e2443a84622d541fa85484"><li><b>Instruction Pointer (IP)</b> - 16 位 IP 寄存器存储下一条要执行的指令的偏移地址。 与 CS 寄存器相关联的 IP（作为 CS:IP）给出代码段中当前指令的完整地址。</li></ul><ul class="notion-list notion-list-disc notion-block-de1462cba43040caa3db3d358049418c"><li><b>Stack Pointer (SP)</b> - 16 位 SP 寄存器提供程序堆栈中的偏移值。 与 SS 寄存器（SS:SP）相关联的 SP 指的是程序堆栈内的数据或地址的当前位置。</li></ul><ul class="notion-list notion-list-disc notion-block-28988b151c1b44c899de88bc34a28077"><li><b>Base Pointer (BP)</b> - 16 位 BP 寄存器主要用于引用传递给子程序的参数变量。 SS 寄存器中的地址与 BP 中的偏移量组合以获得参数的位置。 BP 也可以与 DI 和 SI 组合作为特殊寻址的基址寄存器。</li></ul><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-816c2fffd39a44cbb5cb77c7b9704e8e"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column"><img src="https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F19f47904-b8a4-4a2a-907c-1eb53626d2ff%2F04dd13d0-e5cd-4b7b-a07e-3bfa5a0b0104.jpeg?table=block&amp;id=816c2fff-d39a-44cb-b5cb-77c7b9704e8e&amp;t=816c2fff-d39a-44cb-b5cb-77c7b9704e8e&amp;width=1080&amp;cache=v2" alt="notion image" loading="lazy" decoding="async"/></div></figure><h3 class="notion-h notion-h2 notion-h-indent-1 notion-block-df99dbf3cc1648e8857b811d789fd460" data-id="df99dbf3cc1648e8857b811d789fd460"><span><div id="df99dbf3cc1648e8857b811d789fd460" class="notion-header-anchor"></div><a class="notion-hash-link" href="#df99dbf3cc1648e8857b811d789fd460" title="索引寄存器"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">索引寄存器</span></span></h3><div class="notion-text notion-block-714282a00f5a4036825493a4753cbb58">32 位索引寄存器，ESI 和 EDI，以及它们最右边的 16 位部分。 SI 和 DI 用于索引寻址，有时用于加法和减法。 有两组索引指针 -</div><ul class="notion-list notion-list-disc notion-block-ce053bef6fdd4e88b6d865ac7868df1b"><li><b>Source Index (SI)</b> - 用作字符串操作的源索引。</li></ul><ul class="notion-list notion-list-disc notion-block-13d585a7643447beb87e04338d6b800b"><li><b>Destination Index (DI)</b> - 用作字符串操作的目标索引。</li></ul><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-10980f48bdee479c9b5d5313e0876b45"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column"><img src="https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fe4d8aa7c-9e0f-4069-bfbd-dee884ce3ac3%2Ff5bbd4d8-a7bf-4b8e-ad14-a0dc4060ba55.jpeg?table=block&amp;id=10980f48-bdee-479c-9b5d-5313e0876b45&amp;t=10980f48-bdee-479c-9b5d-5313e0876b45&amp;width=1080&amp;cache=v2" alt="notion image" loading="lazy" decoding="async"/></div></figure><h3 class="notion-h notion-h2 notion-h-indent-1 notion-block-a119c2b7ab8e4ac48d41651a34763a07" data-id="a119c2b7ab8e4ac48d41651a34763a07"><span><div id="a119c2b7ab8e4ac48d41651a34763a07" class="notion-header-anchor"></div><a class="notion-hash-link" href="#a119c2b7ab8e4ac48d41651a34763a07" title="控制寄存器"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">控制寄存器</span></span></h3><div class="notion-text notion-block-758d1b61ef54456f98f6d55e51d3c74a">32 位指令指针寄存器和 32 位标志寄存器组合被认为是控制寄存器。</div><div class="notion-text notion-block-ed52599abbd6461cb0a601b6053e8aac">许多指令涉及比较和数学计算，会更改标志的状态，一些其他条件指令测试这些状态标志的值会将控制流程带到其他位置。</div><div class="notion-text notion-block-b70bebc05f1f4e5b8444c31ccd7ff563">标志寄存器:</div><ul class="notion-list notion-list-disc notion-block-d86e435cf89f4cfdba6c664775896f8d"><li><b>Overflow Flag (OF)</b> - 表示在带符号算术运算后数据的高位（最左位）溢出。</li></ul><ul class="notion-list notion-list-disc notion-block-c95f91160aa04e8a86a4565885d304ca"><li><b>Direction Flag (DF)</b> - 它确定移动或比较字符串数据的左或右方向。 当 DF 值为 0 时，字符串操作采用从左到右的方向，当值设置为 1 时，字符串操作采用从右到左的方向。</li></ul><ul class="notion-list notion-list-disc notion-block-7b7fca45d10a4d0d81f2cb6d3801340d"><li><b>Interrupt Flag (IF)</b> - 它确定是否要忽略或处理键盘输入等外部中断。 它在值为 0 时禁用外部中断，在设置为 1 时启用中断。</li></ul><ul class="notion-list notion-list-disc notion-block-943575e831ef4e7aaeaf5294090b24ae"><li><b>Trap Flag (TF)</b> - 它允许以单步模式设置处理器的操作。 我们使用的 DEBUG 程序设置了陷阱标志，因此我们可以一次执行一条指令。</li></ul><ul class="notion-list notion-list-disc notion-block-8f2f0b3ad8b24954bece33c525b3ec07"><li><b>Sign Flag (SF)</b> - 它显示算术运算结果的符号。 根据算术运算后的数据项的符号设置该标志。 符号由最左边的位的高位表示。 正结果将 SF 的值清除为 0，否定结果将其设置为 1。</li></ul><ul class="notion-list notion-list-disc notion-block-460e69389a6f42efb8760b620d1283d1"><li><b>Zero Flag (ZF)</b> - 它表示算术或比较运算的结果。 非零结果将零标志清除为 0，零结果将其设置为 1。</li></ul><ul class="notion-list notion-list-disc notion-block-2158e84c6e63402ba35dfb94057e345a"><li><b>Auxiliary Carry Flag (AF)</b> - 它包含算术运算后从第 3 位到第 4 位的进位; 用于专业算术。 当 1 字节算术运算导致从第 3 位进位到第 4 位时，AF 置位。</li></ul><ul class="notion-list notion-list-disc notion-block-f23c20e935f2460cbed66d1f1ead5b89"><li><b>Parity Flag (PF)</b> - 它表示从算术运算获得的结果中的 1 位总数。 偶数个 1 位将奇偶校验标志清除为 0，奇数个 1 位将奇偶校验标志设置为 1。</li></ul><ul class="notion-list notion-list-disc notion-block-8bfb2d51f3d84c3aaa3da543e7d708a4"><li><b>Carry Flag (CF)</b> - 在算术运算后，它包含来自高位（最左边）的 0 或 1 的进位。 它还存储_shift_或_rotate_操作的最后一位的内容。</li></ul><div class="notion-text notion-block-945ec7bd0ac946d0ad93d56c8927a490">下表显示了 16 位 标志寄存器中标志位的位置:</div><table class="notion-simple-table notion-block-68df07a989ea4463b93d9590ce6338e1"><tbody><tr class="notion-simple-table-row notion-block-789909f6ee4a4f7c92983a889a4fcd52"><td class="" style="width:120px"><div class="notion-simple-table-cell">flag</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">ㅤ</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">ㅤ</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">ㅤ</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">ㅤ</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">O</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">D</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">I</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">T</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">S</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">Z</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">ㅤ</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">A</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">ㅤ</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">P</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">ㅤ</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">C</div></td></tr><tr class="notion-simple-table-row notion-block-3803ce03244f44778c366c08a43bbff4"><td class="" style="width:120px"><div class="notion-simple-table-cell">位号:</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">15</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">14</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">13</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">12</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">11</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">10</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">9</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">8</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">7</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">6</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">5</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">4</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">3</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">2</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">1</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">0</div></td></tr></tbody></table><h3 class="notion-h notion-h2 notion-h-indent-1 notion-block-af4fc76d74924af8a9a210c1076944cd" data-id="af4fc76d74924af8a9a210c1076944cd"><span><div id="af4fc76d74924af8a9a210c1076944cd" class="notion-header-anchor"></div><a class="notion-hash-link" href="#af4fc76d74924af8a9a210c1076944cd" title="段寄存器"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">段寄存器</span></span></h3><div class="notion-text notion-block-b95a134265054b5cacded005b0ba27b2">段是在程序中定义的用于包含数据，代码和堆栈的特定区域。 主要有三个部分</div><ul class="notion-list notion-list-disc notion-block-b02b6cb212ba42a09d486c01d0f61fd8"><li><b>Code Segment</b> - 它包含要执行的所有指令。 16 位代码段寄存器或 CS 寄存器存储代码段的起始地址。</li></ul><ul class="notion-list notion-list-disc notion-block-c9f1247e48aa470ca3a0b52ec19689db"><li><b>Data Segment</b> - 它包含数据，常量和工作区域。 16 位数据段寄存器或 DS 寄存器存储数据段的起始地址。</li></ul><ul class="notion-list notion-list-disc notion-block-f33dfaeb40634bf2aa43d1aeb67e7922"><li><b>Stack Segment</b> - 它包含过程或子例程的数据和返回地址。 它被实现为 “堆栈” 数据结构。 堆栈段寄存器或 SS 寄存器存储堆栈的起始地址。</li></ul><div class="notion-text notion-block-3ea29b4947ca43b1881bf70917a3f5d6">除 DS，CS 和 SS 寄存器外，还有其他额外的段寄存器 - ES（额外段），FS 和 GS，它们提供用于存储数据的附加段。</div><div class="notion-text notion-block-75e974b1d60843f0aadb3ea7db22d386">在汇编编程中，程序需要访问存储器位置。 段内的所有存储器位置都相对于段的起始地址。 段开始于可被 16 或十六进制 10 整除的地址。因此，所有这些存储器地址中最右边的十六进制数字是 0，通常不存储在段寄存器中。</div><div class="notion-text notion-block-4ecc10024b024abe9173b5d3f3600e1b">段寄存器存储段的起始地址。 要获得段内数据或指令的确切位置，需要偏移值（或位移）。 为了引用段中的任何存储器位置，处理器将段寄存器中的段地址与位置的偏移值组合。</div><h3 class="notion-h notion-h2 notion-h-indent-1 notion-block-9d577e896508446b82081a3504e6e89d" data-id="9d577e896508446b82081a3504e6e89d"><span><div id="9d577e896508446b82081a3504e6e89d" class="notion-header-anchor"></div><a class="notion-hash-link" href="#9d577e896508446b82081a3504e6e89d" title="例子 (Example)"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">例子 (Example)</span></span></h3><div class="notion-text notion-block-c45a0809dc9446e49cd9f6cc288999b5">查看以下简单程序，了解汇编编程中寄存器的使用</div><div class="notion-text notion-block-bab7681f5d7d463ba95a4ff2d87546dd">该程序在屏幕上打印 9 颗星以及一条简单的信息</div><div class="notion-text notion-block-84e44a9075bf486887a50a45aa9109b3">编译并执行上述代码时，会产生以下结果 </div><h2 class="notion-h notion-h1 notion-h-indent-0 notion-block-52fb14231b104b8282218333f1bafbcd" data-id="52fb14231b104b8282218333f1bafbcd"><span><div id="52fb14231b104b8282218333f1bafbcd" class="notion-header-anchor"></div><a class="notion-hash-link" href="#52fb14231b104b8282218333f1bafbcd" title="系统调用(System calls)"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">系统调用(System calls)</span></span></h2><div class="notion-text notion-block-99f4f5767d6b4e089bbecc8fac71f8b2">系统调用是用于用户空间和内核空间之间接口的 API。 我们已经使用过系统调用。 </div><div class="notion-text notion-block-dd6e6e3b3e4f4a69a91830bd8d7ac56a">sys_write 和 sys_exit，分别用于写入屏幕并退出程序。</div><h3 class="notion-h notion-h2 notion-h-indent-1 notion-block-4650ec235d1345569144285412d95d78" data-id="4650ec235d1345569144285412d95d78"><span><div id="4650ec235d1345569144285412d95d78" class="notion-header-anchor"></div><a class="notion-hash-link" href="#4650ec235d1345569144285412d95d78" title="Linux 系统调用"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">Linux 系统调用</span></span></h3><div class="notion-text notion-block-c9163267c425400c91d13181d5379152">您可以在汇编程序中使用 Linux 系统调用。 </div><div class="notion-text notion-block-3943d3dee426443f8e8d6676c70a102d">您需要采取以下步骤在程序中使用 Linux 系统调用 -</div><ul class="notion-list notion-list-disc notion-block-04f03066708f43a7b8b94d75659f6bcf"><li>将系统调用号放在 EAX 寄存器中。</li></ul><ul class="notion-list notion-list-disc notion-block-779cb4e5c68041a895f4befb3a450abf"><li>将参数存储在寄存器 EBX，ECX 等中的系统调用参数中。</li></ul><ul class="notion-list notion-list-disc notion-block-4428ced378e54221895a6c0335e38dd0"><li>调用相关的中断（80h）。</li></ul><ul class="notion-list notion-list-disc notion-block-000e7986698a41598a17c0203985d339"><li>结果通常在 EAX 寄存器中返回。</li></ul><div class="notion-text notion-block-3a6e3522b8684a3db73ef9f9326f5994">有六个寄存器存储所使用的系统调用的参数。 这些是 EBX，ECX，EDX，ESI，EDI 和 EBP。 </div><div class="notion-text notion-block-1a2de93e2d84419683e68682b4cee6c2">这些寄存器采用连续参数，从 EBX 寄存器开始，如果有超过六个参数，则第一个参数的存储单元存储在 EBX 寄存器中。</div><div class="notion-text notion-block-d4047da47b7f4b02ae97d893755b81fc">以下代码片段显示了系统调用 sys_exit 的用法</div><div class="notion-text notion-block-d87a2aa2ae7e4959a726fe1cbc9ff44d">以下代码片段显示了使用系统调用 sys_write</div><div class="notion-text notion-block-f8bfa8afaef244f0865ac79d5c574a92">所有系统调用都列在/usr/include/asm/unistd.h，以及它们的编号（在调用 int 80h 之前放入 EAX 的值）。</div><div class="notion-text notion-block-857811906ac445f19f36378f39fefdab">下表显示了本文中使用的一些系统调用</div><table class="notion-simple-table notion-block-50d70fd7639e44f8b73023ab8b9931de"><tbody><tr class="notion-simple-table-row notion-block-2a3d6321f717489fb5393cefed8d2d7e"><td class="" style="width:120px"><div class="notion-simple-table-cell">EAX</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">名称</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">EBX</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">ECX</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">EDX</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">ESX</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">EDI</div></td></tr><tr class="notion-simple-table-row notion-block-6052190c22ad4bea83e7613ef33aece6"><td class="" style="width:120px"><div class="notion-simple-table-cell">1</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">sys_exit</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">int</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">-</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">-</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">-</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">-</div></td></tr><tr class="notion-simple-table-row notion-block-ed135b8ebe2a4f2da37ee95c703ca40c"><td class="" style="width:120px"><div class="notion-simple-table-cell">2</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">sys_fork</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">struct pt_regs</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">-</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">-</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">-</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">-</div></td></tr><tr class="notion-simple-table-row notion-block-7b4709e2dcde49d3a790f539db318901"><td class="" style="width:120px"><div class="notion-simple-table-cell">3</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">sys_read</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">unsigned int</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">char *</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">size_t</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">-</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">-</div></td></tr><tr class="notion-simple-table-row notion-block-255d95718c8b4355be5aec683b6237e9"><td class="" style="width:120px"><div class="notion-simple-table-cell">4</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">sys_write</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">unsigned int</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">const char *</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">size_t</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">-</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">-</div></td></tr><tr class="notion-simple-table-row notion-block-b46b62c86b924db792ccc94a221add5a"><td class="" style="width:120px"><div class="notion-simple-table-cell">5</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">sys_open</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">const char *</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">int</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">int</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">-</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">-</div></td></tr><tr class="notion-simple-table-row notion-block-e5cb1081f8d54b5991b4a97d757cae0b"><td class="" style="width:120px"><div class="notion-simple-table-cell">6</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">sys_close</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">unsigned int</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">-</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">-</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">-</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">-</div></td></tr></tbody></table><h3 class="notion-h notion-h2 notion-h-indent-1 notion-block-3523df586a8c4488885d2fd19ea6f002" data-id="3523df586a8c4488885d2fd19ea6f002"><span><div id="3523df586a8c4488885d2fd19ea6f002" class="notion-header-anchor"></div><a class="notion-hash-link" href="#3523df586a8c4488885d2fd19ea6f002" title="例子 (Example)"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">例子 (Example)</span></span></h3><div class="notion-text notion-block-e84bc73bbd534a04a85f88e882330802">以下示例从键盘读取数字并将其显示在屏幕上</div><div class="notion-text notion-block-5f71cda071b4431eb2ab79934716717b">编译并执行上述代码时，会产生以下结果</div><h2 class="notion-h notion-h1 notion-h-indent-0 notion-block-5b3e998277d543849389e0ef28590466" data-id="5b3e998277d543849389e0ef28590466"><span><div id="5b3e998277d543849389e0ef28590466" class="notion-header-anchor"></div><a class="notion-hash-link" href="#5b3e998277d543849389e0ef28590466" title="寻址模式(Addressing Modes)"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">寻址模式(Addressing Modes)</span></span></h2><div class="notion-text notion-block-01c5a96fa00e496399311e0136029c16">大多数汇编语言指令都需要处理操作数。 操作数地址提供存储要处理的数据的位置。 </div><div class="notion-text notion-block-437af40197b54f008742cc8213a98901">某些指令不需要操作数，而某些其他指令可能需要一个，两个或三个操作数。</div><div class="notion-text notion-block-c7b28fefdf7a45eeb2ba67bfaf46117c">当指令需要两个操作数时，第一个操作数通常是目标，它包含寄存器或存储单元中的数据，第二个操作数是源操作数。 源操作数包含要传递的数据（立即寻址）或数据的地址（寄存器或存储器）</div><div class="notion-text notion-block-3b6d547bd6c44950987350a1834dc079">通常，源操作数在操作前后保持不变。</div><div class="notion-text notion-block-c7c1cba035df433f855547309bfe8574">三种基本寻址方式是</div><ul class="notion-list notion-list-disc notion-block-ec26dd90ca9f4284bfab3ddda34c52fe"><li>寄存器寻址</li></ul><ul class="notion-list notion-list-disc notion-block-a6cb449d1cec4083b2eb46531c799569"><li>立即寻址</li></ul><ul class="notion-list notion-list-disc notion-block-868abb5ba89b4689abde99daa1b26b3a"><li>内存寻址</li></ul><h3 class="notion-h notion-h2 notion-h-indent-1 notion-block-15d46dacedd8466aa85fa18806c51059" data-id="15d46dacedd8466aa85fa18806c51059"><span><div id="15d46dacedd8466aa85fa18806c51059" class="notion-header-anchor"></div><a class="notion-hash-link" href="#15d46dacedd8466aa85fa18806c51059" title="寄存器寻址"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">寄存器寻址</span></span></h3><div class="notion-text notion-block-dc921de3389c4466a7433e1b80ebcabd">在此寻址模式中，寄存器包含操作数。 根据指令，寄存器可以是第一个操作数，第二个操作数或两者。</div><div class="notion-text notion-block-8fe5797d905949ef83ce6acc9f180dde">例如</div><div class="notion-text notion-block-005cbdf17c1d494cb6e6e8674942bd16">由于寄存器之间的处理数据不涉及存储器，因此它提供了最快的数据处理。</div><h3 class="notion-h notion-h2 notion-h-indent-1 notion-block-75cf9ae3a22a4f849c471a8d07ac8a18" data-id="75cf9ae3a22a4f849c471a8d07ac8a18"><span><div id="75cf9ae3a22a4f849c471a8d07ac8a18" class="notion-header-anchor"></div><a class="notion-hash-link" href="#75cf9ae3a22a4f849c471a8d07ac8a18" title="立即寻址"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">立即寻址</span></span></h3><div class="notion-text notion-block-2ef30f56a9bc4fe98e2102b4f0686557">立即数操作数具有常量值或表达式。 当具有两个操作数的指令使用立即寻址时，第一个操作数可以是寄存器或存储器位置，第二个操作数是立即数。 第一个操作数定义数据的长度。</div><div class="notion-text notion-block-d4c4fbe686374a31afc36a16973291b7">例如</div><h3 class="notion-h notion-h2 notion-h-indent-1 notion-block-cad43a325ae54220bda112a0aa8e80c1" data-id="cad43a325ae54220bda112a0aa8e80c1"><span><div id="cad43a325ae54220bda112a0aa8e80c1" class="notion-header-anchor"></div><a class="notion-hash-link" href="#cad43a325ae54220bda112a0aa8e80c1" title="直接内存寻址"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">直接内存寻址</span></span></h3><div class="notion-text notion-block-8755d262e1e14369922baa0557b1b102">在存储器寻址模式中指定操作数时，需要直接访问主存储器(内存)，通常是数据段。 这种寻址方式导致数据处理速度变慢。 要在存储器中找到数据的确切位置，我们需要段起始地址，该地址通常位于 DS 寄存器中，并且具有偏移值。 该偏移值也称为 <b>effective address</b> 。</div><div class="notion-text notion-block-fdbeb4c057bd424abce0547333088464">在直接寻址模式中，偏移值直接指定为指令的一部分，通常由变量名称表示。 </div><div class="notion-text notion-block-4ecb4cc10b1b4d9d94293132710b084e">汇编程序计算偏移值并维护一个符号表，该表存储程序中使用的所有变量的偏移值。</div><div class="notion-text notion-block-d5e000c4c46a48069736ee0968c6c429">在直接存储器寻址中，其中一个操作数指的是存储器位置而另一个操作数指的是寄存器。</div><div class="notion-text notion-block-fe602a945e2040a1b8c8b2625a3d8119">例如</div><h3 class="notion-h notion-h2 notion-h-indent-1 notion-block-e8cf6cc9dd734ee2bcb545def1ad4b73" data-id="e8cf6cc9dd734ee2bcb545def1ad4b73"><span><div id="e8cf6cc9dd734ee2bcb545def1ad4b73" class="notion-header-anchor"></div><a class="notion-hash-link" href="#e8cf6cc9dd734ee2bcb545def1ad4b73" title="直接偏移寻址"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">直接偏移寻址</span></span></h3><div class="notion-text notion-block-850233aca3bb4f9f8b1e10678ff48490">该寻址模式使用算术运算符来修改地址。 </div><div class="notion-text notion-block-752957ebb65d4983bd57b4df380e189f">例如，查看定义数据表的以下定义</div><div class="notion-text notion-block-e157fa93540244a2a7d92e13b9dcfd72">以下操作将数据从内存中的表访问到寄存器中</div><h3 class="notion-h notion-h2 notion-h-indent-1 notion-block-c6dd94ceb6254747aa3284c3493b3a49" data-id="c6dd94ceb6254747aa3284c3493b3a49"><span><div id="c6dd94ceb6254747aa3284c3493b3a49" class="notion-header-anchor"></div><a class="notion-hash-link" href="#c6dd94ceb6254747aa3284c3493b3a49" title="间接内存寻址"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">间接内存寻址</span></span></h3><div class="notion-text notion-block-38653567baab4026b3e3c0233839c359">该寻址模式利用计算机的Segment:Offset(段偏移)寻址能力。 </div><div class="notion-text notion-block-a2fca8560dd54dfa9e24940a0185ada7">通常，通用寄存器 EBX，EBP（或 BX，BP）和用于存储器引用的方括号内编码的索引寄存器（DI，SI）用于此目的。</div><div class="notion-text notion-block-6f473e56ab6a4ed7b53326b40abfdecc">间接寻址通常用于包含多个元素（如数组）的变量</div><div class="notion-text notion-block-15e30e9529694e18b960753da8b6dcb5">数组的起始地址存储在 EBX 寄存器中</div><div class="notion-text notion-block-9f1c02b23bb54cc191e41f05f1baa797">以下代码段显示了如何访问变量的不同元素</div><div class="notion-text notion-block-75583d6088094270ac0a6abdbd13bff1">times指令下文会描述，主要用于声明数组</div><h3 class="notion-h notion-h2 notion-h-indent-1 notion-block-98efaa027a534ffa912f3cc818b814ca" data-id="98efaa027a534ffa912f3cc818b814ca"><span><div id="98efaa027a534ffa912f3cc818b814ca" class="notion-header-anchor"></div><a class="notion-hash-link" href="#98efaa027a534ffa912f3cc818b814ca" title="MOV 指令"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">MOV 指令</span></span></h3><div class="notion-text notion-block-b897198f67a64597a9b51810fbf38797">我们已经使用 MOV 指令将数据从一个存储空间移动到另一个存储空间。 MOV 指令需要两个操作数</div><h4 class="notion-h notion-h3 notion-h-indent-2 notion-block-c5165a6f7d9d445b9c9c0b0854bb3587" data-id="c5165a6f7d9d445b9c9c0b0854bb3587"><span><div id="c5165a6f7d9d445b9c9c0b0854bb3587" class="notion-header-anchor"></div><a class="notion-hash-link" href="#c5165a6f7d9d445b9c9c0b0854bb3587" title="语法 (Syntax)"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">语法 (Syntax)</span></span></h4><div class="notion-text notion-block-bbfac7d8bb2f4c6981efcd0edc2666af">MOV 指令的语法是</div><div class="notion-text notion-block-51f00f1aa00a4a4db8c3eda43278a5be">MOV 指令具有以下五种形式之一</div><div class="notion-text notion-block-f9bb50f2ebea4eac9addaa77f0c99ba5">请注意</div><ul class="notion-list notion-list-disc notion-block-e0ac16e089834e2ebc689a4266b1a65e"><li>MOV 操作中的两个操作数应该保存相同的大小</li></ul><ul class="notion-list notion-list-disc notion-block-8657251b0ed741c28adae7110d56eba9"><li>源操作数的值保持不变</li></ul><div class="notion-text notion-block-d403d37751204d908d087fe7709ae591">MOV 指令有时会引起歧义。 </div><div class="notion-text notion-block-ee3ccc8538bc4feabce4737e9ea9b734">例如，看一下这些</div><div class="notion-text notion-block-0d17672d385f48e6bdfe8e12c01aa292">目前尚不清楚是否要移动数字等效的字节或等效数字 110. 在这种情况下，使用 <b>type specifier</b> 是明智的选择</div><div class="notion-text notion-block-9941cfd3865c482da4d099ac2b00260a">下表显示了一些常见的类型说明符 -</div><table class="notion-simple-table notion-block-ee886b9b1a0f4dc2bdc2f2c1e0c8aa9b"><tbody><tr class="notion-simple-table-row notion-block-ad9016754a40445ab243d57391e101ba"><td class="" style="width:120px"><div class="notion-simple-table-cell">类型说明符</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">字节</div></td></tr><tr class="notion-simple-table-row notion-block-694a26c8e09f413fae494487f6b1a221"><td class="" style="width:120px"><div class="notion-simple-table-cell">BYTE(字节)</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">1</div></td></tr><tr class="notion-simple-table-row notion-block-060f6bad44af49e385008121eaca521d"><td class="" style="width:120px"><div class="notion-simple-table-cell">WORD(字)</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">2</div></td></tr><tr class="notion-simple-table-row notion-block-0446418dc3c84d66b683758ad13eb891"><td class="" style="width:120px"><div class="notion-simple-table-cell">DWORD(双字)</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">4</div></td></tr><tr class="notion-simple-table-row notion-block-7bd90afb448143a9aaeb5cf1941e084d"><td class="" style="width:120px"><div class="notion-simple-table-cell">QWORD(四字)</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">8</div></td></tr><tr class="notion-simple-table-row notion-block-f1d44a6c1851410c98ea9bae742e44fd"><td class="" style="width:120px"><div class="notion-simple-table-cell">TBYTE(太字节)</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">10</div></td></tr></tbody></table><h4 class="notion-h notion-h3 notion-h-indent-2 notion-block-cce1ca73b537480b99c8dfc5ea34f421" data-id="cce1ca73b537480b99c8dfc5ea34f421"><span><div id="cce1ca73b537480b99c8dfc5ea34f421" class="notion-header-anchor"></div><a class="notion-hash-link" href="#cce1ca73b537480b99c8dfc5ea34f421" title="例子 (Example)"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">例子 (Example)</span></span></h4><div class="notion-text notion-block-2684514ebdf04fbe9cdcc1b5c9ac6d35">以下程序说明了上面讨论的一些概念。 </div><div class="notion-text notion-block-0ad63ccde5e744f0bc110e8ba85ae9e3">它在内存的数据部分中存储名称 “Zara Ali”，然后以编程方式将其值更改为另一个名称“Nuha Ali” 并显示这两个名称</div><div class="notion-text notion-block-fc3e0e23d8194a70aa3428c8bd3f5dd2">编译并执行上述代码时，会产生以下结果</div><h2 class="notion-h notion-h1 notion-h-indent-0 notion-block-7d7f8bc958624c66833fdf1ca4bcdf46" data-id="7d7f8bc958624c66833fdf1ca4bcdf46"><span><div id="7d7f8bc958624c66833fdf1ca4bcdf46" class="notion-header-anchor"></div><a class="notion-hash-link" href="#7d7f8bc958624c66833fdf1ca4bcdf46" title="变量(Variable)"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">变量(Variable)</span></span></h2><div class="notion-blank notion-block-a0951ef278064ad79d3e80869abc4f94"> </div><div class="notion-text notion-block-8c1ab7e1dc024ba5a2768895cf7d2d32">NASM 提供了各种 <b>define directives</b> 用于为变量保留存储空间。 define assembler 指令用于分配存储空间。 它可用于保留以及初始化一个或多个字节。</div><h3 class="notion-h notion-h2 notion-h-indent-1 notion-block-4a96c8c887df45f2b11cf16a8b67d3c2" data-id="4a96c8c887df45f2b11cf16a8b67d3c2"><span><div id="4a96c8c887df45f2b11cf16a8b67d3c2" class="notion-header-anchor"></div><a class="notion-hash-link" href="#4a96c8c887df45f2b11cf16a8b67d3c2" title="为初始化数据分配存储空间"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">为初始化数据分配存储空间</span></span></h3><div class="notion-text notion-block-f46db0bb38cd47118d8c2b52c9046aaf">初始化数据的存储分配语句的语法是</div><div class="notion-text notion-block-54dcee9283624de09f02c809d9c45d76">其中,variable-name是每个存储空间的标识符。 汇编程序为数据段中定义的每个变量名称关联一个偏移值。</div><div class="notion-text notion-block-90dd3550bcd04e7992c9b16e4249b26f">define 指令有五种基本形式 -</div><table class="notion-simple-table notion-block-b1836b0fabcb415b9376c55d03627dea"><tbody><tr class="notion-simple-table-row notion-block-e77edcd7945a4baa8c6ac8afa43821de"><td class="" style="width:120px"><div class="notion-simple-table-cell">类型</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">目的</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">大小</div></td></tr><tr class="notion-simple-table-row notion-block-834c49057fcb416b9cfb4ce2a4e4cff7"><td class="" style="width:120px"><div class="notion-simple-table-cell">DB</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">定义字节(byte)</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">分配 1 个字节</div></td></tr><tr class="notion-simple-table-row notion-block-1065f74af663405d9f783a286fea5fea"><td class="" style="width:120px"><div class="notion-simple-table-cell">DW</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">定义字(word)</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">分配 2 个字节</div></td></tr><tr class="notion-simple-table-row notion-block-d033a5a43f034fffa2ecf7a2141b4378"><td class="" style="width:120px"><div class="notion-simple-table-cell">DD</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">定义双字(dword)</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">分配 4 个字节</div></td></tr><tr class="notion-simple-table-row notion-block-18e4007888b34435a1419fc7c0722f83"><td class="" style="width:120px"><div class="notion-simple-table-cell">DQ</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">定义四字(qword)</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">分配 8 个字节</div></td></tr><tr class="notion-simple-table-row notion-block-9171d4ac07544083b49c3eb4fabe93d7"><td class="" style="width:120px"><div class="notion-simple-table-cell">DT</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">定义十个字节</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">分配 10 个字节</div></td></tr></tbody></table><div class="notion-text notion-block-e1edf17ee7b7483997d788101a45838e">以下是使用 define 指令的一些示例 -</div><div class="notion-text notion-block-38377610e1814bbfb34984bd3a1bd4b9">注意 </div><ul class="notion-list notion-list-disc notion-block-99dbb4420adc4346b09b7185a7211ba8"><li>字符的每个字节都以十六进制的 ASCII 值存储</li></ul><ul class="notion-list notion-list-disc notion-block-0ced604444ef4310b335bf13376408e8"><li>每个十进制值自动转换为 16 位二进制等效值并存储为十六进制数</li></ul><ul class="notion-list notion-list-disc notion-block-e16d19f7ba7d45b3b3d82bd4f5745c17"><li>处理器使用 little-endian (小端序)字节排序</li></ul><ul class="notion-list notion-list-disc notion-block-9de91088953e451d8b2d6b6aa2151cc1"><li>负数转换为补码表示</li></ul><ul class="notion-list notion-list-disc notion-block-5ff6c0c6db0c434e9adef4c7b252dd77"><li>短和长浮点数分别使用 32 或 64 位表示</li></ul><div class="notion-text notion-block-dcf6b8e146394edcb8c56154bd44273a">以下程序显示了使用 define 指令</div><div class="notion-text notion-block-395cf72e599b42628a5415d0e1229299">编译并执行上述代码时，会产生以下结果</div><h3 class="notion-h notion-h2 notion-h-indent-1 notion-block-44db593eae5c453ebfc1841188064f8c" data-id="44db593eae5c453ebfc1841188064f8c"><span><div id="44db593eae5c453ebfc1841188064f8c" class="notion-header-anchor"></div><a class="notion-hash-link" href="#44db593eae5c453ebfc1841188064f8c" title="为未初始化数据分配存储空间"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">为未初始化数据分配存储空间</span></span></h3><div class="notion-text notion-block-852a1fbd06eb42c1a4e6567537055af7">保留指令用于为未初始化数据保留空间</div><div class="notion-text notion-block-a1e2a03d44d24825a5233c4e03d335ba">保留指令采用单个操作数，指定要保留的空间单元数</div><div class="notion-text notion-block-fb09d51a5c34475aaec5e189619396d7">每个 define 指令都有一个相关的保留指令</div><div class="notion-text notion-block-92db70b98d4745a593853b9342d89f7a">保留指令有五种基本形式 </div><table class="notion-simple-table notion-block-d5e825471fcc4019909d549a158caace"><tbody><tr class="notion-simple-table-row notion-block-cedbb7bf5e4b4846899d23790c43c05f"><td class="" style="width:120px"><div class="notion-simple-table-cell">指示</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">目的</div></td></tr><tr class="notion-simple-table-row notion-block-dc54f0be192e4978b7338aa232ff8cdd"><td class="" style="width:120px"><div class="notion-simple-table-cell">RESB</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">预留一个字节(byte)</div></td></tr><tr class="notion-simple-table-row notion-block-aee320b3de984525954b445caebc4f4c"><td class="" style="width:120px"><div class="notion-simple-table-cell">RESW</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">预留一个字(word)</div></td></tr><tr class="notion-simple-table-row notion-block-426737329c9a43b68f2c604928ed0810"><td class="" style="width:120px"><div class="notion-simple-table-cell">RESD</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">预留一个双字(dword)</div></td></tr><tr class="notion-simple-table-row notion-block-1dc970d9505e4af6b147bbaad16a3f9f"><td class="" style="width:120px"><div class="notion-simple-table-cell">RESQ</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">预留一个四节(qword)</div></td></tr><tr class="notion-simple-table-row notion-block-6039866a7dcf4e2486ec7e6590b267fd"><td class="" style="width:120px"><div class="notion-simple-table-cell">REST</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">预留十个字节</div></td></tr></tbody></table><h3 class="notion-h notion-h2 notion-h-indent-1 notion-block-813000ab5ffb4160945d784dbecd72e6" data-id="813000ab5ffb4160945d784dbecd72e6"><span><div id="813000ab5ffb4160945d784dbecd72e6" class="notion-header-anchor"></div><a class="notion-hash-link" href="#813000ab5ffb4160945d784dbecd72e6" title="多个定义"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">多个定义</span></span></h3><div class="notion-text notion-block-1563d5915ed847699dbc4909f71a56e9">您可以在程序中拥有多个数据定义语句。</div><div class="notion-text notion-block-241aefc2a0d74e4aa6fface8639a7f2e">例如 </div><div class="notion-text notion-block-227e4f4c93fc42e89c4f7c1722bbc04a">汇编程序为多个变量定义分配连续内存</div><h3 class="notion-h notion-h2 notion-h-indent-1 notion-block-0bda7d8747764e17aa1e13daae1b4f21" data-id="0bda7d8747764e17aa1e13daae1b4f21"><span><div id="0bda7d8747764e17aa1e13daae1b4f21" class="notion-header-anchor"></div><a class="notion-hash-link" href="#0bda7d8747764e17aa1e13daae1b4f21" title="多次初始化"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">多次初始化</span></span></h3><div class="notion-text notion-block-4f3ba31fbcfc40c3a1c316e9aecde55c">TIMES 指令允许多次初始化为相同的值。 </div><div class="notion-text notion-block-7d8a106e4a9b42c7ad07c1f64461a0fe">例如，可以使用以下语句定义名为 9 的标记数组并将其初始化为零 </div><div class="notion-text notion-block-714de20c474b476cb79ee86b140545e6">TIMES 指令在定义数组和表时很有用。 以下程序在屏幕上显示 9 个星号</div><div class="notion-text notion-block-42bd645b72fd40deb747db112f4977b8">编译并执行上述代码时，会产生以下结果</div><h2 class="notion-h notion-h1 notion-h-indent-0 notion-block-cb22fa520b8e4788968208adc2b6f704" data-id="cb22fa520b8e4788968208adc2b6f704"><span><div id="cb22fa520b8e4788968208adc2b6f704" class="notion-header-anchor"></div><a class="notion-hash-link" href="#cb22fa520b8e4788968208adc2b6f704" title="常量(constant)"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">常量(constant)</span></span></h2><div class="notion-blank notion-block-3c87a869942245fc959b47a4b60c4355"> </div><div class="notion-text notion-block-1282f047e02848ac8f36a5f5ba37053c">NASM 提供了几个定义常量的指令。 我们在前面的章节中已经使用了 EQU 指令。 我们将特别讨论三项指令</div><ul class="notion-list notion-list-disc notion-block-36c46858736e438094dbf8530428a5aa"><li>EQU</li></ul><ul class="notion-list notion-list-disc notion-block-c7b67871eec743df9a52201702224823"><li>%assign</li></ul><ul class="notion-list notion-list-disc notion-block-2f788a168dd144389af74f4e52fa2916"><li>%define</li></ul><h3 class="notion-h notion-h2 notion-h-indent-1 notion-block-f1602ddc5c3343a5ba99a66444ae3c68" data-id="f1602ddc5c3343a5ba99a66444ae3c68"><span><div id="f1602ddc5c3343a5ba99a66444ae3c68" class="notion-header-anchor"></div><a class="notion-hash-link" href="#f1602ddc5c3343a5ba99a66444ae3c68" title="EQU 指令"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">EQU 指令</span></span></h3><div class="notion-text notion-block-c5d97ef9af3d4620a15743df96d81700"><b>EQU</b> 指令用于定义常量。 </div><div class="notion-text notion-block-164b38749c06456c8b8d45a48259ca6d">EQU 指令的语法如下</div><div class="notion-text notion-block-45bedc42fdd543438d876ec33a93acc4">例如</div><div class="notion-text notion-block-d5bce874e2ae400f93487cec4657ae95">然后，您可以在代码中使用此常量值，例如</div><div class="notion-text notion-block-7e15046f645a42a1a184d03acf416614">EQU 语句的操作数可以是表达式 </div><div class="notion-text notion-block-06320723cd054f889a5c788329c14f4b">上面的代码段将 AREA 定义为 200</div><h4 class="notion-h notion-h3 notion-h-indent-2 notion-block-7488ebe63909408da210690d0b7ab5f0" data-id="7488ebe63909408da210690d0b7ab5f0"><span><div id="7488ebe63909408da210690d0b7ab5f0" class="notion-header-anchor"></div><a class="notion-hash-link" href="#7488ebe63909408da210690d0b7ab5f0" title="例子 (Example)"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">例子 (Example)</span></span></h4><div class="notion-text notion-block-2cf3ea760e864fc4985e1618e00357c4">以下示例说明了 EQU 指令的使用</div><div class="notion-text notion-block-2c596d81456f407ea59fbfc7a6d2309e">编译并执行上述代码时，会产生以下结果</div><h3 class="notion-h notion-h2 notion-h-indent-1 notion-block-6ca78e287df047c88d6f717d4487781b" data-id="6ca78e287df047c88d6f717d4487781b"><span><div id="6ca78e287df047c88d6f717d4487781b" class="notion-header-anchor"></div><a class="notion-hash-link" href="#6ca78e287df047c88d6f717d4487781b" title="％assign 指令"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">％assign 指令</span></span></h3><div class="notion-text notion-block-9538590ebad04525a04d220a17b2c486"><b>%assign</b> 指令可用于定义 EQU 指令等数字常量。 </div><div class="notion-text notion-block-252cd870d62341cbab4a87cf932ea8cc">该指令允许重新定义。 例如，您可以将常量 TOTAL 定义为</div><div class="notion-text notion-block-45010dc0ee7b4ce6be9444c96cbdf012">之后在代码中，您可以将其重新定义为</div><div class="notion-text notion-block-863626035f6c4a7fa55f4ee939691837">该指令区分大小写。</div><h3 class="notion-h notion-h2 notion-h-indent-1 notion-block-903f2ebe1d1e491c986519fe2f1784a1" data-id="903f2ebe1d1e491c986519fe2f1784a1"><span><div id="903f2ebe1d1e491c986519fe2f1784a1" class="notion-header-anchor"></div><a class="notion-hash-link" href="#903f2ebe1d1e491c986519fe2f1784a1" title="％define指令"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">％define指令</span></span></h3><div class="notion-text notion-block-f50d1425aca8458287f8566f787af06e"><b>%define</b> 指令允许定义数字和字符串常量。 该指令类似于 C 中的 #define。例如，您可以将常量 PTR 定义为</div><div class="notion-text notion-block-77ae869d2bbb401e929d7c893c75fc09">上面的代码用 [EBP + 4] 替换PTR。</div><div class="notion-text notion-block-301c9dcbaee943ddb5ae3c6646db050e">该指令还允许重新定义，并且区分大小写。</div><h2 class="notion-h notion-h1 notion-h-indent-0 notion-block-a94b31efa5ed4d93bf467d5ac0af7b87" data-id="a94b31efa5ed4d93bf467d5ac0af7b87"><span><div id="a94b31efa5ed4d93bf467d5ac0af7b87" class="notion-header-anchor"></div><a class="notion-hash-link" href="#a94b31efa5ed4d93bf467d5ac0af7b87" title="算术指令(Arithmetic Instructions)"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">算术指令(Arithmetic Instructions)</span></span></h2><h3 class="notion-h notion-h2 notion-h-indent-1 notion-block-f548662168174c2690756e3620523364" data-id="f548662168174c2690756e3620523364"><span><div id="f548662168174c2690756e3620523364" class="notion-header-anchor"></div><a class="notion-hash-link" href="#f548662168174c2690756e3620523364" title="INC 指令"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">INC 指令</span></span></h3><div class="notion-text notion-block-e350b61cd19b449cb45b90dbfecfed1b">INC 指令用于将操作数递增 1。 它适用于单个操作数，可以在寄存器或内存中。</div><h4 class="notion-h notion-h3 notion-h-indent-2 notion-block-e0f0e852799b42b393c1517763e59a33" data-id="e0f0e852799b42b393c1517763e59a33"><span><div id="e0f0e852799b42b393c1517763e59a33" class="notion-header-anchor"></div><a class="notion-hash-link" href="#e0f0e852799b42b393c1517763e59a33" title="语法 (Syntax)"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">语法 (Syntax)</span></span></h4><div class="notion-text notion-block-1ae0125523754fd4a2bb3d05ed2ff806">INC 指令具有以下语法</div><div class="notion-text notion-block-69a9080981324ef8bf083db0009b8fca">操作数destination可以是 8 位，16或 32 位操作数。</div><h4 class="notion-h notion-h3 notion-h-indent-2 notion-block-aad7a33803bc4a0a9fd90a228cedca0b" data-id="aad7a33803bc4a0a9fd90a228cedca0b"><span><div id="aad7a33803bc4a0a9fd90a228cedca0b" class="notion-header-anchor"></div><a class="notion-hash-link" href="#aad7a33803bc4a0a9fd90a228cedca0b" title="例子 (Example)"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">例子 (Example)</span></span></h4><h3 class="notion-h notion-h2 notion-h-indent-1 notion-block-751890f67dab4bbcbcb2a7f833280b7d" data-id="751890f67dab4bbcbcb2a7f833280b7d"><span><div id="751890f67dab4bbcbcb2a7f833280b7d" class="notion-header-anchor"></div><a class="notion-hash-link" href="#751890f67dab4bbcbcb2a7f833280b7d" title="DEC 指令"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">DEC 指令</span></span></h3><div class="notion-text notion-block-49932a5c87004833b8351c3142c8efbe">DEC 指令用于将操作数递减 1。 它适用于单个操作数，可以在寄存器或内存中。</div><h4 class="notion-h notion-h3 notion-h-indent-2 notion-block-0c3c831c349d4cf6953990723712c413" data-id="0c3c831c349d4cf6953990723712c413"><span><div id="0c3c831c349d4cf6953990723712c413" class="notion-header-anchor"></div><a class="notion-hash-link" href="#0c3c831c349d4cf6953990723712c413" title="语法 (Syntax)"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">语法 (Syntax)</span></span></h4><div class="notion-text notion-block-dee5472e5cf844539e8daf5c45c74cb0">DEC 指令具有以下语法</div><div class="notion-text notion-block-0fc3230861404631b01f95092c1f0ada">操作数destination可以是 8 位，16 位或 32 位操作数。</div><h4 class="notion-h notion-h3 notion-h-indent-2 notion-block-05342804dead47dd9d71b2855398844a" data-id="05342804dead47dd9d71b2855398844a"><span><div id="05342804dead47dd9d71b2855398844a" class="notion-header-anchor"></div><a class="notion-hash-link" href="#05342804dead47dd9d71b2855398844a" title="例子 (Example)"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">例子 (Example)</span></span></h4><h3 class="notion-h notion-h2 notion-h-indent-1 notion-block-006c25d5d07a41aba4883d9452292263" data-id="006c25d5d07a41aba4883d9452292263"><span><div id="006c25d5d07a41aba4883d9452292263" class="notion-header-anchor"></div><a class="notion-hash-link" href="#006c25d5d07a41aba4883d9452292263" title="ADD 和 SUB 指令"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">ADD 和 SUB 指令</span></span></h3><div class="notion-text notion-block-92f8115d217844c48fb2b7f6deba4d28">ADD 和 SUB 指令用于以字节，字和双字大小执行二进制数据的简单加 / 减，即分别用于加或减 8 位，16 位或 32 位操作数。</div><h4 class="notion-h notion-h3 notion-h-indent-2 notion-block-4cdfb08bcb8445f99ac43d1e1e044692" data-id="4cdfb08bcb8445f99ac43d1e1e044692"><span><div id="4cdfb08bcb8445f99ac43d1e1e044692" class="notion-header-anchor"></div><a class="notion-hash-link" href="#4cdfb08bcb8445f99ac43d1e1e044692" title="语法 (Syntax)"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">语法 (Syntax)</span></span></h4><div class="notion-text notion-block-d6cf52e7cc744d5798f7c1201049841a">ADD 和 SUB 指令具有以下语法</div><div class="notion-text notion-block-ca74126951bb442cae94e39c527d50e9">ADD/SUB 指令可以在下面指令发生</div><ul class="notion-list notion-list-disc notion-block-4931e8951fa54226ac29f98ab4f4eaca"><li>寄存器与寄存器</li></ul><ul class="notion-list notion-list-disc notion-block-97b639cedf404245882532cdd531d7f9"><li>内存与寄存器</li></ul><ul class="notion-list notion-list-disc notion-block-39995c9e164b4425b1b3e3456fe0e688"><li>寄存器与内存</li></ul><ul class="notion-list notion-list-disc notion-block-eeac30376d084056933704604a2a1b4f"><li>寄存器与立即数</li></ul><ul class="notion-list notion-list-disc notion-block-6c9777814b514fc19fe10ce177f1d634"><li>内存与立即数</li></ul><div class="notion-text notion-block-422edbffca924fdebb28c88ed98a7e41">但是，与其他指令一样，使用 ADD/SUB 指令无法进行内存到内存操作。 </div><div class="notion-text notion-block-9b0e00b949cf4b5e8a3bcc2297bc82e8">但使用ADD 或 SUB 可以操作设置或清除溢出和进位标志。</div><h4 class="notion-h notion-h3 notion-h-indent-2 notion-block-1cbadadb64654e04951105efb84aff06" data-id="1cbadadb64654e04951105efb84aff06"><span><div id="1cbadadb64654e04951105efb84aff06" class="notion-header-anchor"></div><a class="notion-hash-link" href="#1cbadadb64654e04951105efb84aff06" title="例子 (Example)"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">例子 (Example)</span></span></h4><div class="notion-text notion-block-7dec8b9c76884072968dd4e7070faed3">以下示例将询问用户的两位数字，分别将数字存储在 EAX 和 EBX 寄存器中，添加值，将结果存储在内存位置 “ <em>res</em> ” 中，最后显示结果。</div><div class="notion-text notion-block-6293b38c6ca840a6b371a399cf1012cf">编译并执行上述代码时，会产生以下结果 </div><div class="notion-text notion-block-50c6762e9482440b9b4ab31da18f427d">硬编码变量定义</div><div class="notion-text notion-block-f66e1d4fed03411c8d69eefe03852d2b">编译并执行上述代码时，会产生以下结果</div><h3 class="notion-h notion-h2 notion-h-indent-1 notion-block-4c1f06f169a341a9a0b46ad5ca5b6ca7" data-id="4c1f06f169a341a9a0b46ad5ca5b6ca7"><span><div id="4c1f06f169a341a9a0b46ad5ca5b6ca7" class="notion-header-anchor"></div><a class="notion-hash-link" href="#4c1f06f169a341a9a0b46ad5ca5b6ca7" title="MUL/IMUL 指令"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">MUL/IMUL 指令</span></span></h3><div class="notion-text notion-block-46417730e6f04ea091a1d63c92db344d">有两个用于乘以二进制数据的指令。 </div><div class="notion-text notion-block-a3f85cfbb92d4eb8a9d2a097db41402f">MUL（Multiply）指令处理无符号数据，IMUL（int multiply）处理带符号数据。 </div><div class="notion-text notion-block-8d8f51eaeb854fc2a3a30a21f8b54123">这两条指令都会影响进位和溢出标志。</div><h4 class="notion-h notion-h3 notion-h-indent-2 notion-block-2de7f7edee974463a5dfc26ae72f1f28" data-id="2de7f7edee974463a5dfc26ae72f1f28"><span><div id="2de7f7edee974463a5dfc26ae72f1f28" class="notion-header-anchor"></div><a class="notion-hash-link" href="#2de7f7edee974463a5dfc26ae72f1f28" title="语法 (Syntax)"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">语法 (Syntax)</span></span></h4><div class="notion-text notion-block-2e3d6575121345948b75340e60d28841">MUL/IMUL 指令的语法如下</div><div class="notion-text notion-block-6232a4139f0f465e90fdf4a5d347c9e6">两种情况下的复数将位于累加器中，具体取决于被乘数和乘数的大小，并且生成的乘积也根据操作数的大小存储在两个寄存器中。</div><div class="notion-text notion-block-f6d40a1c26e04660952f6279df3d2bde"> 以下部分介绍了具有三种不同情况的 MUL 指令</div><ol start="1" class="notion-list notion-list-numbered notion-block-dd381489105c426fbe6ae045c096df9a" style="list-style-type:decimal"><li>当两个字节相乘时</li><ol class="notion-list notion-list-numbered notion-block-dd381489105c426fbe6ae045c096df9a" style="list-style-type:lower-alpha"><div class="notion-text notion-block-6a4f0fc6029247acb2c579d8958fbb6d">被乘数位于AL寄存器中，乘数是存储器或另一个寄存器中的一个字节。 该结果在AX。 结果的高阶8位存储在AH中，低阶8位存储在AL中。</div><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-8d60930f0cb54962a4f78280ef6e241f"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:357px;max-width:100%;flex-direction:column"><img style="object-fit:cover" src="https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F4c06135a-301f-408f-b42b-173ed1ea69c6%2FUntitled.png?table=block&amp;id=8d60930f-0cb5-4962-a4f7-8280ef6e241f&amp;t=8d60930f-0cb5-4962-a4f7-8280ef6e241f&amp;width=357&amp;cache=v2" alt="notion image" loading="lazy" decoding="async"/></div></figure></ol></ol><ol start="2" class="notion-list notion-list-numbered notion-block-6e56bc1766d748ff8fa557e52a261ca2" style="list-style-type:decimal"><li>当两个单字值相乘时</li><ol class="notion-list notion-list-numbered notion-block-6e56bc1766d748ff8fa557e52a261ca2" style="list-style-type:lower-alpha"><div class="notion-text notion-block-eadd321b431c41e48a721f375cdeba66">被乘数应位于AX寄存器中，乘数是存储器中的字或另一个寄存器。 例如，对于像MUL DX这样的指令，必须将乘数存储在DX中，将被乘数存储在AX中</div><div class="notion-text notion-block-eebec54cb2864bbdbe4dc36bea91895b">最终结果是双字，需要两个寄存器。 高阶（最左边）部分存储在DX中，低阶（最右边）部分存储在AX中</div><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-2cbee5add3e140d6b2de9e7478590cf0"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:367px;max-width:100%;flex-direction:column"><img style="object-fit:cover" src="https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F2adf01e2-1ff3-47e6-af10-8b27fdcb8b44%2FUntitled.png?table=block&amp;id=2cbee5ad-d3e1-40d6-b2de-9e7478590cf0&amp;t=2cbee5ad-d3e1-40d6-b2de-9e7478590cf0&amp;width=367&amp;cache=v2" alt="notion image" loading="lazy" decoding="async"/></div></figure></ol></ol><ol start="3" class="notion-list notion-list-numbered notion-block-6b6c77e08b184e3e82a850da6958b4ba" style="list-style-type:decimal"><li>当两个双字值相乘时</li><ol class="notion-list notion-list-numbered notion-block-6b6c77e08b184e3e82a850da6958b4ba" style="list-style-type:lower-alpha"><div class="notion-text notion-block-3b8aca5ed69e48639cc6a32e06dc1f50">当两个双字值相乘时，被乘数应为EAX，乘数为存储在存储器或另一个寄存器中的双字值。 </div><div class="notion-text notion-block-db0dddf6e7e44b7ca5f4f6e9fc85dea7">结果存储在EDX,EAX寄存器中，即高位32位存储在EDX寄存器中，低位32位存储在EAX寄存器中。</div><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-68fbe6f5931e4553b7dd7ccf7201f0a9"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:367px;max-width:100%;flex-direction:column"><img style="object-fit:cover" src="https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F56d9227f-016d-4125-b5eb-dba814eb39ba%2FUntitled.png?table=block&amp;id=68fbe6f5-931e-4553-b7dd-7ccf7201f0a9&amp;t=68fbe6f5-931e-4553-b7dd-7ccf7201f0a9&amp;width=367&amp;cache=v2" alt="notion image" loading="lazy" decoding="async"/></div></figure></ol></ol><h4 class="notion-h notion-h3 notion-h-indent-2 notion-block-4e892f8ab79642969d4b6bf212ac1b6b" data-id="4e892f8ab79642969d4b6bf212ac1b6b"><span><div id="4e892f8ab79642969d4b6bf212ac1b6b" class="notion-header-anchor"></div><a class="notion-hash-link" href="#4e892f8ab79642969d4b6bf212ac1b6b" title="例子 (Example)"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">例子 (Example)</span></span></h4><h4 class="notion-h notion-h3 notion-h-indent-2 notion-block-39b66c27bfa0495793c1ff8cb337cc01" data-id="39b66c27bfa0495793c1ff8cb337cc01"><span><div id="39b66c27bfa0495793c1ff8cb337cc01" class="notion-header-anchor"></div><a class="notion-hash-link" href="#39b66c27bfa0495793c1ff8cb337cc01" title="例子 (Example)"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">例子 (Example)</span></span></h4><div class="notion-text notion-block-881aec118e36491088b50ae5cc0d4880">以下示例将 3 与 2 相乘，并显示结果 </div><div class="notion-text notion-block-4acec1881c3846d187b77505ef9b6d5a">编译并执行上述代码时，会产生以下结果</div><h3 class="notion-h notion-h2 notion-h-indent-1 notion-block-ccd717b8be6145ce946a31b008fd207d" data-id="ccd717b8be6145ce946a31b008fd207d"><span><div id="ccd717b8be6145ce946a31b008fd207d" class="notion-header-anchor"></div><a class="notion-hash-link" href="#ccd717b8be6145ce946a31b008fd207d" title="DIV/IDIV 指令"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">DIV/IDIV 指令</span></span></h3><div class="notion-text notion-block-6b8809a4acc64a0797d0b339641113d2">除法运算生成两个元素 <b>quotient</b> 和 <b>remainder</b> 。 在乘法的情况下，不会发生溢出，因为使用双倍长度寄存器来保留产品。 但是，在分割的情况下，可能会发生溢出。 如果发生溢出，处理器会产生中断</div><div class="notion-text notion-block-bdf93b493f3d4c4b8f7aafe2cd91e03f">DIV（Divide）指令用于无符号数据，IDIV（int Divide）用于签名数据。</div><h4 class="notion-h notion-h3 notion-h-indent-2 notion-block-b646b1f7157445e08def2df09c5bd969" data-id="b646b1f7157445e08def2df09c5bd969"><span><div id="b646b1f7157445e08def2df09c5bd969" class="notion-header-anchor"></div><a class="notion-hash-link" href="#b646b1f7157445e08def2df09c5bd969" title="语法 (Syntax)"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">语法 (Syntax)</span></span></h4><div class="notion-text notion-block-2fda3a33721e49cebfb3b243bb77f728">DIV/IDIV 指令的格式</div><div class="notion-text notion-block-e113a1d9050d4dcd9eb789e58717cea9">被除数在累加器中。 这两条指令都可以用于 8 位，16 位或 32 位操作数。</div><div class="notion-text notion-block-12ddd35e1ccc4fa8a2e0aebe8fe09aeb">该操作会影响所有六个状态标志器。</div><div class="notion-text notion-block-1929173916af4a6b9ba0db999581ab7f"> 以下部分介绍了具有不同操作数大小的三种划分案例</div><ol start="1" class="notion-list notion-list-numbered notion-block-3ce4685c4fe14b1aaa75c723ed8dc0c9" style="list-style-type:decimal"><li>当除数为1字节时</li><ol class="notion-list notion-list-numbered notion-block-3ce4685c4fe14b1aaa75c723ed8dc0c9" style="list-style-type:lower-alpha"><div class="notion-text notion-block-8e3d8ad2d0594af7b214b58bf21bfa5b">假设被除数在AX寄存器中（16位）。 除法后，商进入AL寄存器，余数进入AH寄存器</div><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-3f8ad0f1d3f842d7b8aeb12ea97f6ae3"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:405px;max-width:100%;flex-direction:column"><img style="object-fit:cover" src="https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fa9c5bb58-76e3-4db7-aded-4c4b5df20571%2FUntitled.png?table=block&amp;id=3f8ad0f1-d3f8-42d7-b8ae-b12ea97f6ae3&amp;t=3f8ad0f1-d3f8-42d7-b8ae-b12ea97f6ae3&amp;width=405&amp;cache=v2" alt="notion image" loading="lazy" decoding="async"/></div></figure></ol></ol><ol start="2" class="notion-list notion-list-numbered notion-block-06b20f2c8bd84eceb9098d3e29da1cb4" style="list-style-type:decimal"><li>当除数为1个字时</li><ol class="notion-list notion-list-numbered notion-block-06b20f2c8bd84eceb9098d3e29da1cb4" style="list-style-type:lower-alpha"><div class="notion-text notion-block-5453c512097247758fccd951e6b39cbc">假设被除数为32位，在DX:AX寄存器中。 高阶16位在DX中，低阶16位在AX中。 除法后，16位商进入AX寄存器，16位余数进入DX寄存器</div><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-eaedc0e8c31944eab3ce4d03c14ddb12"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:380px;max-width:100%;flex-direction:column"><img style="object-fit:cover" src="https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fd6b7b753-1a32-439f-ae20-c27ee4f814f9%2FUntitled.png?table=block&amp;id=eaedc0e8-c319-44ea-b3ce-4d03c14ddb12&amp;t=eaedc0e8-c319-44ea-b3ce-4d03c14ddb12&amp;width=380&amp;cache=v2" alt="notion image" loading="lazy" decoding="async"/></div></figure></ol></ol><ol start="3" class="notion-list notion-list-numbered notion-block-810d8a8a731d448897a22a7704bc0fee" style="list-style-type:decimal"><li>当除数是双字时</li><ol class="notion-list notion-list-numbered notion-block-810d8a8a731d448897a22a7704bc0fee" style="list-style-type:lower-alpha"><div class="notion-text notion-block-5ff1eb080c154ae09621a6345c054a06">假设被除数为64位，并且在EDX,EAX寄存器中。 高阶32位在EDX中，低阶32位在EAX中。 </div><div class="notion-text notion-block-74e6f7d3b38944f49bd8434ccb9c0d66">除法后，32位商进入EAX寄存器，32位余数进入EDX寄存器</div><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-6415ca4ef06147e889c17cf18f5c7628"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:369px;max-width:100%;flex-direction:column"><img style="object-fit:cover" src="https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F55080b07-3457-4b46-a510-7867bb08845b%2FUntitled.png?table=block&amp;id=6415ca4e-f061-47e8-89c1-7cf18f5c7628&amp;t=6415ca4e-f061-47e8-89c1-7cf18f5c7628&amp;width=369&amp;cache=v2" alt="notion image" loading="lazy" decoding="async"/></div></figure></ol></ol><h4 class="notion-h notion-h3 notion-h-indent-2 notion-block-360c28d78f964232a1a91e501c29fc5f" data-id="360c28d78f964232a1a91e501c29fc5f"><span><div id="360c28d78f964232a1a91e501c29fc5f" class="notion-header-anchor"></div><a class="notion-hash-link" href="#360c28d78f964232a1a91e501c29fc5f" title="例子 (Example)"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">例子 (Example)</span></span></h4><div class="notion-text notion-block-77a82ee0231a4eca8cf767451ccd8a8c">以下示例将 8 除以 2 被除数 <b>8</b> 存储在 <b>16-bit AX register</b> ， 除数<b> 2</b> 存储在 <b>8-bit BL register</b> 。</div><div class="notion-text notion-block-d9b0cf2ad801442eb222e16f6670ffb5">编译并执行上述代码时，会产生以下结果</div><h2 class="notion-h notion-h1 notion-h-indent-0 notion-block-e3fa42f63f4b4cd3bc3accfaef5a3560" data-id="e3fa42f63f4b4cd3bc3accfaef5a3560"><span><div id="e3fa42f63f4b4cd3bc3accfaef5a3560" class="notion-header-anchor"></div><a class="notion-hash-link" href="#e3fa42f63f4b4cd3bc3accfaef5a3560" title="逻辑指令(Arithmetic Instructions)"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">逻辑指令(Arithmetic Instructions)</span></span></h2><div class="notion-text notion-block-1612e00f9bd34641bee034d30f9e659d">处理器指令集提供指令 AND，OR，XOR，TEST 和 NOT 布尔逻辑，根据程序的需要测试，设置和清除位</div><div class="notion-text notion-block-c3aa459f31de4a75b94b6a23346a197d">指令格式 </div><table class="notion-simple-table notion-block-45a62b67538045418819d6d52a264296"><tbody><tr class="notion-simple-table-row notion-block-c3ad569a15c44c80ba946f35f5e14d89"><td class="" style="width:120px"><div class="notion-simple-table-cell">序号</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">指令</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">格式</div></td></tr><tr class="notion-simple-table-row notion-block-01dbe80e0236459285d2c1f9f0167b54"><td class="" style="width:120px"><div class="notion-simple-table-cell">1</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">AND</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">AND operand1，operand2</div></td></tr><tr class="notion-simple-table-row notion-block-8d8542f6d0f0461d81fd904002ec2fdb"><td class="" style="width:120px"><div class="notion-simple-table-cell">2</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">OR</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">OR operand1，operand2</div></td></tr><tr class="notion-simple-table-row notion-block-e4459b4de1b14cd7b27d7806b7f8af8c"><td class="" style="width:120px"><div class="notion-simple-table-cell">3</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">XOR</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">XOR operand1，operand2</div></td></tr><tr class="notion-simple-table-row notion-block-65923da8b927413997d55da4a0439849"><td class="" style="width:120px"><div class="notion-simple-table-cell">4</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">TEST</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">TEST operand1，operand2</div></td></tr><tr class="notion-simple-table-row notion-block-2d69fded068340dab9d3a1e1fdda6b58"><td class="" style="width:120px"><div class="notion-simple-table-cell">5</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">NOT</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">NOT operand1</div></td></tr></tbody></table><div class="notion-text notion-block-51c860c0ee0247d1b6097958a7edc4e7">所有情况下的第一个操作数可以是寄存器也可以是内存。 第二个操作数可以是寄存器,内存或立即数（常量）值。 但是，内存到内存操作是不可能的。 这些指令比较或匹配操作数的位，并设置 CF，OF，PF，SF 和 ZF 标志。</div><h3 class="notion-h notion-h2 notion-h-indent-1 notion-block-900f94bd91e34d66b61cb7ced8510b06" data-id="900f94bd91e34d66b61cb7ced8510b06"><span><div id="900f94bd91e34d66b61cb7ced8510b06" class="notion-header-anchor"></div><a class="notion-hash-link" href="#900f94bd91e34d66b61cb7ced8510b06" title="AND 指令"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">AND 指令</span></span></h3><div class="notion-text notion-block-4292f8e536b04c92bdb61b5f3f46a918">AND 指令用于通过执行按位 AND 运算来支持逻辑表达式。 </div><div class="notion-text notion-block-8a0ae22bb9bb4d8bb6e062c332c6153a">如果来自两个操作数的匹配位为 1，则按位 AND 操作返回 1，否则返回 0. </div><div class="notion-text notion-block-793c8b612bac4838a18d23578de3bcd4">例如</div><div class="notion-text notion-block-9e678537cef04637a829cc2bd90a8266">AND 操作可用于清除一个或多个位。 </div><div class="notion-text notion-block-e58dd3cbdfa041a08750e44add05facf">例如，假设 BL 寄存器包含 0011 1010. 如果需要将高位清零，则将其与 0FH 进行 AND 运算。</div><div class="notion-text notion-block-943976bf7f864a1e803c4f8d331fe5b5">让我们举另一个例子。 </div><div class="notion-text notion-block-bf4d635720e847b1a135efecd3f2c2cb">如果要检查给定数字是奇数还是偶数，一个简单的测试就是检查数字的最低有效位。 </div><div class="notion-text notion-block-e9c00e32bd19400ba33192428655c55c">如果为 1，则数字为奇数，否则数字为偶数。</div><div class="notion-text notion-block-758bd86437664288a7835bcbdca50a6b">假设数字在 AL 寄存器中，我们可以写</div><div class="notion-text notion-block-505b650fdea64757930827f5363b2d87">以下程序说明了这一点 </div><h4 class="notion-h notion-h3 notion-h-indent-2 notion-block-06dd66a0c16a40ed96047338fbb6dd6b" data-id="06dd66a0c16a40ed96047338fbb6dd6b"><span><div id="06dd66a0c16a40ed96047338fbb6dd6b" class="notion-header-anchor"></div><a class="notion-hash-link" href="#06dd66a0c16a40ed96047338fbb6dd6b" title="例子 (Example)"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">例子 (Example)</span></span></h4><div class="notion-text notion-block-9281baef832845fc8d876385e9fd137c">编译并执行上述代码时，会产生以下结果</div><div class="notion-text notion-block-90af6b97f2584fbba381481e57f3bbeb">使用奇数位更改 ax 寄存器中的值，如</div><div class="notion-text notion-block-d338c134a01147289b0e036c79f60904">该程序将显示:</div><div class="notion-text notion-block-ea9b467b3ebd4b8282fa5764069ed6b8">同样清除整个寄存器，你可以用 00H 清除它。</div><h3 class="notion-h notion-h2 notion-h-indent-1 notion-block-9733b1d2f66840caa020e769aeb69afc" data-id="9733b1d2f66840caa020e769aeb69afc"><span><div id="9733b1d2f66840caa020e769aeb69afc" class="notion-header-anchor"></div><a class="notion-hash-link" href="#9733b1d2f66840caa020e769aeb69afc" title="OR 指令"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">OR 指令</span></span></h3><div class="notion-text notion-block-bd06aba288494317b00fa71950d8439a">OR 指令用于通过执行按位 OR 运算来支持逻辑表达式</div><div class="notion-text notion-block-30136cb8b0bd4c308b9801e2fe66683d">如果来自任一操作数或两个操作数的匹配位为 1，则按位 OR 运算符返回 1。 如果两个位都为零，则返回 0</div><div class="notion-text notion-block-33f59738a3654d52ac0a832938f131bf">例如</div><div class="notion-text notion-block-5c3a1e682b1640b0a4055441bf63e779">OR 运算可用于设置一个或多个位</div><div class="notion-text notion-block-d9a8e85cd0cb4f61a79d11aa6d2e0182">例如，让我们假设 AL 寄存器包含 0011 1010，您需要设置四个低位，您可以使用值 0000 1111 进行 OR 运算，即 FH。</div><h4 class="notion-h notion-h3 notion-h-indent-2 notion-block-082bcbe7be8c44fa8b3df44aed3c87e6" data-id="082bcbe7be8c44fa8b3df44aed3c87e6"><span><div id="082bcbe7be8c44fa8b3df44aed3c87e6" class="notion-header-anchor"></div><a class="notion-hash-link" href="#082bcbe7be8c44fa8b3df44aed3c87e6" title="例子 (Example)"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">例子 (Example)</span></span></h4><div class="notion-text notion-block-b81ea361fb6a4d74bf435af2e5f1e693">以下示例演示 OR 指令。 让我们分别在 AL 和 BL 寄存器中存储值 5 和 3，然后是指令</div><div class="notion-text notion-block-aa56f1f957654f24ad6abfe2c4740a18">结果应该是在 AL 寄存器中存储 7</div><div class="notion-text notion-block-b4584a4f6bb6405491d6856d110ed0b9">编译并执行上述代码时，会产生以下结果</div><h3 class="notion-h notion-h2 notion-h-indent-1 notion-block-11a762a334f840d283ddda2e2774e4be" data-id="11a762a334f840d283ddda2e2774e4be"><span><div id="11a762a334f840d283ddda2e2774e4be" class="notion-header-anchor"></div><a class="notion-hash-link" href="#11a762a334f840d283ddda2e2774e4be" title="XOR 指令"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">XOR 指令</span></span></h3><div class="notion-text notion-block-455f1e949ca34157bf2e43792060b866">XOR 指令实现按位 XOR 运算。 当且仅当来自操作数的位不同时，XOR 操作将结果位设置为 1。</div><div class="notion-text notion-block-5a7b3ffbc2344c3cb4491f2fd712b69d">如果来自操作数的位相同（均为 0 或均为 1），则结果位清零。</div><div class="notion-text notion-block-180b623bad6c405bbdae162419b80484">例如，</div><div class="notion-text notion-block-4e75014a893d4bbeacd96b8d8fbc8c82">对操作数进行异或操作操作数更改为 <b>0</b> </div><div class="notion-text notion-block-d1e47e3d88d6401aae24955d70e68aca">这通常用于清除寄存器</div><h3 class="notion-h notion-h2 notion-h-indent-1 notion-block-080210e45c0f49a6a4f91a3939545d46" data-id="080210e45c0f49a6a4f91a3939545d46"><span><div id="080210e45c0f49a6a4f91a3939545d46" class="notion-header-anchor"></div><a class="notion-hash-link" href="#080210e45c0f49a6a4f91a3939545d46" title="TEST指令"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">TEST指令</span></span></h3><div class="notion-text notion-block-5cb246d3b32743e0857f34665f0ab3ca">TEST 指令与 AND 操作的作用相同，但与 AND 指令不同，它不会更改第一个操作数。</div><div class="notion-text notion-block-e59b50fde46440d7b97a16675ceb935d"> 因此，如果我们需要检查寄存器中的数字是偶数还是奇数，我们也可以使用 TEST 指令执行此操作而不更改原始数字。</div><h3 class="notion-h notion-h2 notion-h-indent-1 notion-block-607d6511b6f24b94baccc2836c20e16a" data-id="607d6511b6f24b94baccc2836c20e16a"><span><div id="607d6511b6f24b94baccc2836c20e16a" class="notion-header-anchor"></div><a class="notion-hash-link" href="#607d6511b6f24b94baccc2836c20e16a" title="NOT 指令"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">NOT 指令</span></span></h3><div class="notion-text notion-block-7a75e57424ec4f41a358130da6967060">NOT 指令实现按位 NOT 操作。 </div><div class="notion-text notion-block-2831b207f34140eda256f16975eea14d">NOT 操作会反转操作数中的位。 操作数可以在寄存器中，也可以在内存中。</div><div class="notion-text notion-block-0b741978f7224ba8bd3d9dbee94d4dc1">例如</div><h2 class="notion-h notion-h1 notion-h-indent-0 notion-block-ac44fca62f514c4a90ea3c496c87229d" data-id="ac44fca62f514c4a90ea3c496c87229d"><span><div id="ac44fca62f514c4a90ea3c496c87229d" class="notion-header-anchor"></div><a class="notion-hash-link" href="#ac44fca62f514c4a90ea3c496c87229d" title="条件(Conditions)"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">条件(Conditions)</span></span></h2><div class="notion-text notion-block-1ded698241ec4448a045bb5a60938478">汇编语言中的条件执行是通过几个循环和分支指令完成的。 </div><div class="notion-text notion-block-5153eb44d62d43e6af3baa338937adbf">这些指令可以改变程序中的控制流程。</div><div class="notion-text notion-block-dd7db8023d0943b991f20eef6f5103f1">条件执行一般分为两种</div><ol start="1" class="notion-list notion-list-numbered notion-block-1d7c829daa364405ba11ef40c898fab8" style="list-style-type:decimal"><li>无条件跳转</li><ol class="notion-list notion-list-numbered notion-block-1d7c829daa364405ba11ef40c898fab8" style="list-style-type:lower-alpha"><div class="notion-text notion-block-4a203cb4836e4712b89d7a9fde5b3896">由JMP指令执行。 条件执行通常涉及将控制转移到不遵循当前正在执行的指令的指令的地址。 控制转移可以是转换执行一组新指令或反向转移，以重新执行相同的步骤。</div></ol></ol><ol start="2" class="notion-list notion-list-numbered notion-block-720737948d834cfcb765f5f64fc5a0ba" style="list-style-type:decimal"><li>条件跳转</li><ol class="notion-list notion-list-numbered notion-block-720737948d834cfcb765f5f64fc5a0ba" style="list-style-type:lower-alpha"><div class="notion-text notion-block-341f5c71d2fb49b683909df0416389fd">由一组跳转指令jxx系列指令根据条件执行的。 条件指令通过中断顺序流来传输控制，并通过更改IP中的偏移值来完成</div></ol></ol><div class="notion-text notion-block-814520aaf61e4ef4ae863018b74d7273">在讨论条件指令之前，让我们讨论 CMP 指令。</div><h3 class="notion-h notion-h2 notion-h-indent-1 notion-block-671cf5b5754e4ac2838515ae8dc3a569" data-id="671cf5b5754e4ac2838515ae8dc3a569"><span><div id="671cf5b5754e4ac2838515ae8dc3a569" class="notion-header-anchor"></div><a class="notion-hash-link" href="#671cf5b5754e4ac2838515ae8dc3a569" title="CMP 指令"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">CMP 指令</span></span></h3><div class="notion-text notion-block-5a09874160044f0196d3e61c7796260b">CMP 指令比较两个操作数。 它通常用于条件执行。 </div><div class="notion-text notion-block-f48c64182ec04d12ac62c4b504766b6f">该指令原理是从另一个操作数中减去一个操作数，以比较操作数是否相等。 </div><div class="notion-text notion-block-dd70631fe20d48e6b6897d854a9d5e66">它不会干扰目的操作数或源操作数的值。 </div><div class="notion-text notion-block-761cee78c0f14224a46cbcca23d1a2b7">它与条件跳转指令一起用于决策</div><h4 class="notion-h notion-h3 notion-h-indent-2 notion-block-f47e9ffee04645c79242e0ff7e13eabf" data-id="f47e9ffee04645c79242e0ff7e13eabf"><span><div id="f47e9ffee04645c79242e0ff7e13eabf" class="notion-header-anchor"></div><a class="notion-hash-link" href="#f47e9ffee04645c79242e0ff7e13eabf" title="语法 (Syntax)"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">语法 (Syntax)</span></span></h4><div class="notion-text notion-block-0bf65051a56b43a19a1572a7d4aa13b7">CMP 比较两个数字数据字段。 </div><div class="notion-text notion-block-1b161e6881af4510aa5fe6c98efd99a6">目标操作数可以在寄存器中，也可以在内存中。 源操作数可以是常量（立即数）数据，寄存器或内存中</div><h4 class="notion-h notion-h3 notion-h-indent-2 notion-block-cbe7dfb9803f4abe8c13a4913e0b41b2" data-id="cbe7dfb9803f4abe8c13a4913e0b41b2"><span><div id="cbe7dfb9803f4abe8c13a4913e0b41b2" class="notion-header-anchor"></div><a class="notion-hash-link" href="#cbe7dfb9803f4abe8c13a4913e0b41b2" title="例子 (Example)"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">例子 (Example)</span></span></h4><div class="notion-text notion-block-8362bbe26da74f269061263bb4e2a55f">CMP 通常用于比较计数器值是否已达到循环需要运行的次数。 </div><div class="notion-text notion-block-64e6a27b9a10463cbae5f1e62c74eb60">考虑以下典型情况 </div><h3 class="notion-h notion-h2 notion-h-indent-1 notion-block-dd363414c10a464d80809e333cbac6a3" data-id="dd363414c10a464d80809e333cbac6a3"><span><div id="dd363414c10a464d80809e333cbac6a3" class="notion-header-anchor"></div><a class="notion-hash-link" href="#dd363414c10a464d80809e333cbac6a3" title="无条件跳转"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">无条件跳转</span></span></h3><div class="notion-text notion-block-f0c4b3592c1749ba909a53958ebf00ba">如前所述，这是由 JMP 指令执行的。 </div><div class="notion-text notion-block-a9f8f7f6cff54569bf06ec6f2fcad28c">条件执行通常涉及将控制转移到不遵循当前正在执行的指令的指令的地址。 控制转移可以是转发，执行一组新指令或反向转移，以重新执行相同的步骤。</div><h4 class="notion-h notion-h3 notion-h-indent-2 notion-block-6c5a0e11ac2945c894a36ca974c40474" data-id="6c5a0e11ac2945c894a36ca974c40474"><span><div id="6c5a0e11ac2945c894a36ca974c40474" class="notion-header-anchor"></div><a class="notion-hash-link" href="#6c5a0e11ac2945c894a36ca974c40474" title="语法 (Syntax)"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">语法 (Syntax)</span></span></h4><div class="notion-text notion-block-f367fbf374c243d8852421f8b3137557">JMP 指令提供标签名称，其中控制流立即传输。 JMP 指令的语法是</div><h4 class="notion-h notion-h3 notion-h-indent-2 notion-block-af4d4f13a7604385994f692d4c4cd89b" data-id="af4d4f13a7604385994f692d4c4cd89b"><span><div id="af4d4f13a7604385994f692d4c4cd89b" class="notion-header-anchor"></div><a class="notion-hash-link" href="#af4d4f13a7604385994f692d4c4cd89b" title="例子 (Example)"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">例子 (Example)</span></span></h4><div class="notion-text notion-block-641437151cc748408f067c393909e829">以下代码片段说明了 JMP 指令</div><h3 class="notion-h notion-h2 notion-h-indent-1 notion-block-3c508222c0864992b5be1217beea818f" data-id="3c508222c0864992b5be1217beea818f"><span><div id="3c508222c0864992b5be1217beea818f" class="notion-header-anchor"></div><a class="notion-hash-link" href="#3c508222c0864992b5be1217beea818f" title="有条件的跳转"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">有条件的跳转</span></span></h3><div class="notion-text notion-block-af05a207a8534109a6fbb495fd26e24f">如果在条件跳转中满足某些指定条件，则控制流被转移到目标指令。 </div><div class="notion-text notion-block-90f95e5b03084c3a9f4fdcdbc3cb2f82">根据条件和数据，有许多条件跳转指令</div><div class="notion-text notion-block-bb6b8a40b46849f4bfa2b090de35030f">以下是用于算术运算的带符号数据的条件跳转指令</div><table class="notion-simple-table notion-block-d7d6b3fb8a15455491c4810d8dca4e69"><tbody><tr class="notion-simple-table-row notion-block-55fd5f8425ea4c5fab08cade708b9a96"><td class="" style="width:120px"><div class="notion-simple-table-cell">指令</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">描述</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">标志</div></td></tr><tr class="notion-simple-table-row notion-block-125c0a321cc64ec1baee94c3d14fae8c"><td class="" style="width:120px"><div class="notion-simple-table-cell">JE/JZ</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">跳跃等于或跳零(=/=0)</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">ZF</div></td></tr><tr class="notion-simple-table-row notion-block-cf2b1ca109c74e3db56128cb9f08c175"><td class="" style="width:120px"><div class="notion-simple-table-cell">JNE/JNZ</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">跳不等或跳不零(≠/≠0)</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">ZF</div></td></tr><tr class="notion-simple-table-row notion-block-69ffe23ee9bc42ba97dfce83b7b46c30"><td class="" style="width:120px"><div class="notion-simple-table-cell">JG/JNLE</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">跳得更大或跳不少 / 加上等</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">OF, SF, ZF</div></td></tr><tr class="notion-simple-table-row notion-block-0ee7786872f1424983ea8cfa25873244"><td class="" style="width:120px"><div class="notion-simple-table-cell">JGE/JNL</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">跳更大 / 相等或跳跃不少</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">OF, SF</div></td></tr><tr class="notion-simple-table-row notion-block-b1028f8bec6648c290900a8c25480e07"><td class="" style="width:120px"><div class="notion-simple-table-cell">JL/JNGE</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">跳得少或跳得不大 / 等于</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">OF, SF</div></td></tr><tr class="notion-simple-table-row notion-block-19e9ffe6b99742f2b87bdf74db510850"><td class="" style="width:120px"><div class="notion-simple-table-cell">JLE/JNG</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">跳得少 / 等等或跳得不大</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">OF, SF, ZF</div></td></tr></tbody></table><div class="notion-text notion-block-92af448322dc4b5cb295dd8f492585eb">以下是用于逻辑运算的无符号数据的条件跳转指令 </div><table class="notion-simple-table notion-block-bf283d3f9cc648f3a199841896cd7b9e"><tbody><tr class="notion-simple-table-row notion-block-8ec0952df7d84c9cbe3b306f359b5b14"><td class="" style="width:120px"><div class="notion-simple-table-cell">指令</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">描述</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">标志</div></td></tr><tr class="notion-simple-table-row notion-block-5df4a2c658f74e9e9331076aa8192504"><td class="" style="width:120px"><div class="notion-simple-table-cell">JE/JZ</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">跳跃等于或跳零</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">ZF</div></td></tr><tr class="notion-simple-table-row notion-block-35a9199ae016408b95eb0e3c326d82fd"><td class="" style="width:120px"><div class="notion-simple-table-cell">JNE/JNZ</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">跳不等或跳不零</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">ZF</div></td></tr><tr class="notion-simple-table-row notion-block-502754b2769f4fc6a60fac3916759cf9"><td class="" style="width:120px"><div class="notion-simple-table-cell">JA/JNBE</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">跳到上方或跳不低于 / 等于</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">CF, ZF</div></td></tr><tr class="notion-simple-table-row notion-block-bb1db6caeaef436a864ddf517b3a32c0"><td class="" style="width:120px"><div class="notion-simple-table-cell">JAE/JNB</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">跳到上方 / 等于或跳不到下方</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">CF</div></td></tr><tr class="notion-simple-table-row notion-block-ef19194c47e541408d9435fba68d7771"><td class="" style="width:120px"><div class="notion-simple-table-cell">JB/JNAE</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">跳到下面或跳不高于 / 等于</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">CF</div></td></tr><tr class="notion-simple-table-row notion-block-b85d69bfad2f4daf8e45b9238451c5ca"><td class="" style="width:120px"><div class="notion-simple-table-cell">JBE/JNA</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">跳低于 / 等于或跳不高于</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">AF, CF</div></td></tr></tbody></table><div class="notion-text notion-block-e6bbc3d49e0d4db1a1c46025e77aa770">以下条件跳转指令有特殊用途并检查标志的值</div><table class="notion-simple-table notion-block-576b6ded94aa4c42a51ed60411826004"><tbody><tr class="notion-simple-table-row notion-block-ef154b7289dc4a749e8a3f6e3da7d2f1"><td class="" style="width:120px"><div class="notion-simple-table-cell">指令</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">描述</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">标志</div></td></tr><tr class="notion-simple-table-row notion-block-8f15a56637724a1bb7f58f2b0f331155"><td class="" style="width:120px"><div class="notion-simple-table-cell">JXCZ</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">如果 CX 为零则跳转</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">none</div></td></tr><tr class="notion-simple-table-row notion-block-ea79276e593445ff9fafb374bd2c9493"><td class="" style="width:120px"><div class="notion-simple-table-cell">JC</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">Jump If Carry</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">CF</div></td></tr><tr class="notion-simple-table-row notion-block-f8567e09bbcf47ff8e3ff09fea9e4538"><td class="" style="width:120px"><div class="notion-simple-table-cell">JNC</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">Jump If No Carry</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">CF</div></td></tr><tr class="notion-simple-table-row notion-block-3482f8a481a04a579ab477059032b5c7"><td class="" style="width:120px"><div class="notion-simple-table-cell">JO</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">Jump If Overflow</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">OF</div></td></tr><tr class="notion-simple-table-row notion-block-e37ef73264bf486fb0e27f4ffa5a973a"><td class="" style="width:120px"><div class="notion-simple-table-cell">JNO</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">Jump If No Overflow</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">OF</div></td></tr><tr class="notion-simple-table-row notion-block-900c9a6a8ace45b1ba213e665cc36152"><td class="" style="width:120px"><div class="notion-simple-table-cell">JP/JPE</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">跳跃奇偶校验或跳跃奇偶校验</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">PF</div></td></tr><tr class="notion-simple-table-row notion-block-bc21ef05d2f748fcb64a62922b84e67b"><td class="" style="width:120px"><div class="notion-simple-table-cell">JNP/JPO</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">跳跃没有奇偶校验或跳跃奇偶校验</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">PF</div></td></tr><tr class="notion-simple-table-row notion-block-7d4e28645bdf41aba4c5e5af4dc3dc4f"><td class="" style="width:120px"><div class="notion-simple-table-cell">JS</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">Jump Sign (negative value)</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">SF</div></td></tr><tr class="notion-simple-table-row notion-block-6332778f963c400cab92220318ce0cbe"><td class="" style="width:120px"><div class="notion-simple-table-cell">JNS</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">跳号码（正值）</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">SF</div></td></tr></tbody></table><div class="notion-text notion-block-9247174ae05a4895a7acb164bc14b641">Jxx系列指令集的语法</div><div class="notion-text notion-block-39230a36d91c437786b8431b734f5baf">例</div><h3 class="notion-h notion-h2 notion-h-indent-1 notion-block-701cfa9e69bb43559f7d709e0659a8ac" data-id="701cfa9e69bb43559f7d709e0659a8ac"><span><div id="701cfa9e69bb43559f7d709e0659a8ac" class="notion-header-anchor"></div><a class="notion-hash-link" href="#701cfa9e69bb43559f7d709e0659a8ac" title="例子 (Example)"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">例子 (Example)</span></span></h3><div class="notion-text notion-block-7c7ba8b5d879461897ec1eca34327748">以下程序显示三个变量中最大的一个。 变量是两位数的变量。 三个变量 num1，num2 和 num3 分别具有值 47,22 和 31 </div><div class="notion-text notion-block-d3a85e6ecbd642788d5215c39ccb4519">编译并执行上述代码时，会产生以下结果 -</div><h2 class="notion-h notion-h1 notion-h-indent-0 notion-block-94c40ba1ac894f54b509826a5e59de14" data-id="94c40ba1ac894f54b509826a5e59de14"><span><div id="94c40ba1ac894f54b509826a5e59de14" class="notion-header-anchor"></div><a class="notion-hash-link" href="#94c40ba1ac894f54b509826a5e59de14" title="循环(Loop)"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">循环(Loop)</span></span></h2><div class="notion-text notion-block-64fb895cd93645008de60a2e225dd542">JMP 指令可用于实现循环。 </div><div class="notion-text notion-block-149280ac10504fc7a32019b2403227cc">例如，以下代码片段可用于执行循环体 10 次。</div><div class="notion-text notion-block-e440e325002c4227b9149ab8b3e4c4fd">然而，处理器指令集包括一组用于实现迭代的循环指令。 </div><div class="notion-text notion-block-89980c1834554792ad455ed272cec467">基本 LOOP 指令具有以下语法 </div><div class="notion-text notion-block-a00baebd6e1b472f9164623e98cd782f">其中，label是标识目标指令的目标标签，如跳转指令中所示。</div><div class="notion-text notion-block-d6aed7e93ffe40e29a68b82501b084ef">LOOP 指令假定 ECX 寄存器包含循环计数。 执行循环指令时，ECX 寄存器递减，控制跳转到目标标签，直到 ECX 寄存器值，即计数器达到零值。</div><div class="notion-text notion-block-1c5816fcec8541bdb202d2607648029d">上面的代码片段可以写成</div><h3 class="notion-h notion-h2 notion-h-indent-1 notion-block-58925859d4da4e968a21c6a54c3b5625" data-id="58925859d4da4e968a21c6a54c3b5625"><span><div id="58925859d4da4e968a21c6a54c3b5625" class="notion-header-anchor"></div><a class="notion-hash-link" href="#58925859d4da4e968a21c6a54c3b5625" title="例子 (Example)"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">例子 (Example)</span></span></h3><div class="notion-text notion-block-88a7cfa10ddd48a5b9835c8b4d64a5d5">以下程序在屏幕上打印数字 1 到 9</div><div class="notion-blank notion-block-c8abf9cee4784affb7aa920a81b2c5a2"> </div><div class="notion-text notion-block-07c71f6377524c0ca729af4c38a34c52">编译并执行上述代码时，会产生以下结果 </div><h2 class="notion-h notion-h1 notion-h-indent-0 notion-block-96a5bd9f47894d3fa8fa6a87b0688879" data-id="96a5bd9f47894d3fa8fa6a87b0688879"><span><div id="96a5bd9f47894d3fa8fa6a87b0688879" class="notion-header-anchor"></div><a class="notion-hash-link" href="#96a5bd9f47894d3fa8fa6a87b0688879" title="数字(Numbers)"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">数字(Numbers)</span></span></h2><div class="notion-text notion-block-0a5ef36d7cd34305aca6208269e3e8fe">数字(numbers)数据通常以二进制系统表示。</div><div class="notion-text notion-block-51c03171026849df954b83e840f4a8fe">算术指令对二进制数据进行操作。 </div><div class="notion-text notion-block-cbb316cc4598419d8706ab205e1743e7">当数字显示在屏幕上或从键盘输入时，它们是 ASCII 格式。</div><div class="notion-text notion-block-33020c93f4374fe3b8d800a05ae8fbca">我们可以将 ASCII 格式的输入数据转换为二进制以进行算术计算，并将结果转换回二进制。 </div><div class="notion-text notion-block-4168d882319e4cbd8aa6a68d08ceb9be">以下代码实现了这一点 </div><div class="notion-text notion-block-0cf1cdb7531a47f1a8ba651bad58c5c8">编译并执行上述代码时，会产生以下结果 -</div><div class="notion-text notion-block-475ccfe589534b3f8bac0adb64e8112a">然而，这种转换具有开销，并且汇编语言编程允许以二进制形式以更有效的方式处理数字。</div><div class="notion-text notion-block-cb8895c691e54a7f9315285fa10f5634">十进制数字可以用两种形式表示</div><ul class="notion-list notion-list-disc notion-block-0f06f17bc9cf486b921cb973bd471f3e"><li>ASCII 格式</li></ul><ul class="notion-list notion-list-disc notion-block-62a950a3343c460abd765a0f39467ef8"><li>BCD 或二进制编码的十进制形式</li></ul><h3 class="notion-h notion-h2 notion-h-indent-1 notion-block-931f051d216e486ea5568a119ee0818b" data-id="931f051d216e486ea5568a119ee0818b"><span><div id="931f051d216e486ea5568a119ee0818b" class="notion-header-anchor"></div><a class="notion-hash-link" href="#931f051d216e486ea5568a119ee0818b" title="ASCII 表示"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">ASCII 表示</span></span></h3><div class="notion-text notion-block-f7f811a077e04facbb32e8b9bc690a8e">在 ASCII 表示中，十进制数字存储为 ASCII 字符串。 </div><div class="notion-text notion-block-7bdb9fa74149434293e8f5a4c3357e6a">例如，十进制值 1234 存储为</div><div class="notion-text notion-block-7ae695b7c3214caa9b6e9cf1d0d759bd">其中，31H 是 1 的 ASCII 值，32H 是 2 的 ASCII 值，依此类推。 </div><div class="notion-text notion-block-50defbbdacc843d6a0d9a165fa830b2b">在 ASCII 表示中有四个处理数字的指令 </div><ul class="notion-list notion-list-disc notion-block-b638b455335646b2884b0c572c9f91e7"><li><b>AAA</b> - 添加后的 ASCII 调整</li></ul><ul class="notion-list notion-list-disc notion-block-f3c7190b8d87475cb8328cfaf5e9525c"><li><b>AAS</b> - 减法后的 ASCII 调整</li></ul><ul class="notion-list notion-list-disc notion-block-6279640290174ed5983f23290d36d49d"><li><b>AAM</b> - 乘法后的 ASCII 调整</li></ul><ul class="notion-list notion-list-disc notion-block-3ae2d978607b4f948e4e7d6beed43ea7"><li><b>AAD</b> - 划分前的 ASCII 调整</li></ul><div class="notion-text notion-block-e4f770d5e5e94ffca3500e7c7753594e">这些指令不接受任何操作数，并假设所需的操作数位于 AL 寄存器中。</div><div class="notion-text notion-block-1ca444db879545498585c93da18e36ff">以下示例使用 AAS 指令演示该概念</div><div class="notion-text notion-block-5357d6e530b546239b033ab2c2a19d02">编译并执行上述代码时，会产生以下结果</div><h3 class="notion-h notion-h2 notion-h-indent-1 notion-block-ea185c4bf6e34a14aea14dd5454e9825" data-id="ea185c4bf6e34a14aea14dd5454e9825"><span><div id="ea185c4bf6e34a14aea14dd5454e9825" class="notion-header-anchor"></div><a class="notion-hash-link" href="#ea185c4bf6e34a14aea14dd5454e9825" title="BCD 表示"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">BCD 表示</span></span></h3><div class="notion-text notion-block-a56725447f68429b9554a62cb4a0aa69">有两种类型的 BCD 表示</div><ul class="notion-list notion-list-disc notion-block-3ad60e05352a429ab5ea2546f141cd6c"><li>解包 BCD 表示</li></ul><ul class="notion-list notion-list-disc notion-block-e691a9f1a31c4a329ff80f33b0a15fae"><li>打包 BCD 表示</li></ul><div class="notion-text notion-block-1a7ce8229cfa4035965334915504a8b1">在解包的 BCD 表示中，每个字节存储十进制数的二进制等值。</div><div class="notion-text notion-block-320ee69fb82b45b2840e8dc7928e3c06"> 例如，数字 1234 存储为</div><div class="notion-text notion-block-b89c202d59c14f5597c2aff3f745b884">处理这些数字有两条说明</div><ul class="notion-list notion-list-disc notion-block-f4c04e8c07404d099973ed7bbdaae614"><li><b>AAM</b> - 乘法后的 ASCII 调整</li></ul><ul class="notion-list notion-list-disc notion-block-eae33085337b4abe949ee7e1cd6e9643"><li><b>AAD</b> - 划分前的 ASCII 调整</li></ul><div class="notion-text notion-block-a3d3e3a021dc4dcfb755d064f163afe5">四个 ASCII 调整指令 AAA，AAS，AAM 和 AAD 也可以与解压缩的 BCD 表示一起使用。 在打包的 BCD 表示中，每个数字使用四位存储,两个十进制数字打包成一个字节。 </div><div class="notion-text notion-block-01e05bffed304a15bd169e4ecc0d5028">例如，数字 1234 存储为 </div><div class="notion-text notion-block-7ab9298ed6624485af527116c67e1a9d">处理这些数字有两条说明 </div><ul class="notion-list notion-list-disc notion-block-728aa4cfd05940b2890d174d638e3349"><li><b>DAA</b> - 添加后的十进制调整</li></ul><ul class="notion-list notion-list-disc notion-block-a0b3c3bf2ae44fc48a87b3c2ba329aaa"><li><b>DAS</b> - 减法后的十进制调整</li></ul><div class="notion-text notion-block-7dfba58a6bd045bf84cbbd3c19813987">在打包的 BCD 表示中不支持乘法和除法</div><h3 class="notion-h notion-h2 notion-h-indent-1 notion-block-735b1573e3e94257bd425853d6b7e3fb" data-id="735b1573e3e94257bd425853d6b7e3fb"><span><div id="735b1573e3e94257bd425853d6b7e3fb" class="notion-header-anchor"></div><a class="notion-hash-link" href="#735b1573e3e94257bd425853d6b7e3fb" title="例子 (Example)"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">例子 (Example)</span></span></h3><div class="notion-text notion-block-caf964a6efee43ffa3181611e69776dc">以下程序将两个 5 位十进制数相加并显示总和。 它使用了上述概念 </div><div class="notion-text notion-block-a5fb3fb43328492ca6811a154001c56b">编译并执行上述代码时，会产生以下结果</div><h2 class="notion-h notion-h1 notion-h-indent-0 notion-block-01692f2a5ab140c1976a7f8f23c02edd" data-id="01692f2a5ab140c1976a7f8f23c02edd"><span><div id="01692f2a5ab140c1976a7f8f23c02edd" class="notion-header-anchor"></div><a class="notion-hash-link" href="#01692f2a5ab140c1976a7f8f23c02edd" title="字符串(Strings)"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">字符串(Strings)</span></span></h2><div class="notion-text notion-block-1f2266fd65684b7796c1c4819ce92cc7">我们在前面的例子中已经使用了可变长度字符串。 可变长度字符串可以包含所需的字符数。</div><div class="notion-text notion-block-903e3dd1088541e887863facedf6cdb6"> 通常，我们通过两种方式之一指定字符串的长度</div><ul class="notion-list notion-list-disc notion-block-dd14a13c45e2488b9a4f39863c1fe7fd"><li>显式存储字符串长度</li></ul><ul class="notion-list notion-list-disc notion-block-654716525dd74225b9edbd789d61dddd"><li>使用哨兵(Using a sentinel character)</li></ul><div class="notion-text notion-block-714da0307bf140dc8ec402dc944bba61">我们可以使用 $ location 计数器符号显式存储字符串长度，该符号表示位置计数器的当前值。</div><div class="notion-text notion-block-519f8e4ca07549158fe4859c3f0dd974"> 在以下示例中</div><div class="notion-text notion-block-68a2195d9b4143db9f97d46dd68d66be">$ 指向字符串变量msg的最后一个字符后的字节。 因此， <em><b>$-msg</b></em> 给出字符串的长度。 </div><div class="notion-text notion-block-2e0f444f36254a43bbc511b1e6803a38">我们也可以写</div><div class="notion-text notion-block-f1d96d6142b44f69bbcf35acb133dbe1">或者，您可以存储带有尾随 sentinel 字符的字符串来分隔字符串，而不是显式地存储字符串长度。 sentinel 字符应该是一个不出现在字符串中的特殊字符。</div><div class="notion-text notion-block-5712cc37410648fc92397456eb9f096f">例如</div><h3 class="notion-h notion-h2 notion-h-indent-1 notion-block-86c7fc8124894b96a65ec80cc14043b1" data-id="86c7fc8124894b96a65ec80cc14043b1"><span><div id="86c7fc8124894b96a65ec80cc14043b1" class="notion-header-anchor"></div><a class="notion-hash-link" href="#86c7fc8124894b96a65ec80cc14043b1" title="字符串说明"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">字符串说明</span></span></h3><div class="notion-text notion-block-8d4a443da3ea4579886b385e90c46c26">每个字符串指令可能需要源操作数，目标操作数或两者。 </div><div class="notion-text notion-block-0fbb2976b14a41d1b68c182ed3496acb">对于 32 位段，字符串指令使用 ESI 和 EDI 寄存器分别指向源和目标操作数。</div><div class="notion-text notion-block-8392667a38be410a856d4fbd1f81a3c1">但是，对于 16 位段，SI 和 DI 寄存器分别用于指向源和目标操作数。</div><div class="notion-text notion-block-863b7d551cdd455cbdffe12ededc07b7">处理字符串有五个基本指令。 他们是</div><ul class="notion-list notion-list-disc notion-block-961c0297dc664a5794174d210401a6e0"><li><b>MOVS</b> - 该指令将 1 字节，字或双字数据从内存位置移动到另一个位置。</li></ul><ul class="notion-list notion-list-disc notion-block-4063a8646cf848b8bacdd10f193ff2e3"><li><b>LODS</b> - 该指令从内存加载。 如果操作数是一个字节，则将其加载到 AL 寄存器中，如果操作数是一个字，则将其加载到 AX 寄存器中，并将双字加载到 EAX 寄存器中。</li></ul><ul class="notion-list notion-list-disc notion-block-7681018046bb4d26a98e61f537d1b420"><li><b>STOS</b> - 该指令将寄存器（AL，AX 或 EAX）中的数据存储到存储器中。</li></ul><ul class="notion-list notion-list-disc notion-block-d86783d195da4a74ab149096b979e769"><li><b>CMPS</b> - 该指令比较内存中的两个数据项。 数据可以是字节大小，字或双字。</li></ul><ul class="notion-list notion-list-disc notion-block-d45869cea21540b19af69bc85a4206b1"><li><b>SCAS</b> - 该指令将寄存器（AL，AX 或 EAX）的内容与内存中项目的内容进行比较。</li></ul><div class="notion-text notion-block-c4f29a03b02440fb94dccd858eb531c5">上述指令中的每一个都具有字节，字和双字版本，并且可以通过使用重复前缀来重复字符串指令。</div><div class="notion-text notion-block-a0951656f68b47a2b6aaad43c04bee14">这些指令使用 ES:DI 和 DS:SI 寄存器对，其中 DI 和 SI 寄存器包含有效的偏移地址，指向存储在存储器中的字节。 SI 通常与 DS（数据段）相关联，DI 始终与 ES（额外段）相关联。</div><div class="notion-text notion-block-71f061eff7a747aaac5b4eb2c615c2da">DS:SI（或 ESI）和 ES:DI（或 EDI）寄存器分别指向源和目标操作数。 假设源操作数为 DS:SI（或 ESI），ES 中的目标操作数: 内存中的 DI（或 EDI）。</div><div class="notion-text notion-block-6709d02bfcd6486091e78c902235cff8">对于 16 位地址，使用 SI 和 DI 寄存器，对于 32 位地址，使用 ESI 和 EDI 寄存器。</div><div class="notion-text notion-block-d69e29510b2b49b2979ddbb79f33f4e4">下表提供了各种版本的字符串指令和操作数的假定空间。</div><table class="notion-simple-table notion-block-af8f108ea64a4f889216d8e2c36ade46"><tbody><tr class="notion-simple-table-row notion-block-42d046b37d8946fc95d2eef68f1cf39c"><td class="" style="width:120px"><div class="notion-simple-table-cell">基本指令</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">操作数</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">字节操作</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">字操作</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">双字操作</div></td></tr><tr class="notion-simple-table-row notion-block-7450a90fc30d48e7bd1a0251e6da1b4b"><td class="" style="width:120px"><div class="notion-simple-table-cell">MOVS</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">ES:DI, DS:SI</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">MOVSB</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">MOVSW</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">MOVSD</div></td></tr><tr class="notion-simple-table-row notion-block-1646d98abdb948f397038ebc64b00137"><td class="" style="width:120px"><div class="notion-simple-table-cell">LODS</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">AX, DS:SI</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">LODSB</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">LODSW</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">LODSD</div></td></tr><tr class="notion-simple-table-row notion-block-374ec31dc23a4940a85631d33b2ae1ce"><td class="" style="width:120px"><div class="notion-simple-table-cell">STOS</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">ES:DI, AX</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">STOSB</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">STOSW</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">STOSD</div></td></tr><tr class="notion-simple-table-row notion-block-2334f076d4c3417d8d1ad7a7b6c01bef"><td class="" style="width:120px"><div class="notion-simple-table-cell">CMPS</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">DS:SI，ES:DI</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">CMPSB</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">CMPSW</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">CMPSD</div></td></tr><tr class="notion-simple-table-row notion-block-fb804d83b69a44fb9564dd31b096cfc8"><td class="" style="width:120px"><div class="notion-simple-table-cell">SCAS</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">ES:DI, AX</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">SCASB</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">SCASW</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">SCASD</div></td></tr></tbody></table><h3 class="notion-h notion-h2 notion-h-indent-1 notion-block-b611aa36df584158a09b98ca47045ffb" data-id="b611aa36df584158a09b98ca47045ffb"><span><div id="b611aa36df584158a09b98ca47045ffb" class="notion-header-anchor"></div><a class="notion-hash-link" href="#b611aa36df584158a09b98ca47045ffb" title="重复前缀"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">重复前缀</span></span></h3><div class="notion-text notion-block-1130d2dfd7d94d5fb3f44528d386608d">REP 字符串在字符串指令之前设置时，例如 REP MOVSB，会根据放置在 CX 寄存器中的计数器重复该指令。 REP 执行指令，将 CX 减 1，并检查 CX 是否为零。 它重复指令处理直到 CX 为零。</div><div class="notion-text notion-block-bd81e83d9172424bbafa7fcb366ae741">方向标志（DF）确定操作的方向。</div><ul class="notion-list notion-list-disc notion-block-03a804ece8ae467eb4d4c2493ae87b46"><li>使用 CLD（清除方向标志，DF = 0）使操作从左到右。</li></ul><ul class="notion-list notion-list-disc notion-block-9169a1407c364102a857c091ee5d8b8b"><li>使用 STD（设置方向标志，DF = 1）使操作从右向左。</li></ul><div class="notion-text notion-block-70ed5880b18242eba24d330627f6e774">REP 前缀还具有以下变体:</div><ul class="notion-list notion-list-disc notion-block-512c560273104a26ac18a9ca6de5c9bd"><li>记者: 这是无条件的重复。 它重复操作直到 CX 为零。</li></ul><ul class="notion-list notion-list-disc notion-block-9915f6c7e0104826bed8c5799a92e330"><li>REPE 或 REPZ: 有条件重复。 它重复操作，而零标志指示等于 / 零。 当 ZF 指示不等于 / 零或 CX 为零时停止。</li></ul><ul class="notion-list notion-list-disc notion-block-4feab283439d44adb0e202159ae06227"><li>REPNE 或 REPNZ: 这也是有条件的重复。 它在零标志指示不等于 / 零时重复该操作。 当 ZF 指示等于 / 零或 CX 递减为零时停止。</li></ul><h2 class="notion-h notion-h1 notion-h-indent-0 notion-block-11df2d8af6c4484d90bbc5d8887fbb8f" data-id="11df2d8af6c4484d90bbc5d8887fbb8f"><span><div id="11df2d8af6c4484d90bbc5d8887fbb8f" class="notion-header-anchor"></div><a class="notion-hash-link" href="#11df2d8af6c4484d90bbc5d8887fbb8f" title="数组(Arrays)"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">数组(Arrays)</span></span></h2><div class="notion-text notion-block-d443e7222c3141cfa576d189e639b3cf">汇编程序的数据定义指令用于为变量分配存储空间。 变量也可以用一些特定值初始化。 初始化值可以以十六进制，十进制或二进制形式指定。</div><div class="notion-text notion-block-d06319460c2347b1871f5c6ed70dea62">例如，我们可以通过以下任一方式定义单词变量’months’</div><div class="notion-text notion-block-40581e5a69164125baa631de504bbbf5">数据定义指令也可用于定义一维数组</div><div class="notion-text notion-block-d9a296eea6ed416dadcc30f4473817de">上面的定义声明了一个由六个字组成的数组，每个字用数字 34,45,56,67,75,89 初始化。</div><div class="notion-text notion-block-3e3ae1d6742c40fe9628d2cd5091f1c2">这分配了 2x6 = 12 字节的连续存储空间。 </div><div class="notion-text notion-block-7b7da5c4d15d4cbbafea04d25756de9c">第一个数字的符号地址为 NUMBERS，第二个数字的符号地址为 NUMBERS + 2，依此类推。</div><div class="notion-text notion-block-19d7519ac04b4b61b7079cd0d2054ba8">让我们再举一个例子。 您可以定义名为 inventory 的大小为 8 的数组，并将所有值初始化为零，如</div><div class="notion-text notion-block-e11e287442494156bcfb79f5cb101fe0">可以缩写为</div><div class="notion-text notion-block-659078d7658d42289737df5d3c75ae50">TIMES 指令还可用于对同一值的多次初始化。 使用 TIMES，INVENTORY 数组可以定义为:</div><h3 class="notion-h notion-h2 notion-h-indent-1 notion-block-718c5e649d324a6783a376acc2edce56" data-id="718c5e649d324a6783a376acc2edce56"><span><div id="718c5e649d324a6783a376acc2edce56" class="notion-header-anchor"></div><a class="notion-hash-link" href="#718c5e649d324a6783a376acc2edce56" title="例子 (Example)"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">例子 (Example)</span></span></h3><div class="notion-text notion-block-bcf3ca9f39954df2bc30426128a77fdc">以下示例通过定义 3 元素数组 x 来演示上述概念，该数组存储三个值: 2,3 和 4. 它在数组中添加值并显示总和 9</div><div class="notion-text notion-block-eb68585f737043e4a48b6326f62236c4">编译并执行上述代码时，会产生以下结果</div><h2 class="notion-h notion-h1 notion-h-indent-0 notion-block-584b30f29dd740fca81af1acd2f196e8" data-id="584b30f29dd740fca81af1acd2f196e8"><span><div id="584b30f29dd740fca81af1acd2f196e8" class="notion-header-anchor"></div><a class="notion-hash-link" href="#584b30f29dd740fca81af1acd2f196e8" title="函数(Procedures)"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">函数(<b>Procedures</b>)</span></span></h2><div class="notion-text notion-block-573556b94596493ebd364a56d00d8d64">(这里其实应该叫程序或者过程)，这里不严谨（为了方便平时习惯，这里就叫函数，其实应该叫过程或者程序，后面跟大佬谈话，注意一点）</div><div class="notion-text notion-block-9e9146b296cb4f789eeead3ce0a0652d">函数或子函数在汇编语言中非常重要，因为汇编语言程序的大小往往很大。 </div><div class="notion-text notion-block-bf1b84a3c6e14210873975e8bd8486a5">函数由名称标识。 遵循此名称，描述了执行明确定义的作业的过程的主体。 程序结束由 return 语句指示。</div><h3 class="notion-h notion-h2 notion-h-indent-1 notion-block-7e4730e56bb24f829ad64a8665c250d2" data-id="7e4730e56bb24f829ad64a8665c250d2"><span><div id="7e4730e56bb24f829ad64a8665c250d2" class="notion-header-anchor"></div><a class="notion-hash-link" href="#7e4730e56bb24f829ad64a8665c250d2" title="语法 (Syntax)"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">语法 (Syntax)</span></span></h3><div class="notion-text notion-block-dad24caeaf714cd4a53fdd30bcf790c0">以下是定义函数的语法 </div><div class="notion-text notion-block-a4b85b97d5dc46cd8342e925971c78a1">通过使用 CALL 指令从另一个函数调用该过程。 CALL 指令应该将被调用过程的名称作为参数，如下所示 -</div><div class="notion-text notion-block-ada9ff37032c4c908f99b9ccc08b2a23">被调用过程使用 RET 指令将控制返回给调用过程。</div><h3 class="notion-h notion-h2 notion-h-indent-1 notion-block-e8a7c73a32e144f292d67f5edb405578" data-id="e8a7c73a32e144f292d67f5edb405578"><span><div id="e8a7c73a32e144f292d67f5edb405578" class="notion-header-anchor"></div><a class="notion-hash-link" href="#e8a7c73a32e144f292d67f5edb405578" title="例子 (Example)"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">例子 (Example)</span></span></h3><div class="notion-text notion-block-584b312759d7403db9eb58704b7f2865">让我们编写一个名为_sum_的非常简单的过程，它添加存储在 ECX 和 EDX 寄存器中的变量并返回 EAX 寄存器中的总和 -</div><div class="notion-text notion-block-89dbe2dafdbc412983c03b4b9ba027c4">编译并执行上述代码时，会产生以下结果</div><h3 class="notion-h notion-h2 notion-h-indent-1 notion-block-bb950f5f21da4c63be6c7415bfb32d6e" data-id="bb950f5f21da4c63be6c7415bfb32d6e"><span><div id="bb950f5f21da4c63be6c7415bfb32d6e" class="notion-header-anchor"></div><a class="notion-hash-link" href="#bb950f5f21da4c63be6c7415bfb32d6e" title="堆栈数据结构"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">堆栈数据结构</span></span></h3><div class="notion-text notion-block-9772fe70c72f484681a0814baa95934e">堆栈是存储器中类似于阵列的数据结构，其中数据可以被存储并从称为堆栈的 “顶部” 的位置移除。 需要存储的数据被 “推送” 到堆栈中，要检索的数据从堆栈中“弹出”。 Stack 是 LIFO 数据结构，即最后检索的数据是最后检索的。</div><div class="notion-text notion-block-0c623fc14254487a91051e48e51df07f">汇编语言提供了两种堆栈操作说明: PUSH 和 POP。 这些说明的语法如下</div><div class="notion-text notion-block-dbf16b86d8c84f64b9149baf4dcc6427">堆栈段中保留的内存空间用于实现堆栈。 寄存器 SS 和 ESP（或 SP）用于实现堆栈。 堆栈的顶部指向插入堆栈的最后一个数据项，由 SS:ESP 寄存器指向，其中 SS 寄存器指向堆栈段的开头，SP（或 ESP）将偏移量指向堆栈段。</div><div class="notion-text notion-block-0d9b6dc76c6446b0902a0ff13f4038cc">堆栈实现具有以下特征</div><ul class="notion-list notion-list-disc notion-block-c7be3ddbc62440aeb164e39c530f58bc"><li>只有 <b>words(字)</b>或 <b>doublewords(双字)</b>可以保存到堆栈中，而不是字节(byte)。</li></ul><ul class="notion-list notion-list-disc notion-block-198b6cfd92134e3899194c8855440069"><li>堆栈沿相反方向增长，即朝向较低的存储器地址</li></ul><ul class="notion-list notion-list-disc notion-block-ac814640a4324933876a47ba94d9f004"><li>堆栈顶部指向堆栈中插入的最后一项; 它指向插入的最后一个单词的低位字节。</li></ul><div class="notion-text notion-block-1c819016ba3c47d1921310c33378e237">在将寄存器的值用于某些用途之前将其存储在堆栈中; 它可以通过以下方式完成</div><h4 class="notion-h notion-h3 notion-h-indent-2 notion-block-0ca66d5a427742619d24ceeee9d80281" data-id="0ca66d5a427742619d24ceeee9d80281"><span><div id="0ca66d5a427742619d24ceeee9d80281" class="notion-header-anchor"></div><a class="notion-hash-link" href="#0ca66d5a427742619d24ceeee9d80281" title="例子 (Example)"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">例子 (Example)</span></span></h4><div class="notion-text notion-block-dc3cb728f75449a988f0c84e84088fba">以下程序显示整个 ASCII 字符集。 主程序调用名为_display_的过程，该过程显示 ASCII 字符集。</div><div class="notion-text notion-block-7d73ae53c8a945868fc55b66d0f1f571">编译并执行上述代码时，会产生以下结果</div><h2 class="notion-h notion-h1 notion-h-indent-0 notion-block-d934e17439f8405c847d5b77f4bf6b21" data-id="d934e17439f8405c847d5b77f4bf6b21"><span><div id="d934e17439f8405c847d5b77f4bf6b21" class="notion-header-anchor"></div><a class="notion-hash-link" href="#d934e17439f8405c847d5b77f4bf6b21" title="递归(Recursion)"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">递归(Recursion)</span></span></h2><div class="notion-text notion-block-92b3f40e23354ea6a562445403fff4a2">递归过程就是自调用过程。 </div><div class="notion-text notion-block-5027f7ea34624ffc9cce9c1b751930be">有两种递归: 直接和间接。 </div><div class="notion-text notion-block-47a4a1917f8a4eddbc4fcb7064526c74">在直接递归中，过程调用自身并在间接递归中，第一个过程调用第二个过程，该过程又调用第一个过程。</div><div class="notion-text notion-block-34ce4f6a77684434a30609b0ab562359">可以在许多数学算法中观察到递归。 例如，考虑计算数字的阶乘的情况。 一个数的因子由等式给出</div><div class="notion-text notion-block-be06477ba9c44262a8381f6a495b67a9">例如: 5 的阶乘是 1 x 2 x 3 x 4 x 5 = 5 x 阶乘 4，这可以是显示递归过程的一个很好的例子。 每个递归算法必须具有结束条件，即当满足条件时应该停止程序的递归调用。 在阶乘算法的情况下，当 n 为 0 时达到结束条件。</div><div class="notion-text notion-block-6cbf4ec9e81141ffa4bb758d38c43475">以下程序显示了如何使用汇编语言实现 factorial n。 为了简化程序，我们将计算阶乘 3。</div><div class="notion-text notion-block-b68caad42c8544bea451fa6320f7df71">编译并执行上述代码时，会产生以下结果</div><h2 class="notion-h notion-h1 notion-h-indent-0 notion-block-4ba3c636b19c4ea08b315d2e111a6ecc" data-id="4ba3c636b19c4ea08b315d2e111a6ecc"><span><div id="4ba3c636b19c4ea08b315d2e111a6ecc" class="notion-header-anchor"></div><a class="notion-hash-link" href="#4ba3c636b19c4ea08b315d2e111a6ecc" title="宏指令(Macros)"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">宏指令(Macros)</span></span></h2><div class="notion-text notion-block-744c61562b89451492f31fbf273e2cae">编写宏是确保汇编语言模块化编程的另一种方法。</div><ul class="notion-list notion-list-disc notion-block-d57c280f8ba245fd822511a5acbc6e5b"><li>宏是一系列指令，由名称分配，可以在程序中的任何位置使用</li></ul><ul class="notion-list notion-list-disc notion-block-94390d7745e6442c8d43c5f56d61bcad"><li>在 NASM 中，使用 <b>%macro</b> 和 <b>%endmacro</b> 指令定义 <b>%macro</b> </li></ul><ul class="notion-list notion-list-disc notion-block-b3ba9e0ac8ab495c905c4c440170f0ad"><li>宏以％宏指令开头，以％endmacro 指令结束。</li></ul><div class="notion-text notion-block-dff2967cd95d47c9b937b917f0c0bacf">宏定义的语法(宏指令)</div><div class="notion-text notion-block-80603afd6afe436ca94f569f845c2190">其中， number_of_params指定数字参数， macro_name指定宏的名称。</div><div class="notion-text notion-block-52591df745cb4dabbfe85a4cefe3f0c0">通过使用宏名称和必要的参数来调用宏。 </div><div class="notion-text notion-block-19bf140042dc4952a7a7ef2b3d5b7517">当您需要在程序中多次使用某些指令序列时，您可以将这些指令放在宏中并使用它而不是一直写入指令。</div><div class="notion-text notion-block-1ec38c2c04ca42d4bd0eb5af588d70e8">例如，对程序的一个非常普遍的需求是在屏幕上写入一串字符。 要显示一串字符，您需要以下一系列说明</div><div class="notion-text notion-block-3a88afb30067440ea6ae2a7428495c06">在上面显示字符串的示例中，INT 80H 函数调用已使用寄存器 EAX，EBX，ECX 和 EDX。 因此，每次需要在屏幕上显示时，需要将这些寄存器保存在堆栈中，调用 INT 80H，然后从堆栈中恢复寄存器的原始值。 因此，编写用于保存和恢复数据的宏可能很有用。</div><div class="notion-text notion-block-fcef34c20d32438b9e3ec4a1255b6a06">我们已经观察到，诸如 IMUL，IDIV，INT 等的一些指令需要将一些信息存储在某些特定寄存器中，甚至在某些特定寄存器中返回值。 如果程序已经使用这些寄存器来保存重要数据，那么来自这些寄存器的现有数据应该保存在堆栈中并在执行指令后恢复。</div><h3 class="notion-h notion-h2 notion-h-indent-1 notion-block-9624470b188c42989cc789b1773403be" data-id="9624470b188c42989cc789b1773403be"><span><div id="9624470b188c42989cc789b1773403be" class="notion-header-anchor"></div><a class="notion-hash-link" href="#9624470b188c42989cc789b1773403be" title="例子 (Example)"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">例子 (Example)</span></span></h3><div class="notion-text notion-block-54c394e5b34642a0ab42ac26dd0b7cd8">以下示例显示了定义和使用宏</div><div class="notion-text notion-block-5c527aa6a0e94713b39336bed218398b">编译并执行上述代码时，会产生以下结果</div><h2 class="notion-h notion-h1 notion-h-indent-0 notion-block-180ed7d19e6d40acb067f8234c61a2bb" data-id="180ed7d19e6d40acb067f8234c61a2bb"><span><div id="180ed7d19e6d40acb067f8234c61a2bb" class="notion-header-anchor"></div><a class="notion-hash-link" href="#180ed7d19e6d40acb067f8234c61a2bb" title="文件管理(File Management)"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">文件管理(File Management)</span></span></h2><div class="notion-text notion-block-7fac9e09d6894d56ac98035077718e93">系统将任何输入或输出数据视为字节流。 有三个标准文件流</div><ul class="notion-list notion-list-disc notion-block-3f49e7f57ac0488b8ce3772703963433"><li>标准输入(stdin)</li></ul><ul class="notion-list notion-list-disc notion-block-312fdefa1c664561925e40fd84ac6031"><li>标准输出(stdout）</li></ul><ul class="notion-list notion-list-disc notion-block-7a7b71d8045a4729b190e99c2ac72b89"><li>标准错误(stderr）</li></ul><h3 class="notion-h notion-h2 notion-h-indent-1 notion-block-6a1f986eca2747fe93a4baa2f81f1fe9" data-id="6a1f986eca2747fe93a4baa2f81f1fe9"><span><div id="6a1f986eca2747fe93a4baa2f81f1fe9" class="notion-header-anchor"></div><a class="notion-hash-link" href="#6a1f986eca2747fe93a4baa2f81f1fe9" title="文件描述符"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">文件描述符</span></span></h3><div class="notion-text notion-block-242cb6fefcbf479c96447b2c7f637406"><b>file descriptor</b> 是作为文件 ID 分配给文件的 16 位整数。 创建新文件或打开现有文件时，文件描述符用于访问文件。</div><div class="notion-text notion-block-b26478a58c7d46768af50f9228fe9a96">标准文件流的文件描述符 <b>stdin, stdout</b> 和 <b>stderr</b> 分别为 0,1 和 2。</div><h3 class="notion-h notion-h2 notion-h-indent-1 notion-block-e44190ad732a4815b54b078b5039f63d" data-id="e44190ad732a4815b54b078b5039f63d"><span><div id="e44190ad732a4815b54b078b5039f63d" class="notion-header-anchor"></div><a class="notion-hash-link" href="#e44190ad732a4815b54b078b5039f63d" title="文件指针"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">文件指针</span></span></h3><div class="notion-text notion-block-99b3c434fc8d4b9f871779ede4241f49"><b>file pointer</b> 以字节为单位指定 <b>file pointer</b> 后续读 / 写操作的位置。 每个文件都被视为一个字节序列。 每个打开的文件都与一个文件指针相关联，该文件指针指定相对于文件开头的字节偏移量。 打开文件时，文件指针设置为零。</div><h3 class="notion-h notion-h2 notion-h-indent-1 notion-block-24a968a9476d4cedbe5d73290ae00cae" data-id="24a968a9476d4cedbe5d73290ae00cae"><span><div id="24a968a9476d4cedbe5d73290ae00cae" class="notion-header-anchor"></div><a class="notion-hash-link" href="#24a968a9476d4cedbe5d73290ae00cae" title="文件处理系统调用"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">文件处理系统调用</span></span></h3><div class="notion-text notion-block-12ea2f2ab21d423aa14573e8316ebf34">下表简要描述了与文件处理相关的系统调用</div><table class="notion-simple-table notion-block-1375144f52174222a2963c798746756c"><tbody><tr class="notion-simple-table-row notion-block-ea54a531bd50424782ab074373775e1e"><td class="" style="width:120px"><div class="notion-simple-table-cell">EAX</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">名称</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">EBX</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">ECX</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">EDX</div></td></tr><tr class="notion-simple-table-row notion-block-59b98490426645788da4183a470a4119"><td class="" style="width:120px"><div class="notion-simple-table-cell">2</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">sys_fork</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">struct pt_regs</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">-</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">-</div></td></tr><tr class="notion-simple-table-row notion-block-d930e703ac1740f3afbbcf64b06d3e7a"><td class="" style="width:120px"><div class="notion-simple-table-cell">3</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">sys_read</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">unsigned int</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">char *</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">size_t</div></td></tr><tr class="notion-simple-table-row notion-block-91b8815dceef4bf6ae89733723e927bc"><td class="" style="width:120px"><div class="notion-simple-table-cell">4</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">sys_write</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">unsigned int</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">const char *</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">size_t</div></td></tr><tr class="notion-simple-table-row notion-block-8765ab2d8964444da2e8d4de456cf34a"><td class="" style="width:120px"><div class="notion-simple-table-cell">5</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">sys_open</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">const char *</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">int</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">int</div></td></tr><tr class="notion-simple-table-row notion-block-76b2fe9628c0484dbf3d06e44cfd7e3e"><td class="" style="width:120px"><div class="notion-simple-table-cell">6</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">sys_close</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">unsigned int</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">-</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">-</div></td></tr><tr class="notion-simple-table-row notion-block-c477b521dfa343dc98571747eac5e8c1"><td class="" style="width:120px"><div class="notion-simple-table-cell">8</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">sys_creat</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">const char *</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">int</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">-</div></td></tr><tr class="notion-simple-table-row notion-block-4b907a8837dc49d7831f4a9a060316d5"><td class="" style="width:120px"><div class="notion-simple-table-cell">19</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">sys_lseek</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">unsigned int</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">off_t</div></td><td class="" style="width:120px"><div class="notion-simple-table-cell">unsigned int</div></td></tr></tbody></table><div class="notion-text notion-block-b88010a69f46416295d90ea2a114c469">正如我们之前讨论的那样，使用系统调用所需的步骤是相同的 -</div><ul class="notion-list notion-list-disc notion-block-ac28d44e4f98482c9be3a77dfae59a5c"><li>将系统调用号放在 EAX 寄存器中。</li></ul><ul class="notion-list notion-list-disc notion-block-286d788678dc412dba173e9b93569558"><li>将参数存储在寄存器 EBX，ECX 等中的系统调用中。</li></ul><ul class="notion-list notion-list-disc notion-block-bd825377bd53436787400a121c5803ee"><li>调用相关的中断（80h）。</li></ul><ul class="notion-list notion-list-disc notion-block-3802fb742d6749d2ab593ff37ffa70c3"><li>结果通常在 EAX 寄存器中返回。</li></ul><h3 class="notion-h notion-h2 notion-h-indent-1 notion-block-bb0edd87ba3845de903f8c3ca8da5088" data-id="bb0edd87ba3845de903f8c3ca8da5088"><span><div id="bb0edd87ba3845de903f8c3ca8da5088" class="notion-header-anchor"></div><a class="notion-hash-link" href="#bb0edd87ba3845de903f8c3ca8da5088" title="创建和打开文件"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">创建和打开文件</span></span></h3><div class="notion-text notion-block-3ff881e1787d4b0dbfdd89c6c570f715">要创建和打开文件，请执行以下任务 -</div><ul class="notion-list notion-list-disc notion-block-c6a6ce718edf41e3a1956e0b005c105e"><li>将系统调用 sys_creat（）编号 8 放在 EAX 寄存器中。</li></ul><ul class="notion-list notion-list-disc notion-block-f032e1ee388648b0b71c295ac77bd6ff"><li>将文件名放在 EBX 寄存器中。</li></ul><ul class="notion-list notion-list-disc notion-block-a071556ea59242df97c3cae23cf46465"><li>将文件权限放在 ECX 寄存器中。</li></ul><div class="notion-text notion-block-648b07cae68e470f8657d6807d7bba99">系统调用在 EAX 寄存器中返回创建文件的文件描述符，如果出错，则错误代码在 EAX 寄存器中。</div><h3 class="notion-h notion-h2 notion-h-indent-1 notion-block-078fa2250cf841808be76010f73f8bc9" data-id="078fa2250cf841808be76010f73f8bc9"><span><div id="078fa2250cf841808be76010f73f8bc9" class="notion-header-anchor"></div><a class="notion-hash-link" href="#078fa2250cf841808be76010f73f8bc9" title="打开现有文件"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">打开现有文件</span></span></h3><div class="notion-text notion-block-cc520dc343934047bd3640d03d03ff96">要打开现有文件，请执行以下任务</div><ul class="notion-list notion-list-disc notion-block-c99acd6f4e8f4d98bf0df1b91d9b30a6"><li>将系统调用 sys_open（）编号 5 放在 EAX 寄存器中。</li></ul><ul class="notion-list notion-list-disc notion-block-d2d54ea33cb24b40a1650c04586badd8"><li>将文件名放在 EBX 寄存器中。</li></ul><ul class="notion-list notion-list-disc notion-block-db1bae81448a455c931ef2f77ccfec90"><li>将文件访问模式放在 ECX 寄存器中。</li></ul><ul class="notion-list notion-list-disc notion-block-e5f92356ef6b4743bb344af22c3d80f4"><li>将文件权限放在 EDX 寄存器中。</li></ul><div class="notion-text notion-block-b585fca3d1fa455e991cf1ea58326acc">系统调用在 EAX 寄存器中返回创建文件的文件描述符，如果出错，则错误代码在 EAX 寄存器中。</div><div class="notion-text notion-block-d11ad097ae324330a6561fe4e553be27">在文件访问模式中，最常用的是: 只读（0），只写（1）和读写（2）。</div><h3 class="notion-h notion-h2 notion-h-indent-1 notion-block-d13945d359ea4cf4a2cf21e91ca4f8a3" data-id="d13945d359ea4cf4a2cf21e91ca4f8a3"><span><div id="d13945d359ea4cf4a2cf21e91ca4f8a3" class="notion-header-anchor"></div><a class="notion-hash-link" href="#d13945d359ea4cf4a2cf21e91ca4f8a3" title="从文件中读取"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">从文件中读取</span></span></h3><div class="notion-text notion-block-e55d2e3739034ba3897e9f85704782f1">要从文件中读取，请执行以下任务</div><ul class="notion-list notion-list-disc notion-block-c72185498686468480dd9b59e2ec2e31"><li>将系统调用 sys_read（）编号 3 放在 EAX 寄存器中。</li></ul><ul class="notion-list notion-list-disc notion-block-8396cb3530304bb8a6e9fa95aeb898d2"><li>将文件描述符放在 EBX 寄存器中。</li></ul><ul class="notion-list notion-list-disc notion-block-2385588b34c949ce81a3a86b30947eaa"><li>将指针指向 ECX 寄存器中的输入缓冲区。</li></ul><ul class="notion-list notion-list-disc notion-block-c6bec803da6549dc9b13c0ac2206b837"><li>将缓冲区大小（即要读取的字节数）放在 EDX 寄存器中。</li></ul><div class="notion-text notion-block-4e35bf7793904b5482a29f2b3c3d8104">系统调用返回 EAX 寄存器中读取的字节数，如果出错，则错误代码位于 EAX 寄存器中。</div><h3 class="notion-h notion-h2 notion-h-indent-1 notion-block-566523da3fe54e1383c84be3ef7cdd9d" data-id="566523da3fe54e1383c84be3ef7cdd9d"><span><div id="566523da3fe54e1383c84be3ef7cdd9d" class="notion-header-anchor"></div><a class="notion-hash-link" href="#566523da3fe54e1383c84be3ef7cdd9d" title="写入文件"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">写入文件</span></span></h3><div class="notion-text notion-block-2a4f085eb5ce483985eef3c0cc13c290">要写入文件，请执行以下任务</div><ul class="notion-list notion-list-disc notion-block-6104d8462dcf4c2f8eb0b32f2048ea05"><li>将系统调用 sys_write（）编号 4 放入 EAX 寄存器中。</li></ul><ul class="notion-list notion-list-disc notion-block-f5fdf0984ce44189b0e052effd3fdcd9"><li>将文件描述符放在 EBX 寄存器中。</li></ul><ul class="notion-list notion-list-disc notion-block-e923b0e4a794445686fdf293d3b4aba9"><li>将指针指向 ECX 寄存器中的输出缓冲区。</li></ul><ul class="notion-list notion-list-disc notion-block-860f29c11d394395b93188b97ec4ac46"><li>将缓冲区大小（即要写入的字节数）放在 EDX 寄存器中。</li></ul><div class="notion-text notion-block-98bb2a08f7044679a5c7b9e180c8162b">系统调用返回 EAX 寄存器中写入的实际字节数，如果出错，则错误代码位于 EAX 寄存器中。</div><h3 class="notion-h notion-h2 notion-h-indent-1 notion-block-ef102e6e76ea49dcad47de468291f62a" data-id="ef102e6e76ea49dcad47de468291f62a"><span><div id="ef102e6e76ea49dcad47de468291f62a" class="notion-header-anchor"></div><a class="notion-hash-link" href="#ef102e6e76ea49dcad47de468291f62a" title="关闭一个文件 (Closing a File)"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">关闭一个文件 (Closing a File)</span></span></h3><div class="notion-text notion-block-093e900984ec438d8ea70c90fbc564db">要关闭文件，请执行以下任务</div><ul class="notion-list notion-list-disc notion-block-3169898402db4f5dac49b71841329578"><li>将系统调用 sys_close（）编号 6 放入 EAX 寄存器中。</li></ul><ul class="notion-list notion-list-disc notion-block-b072a197567c4aeab45cee9cb1b07e5f"><li>将文件描述符放在 EBX 寄存器中。</li></ul><div class="notion-text notion-block-c2bfea3c81ce4b899d361265ae871816">如果出错，系统调用将返回 EAX 寄存器中的错误代码。</div><h3 class="notion-h notion-h2 notion-h-indent-1 notion-block-9218275ab6c1426f92687189e8fee2a6" data-id="9218275ab6c1426f92687189e8fee2a6"><span><div id="9218275ab6c1426f92687189e8fee2a6" class="notion-header-anchor"></div><a class="notion-hash-link" href="#9218275ab6c1426f92687189e8fee2a6" title="更新文件"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">更新文件</span></span></h3><div class="notion-text notion-block-0d0b9e48a9b94d87bd195f01259ae621">要更新文件，请执行以下任务</div><ul class="notion-list notion-list-disc notion-block-eb43dabbda25447a8e36be964c6e6b02"><li>将系统调用 sys_lseek（）编号 19 放在 EAX 寄存器中。</li></ul><ul class="notion-list notion-list-disc notion-block-877053fee9e24d2096496985306aec2a"><li>将文件描述符放在 EBX 寄存器中。</li></ul><ul class="notion-list notion-list-disc notion-block-c197ce9b48ae4e2190b132f637358139"><li>将偏移值放在 ECX 寄存器中。</li></ul><ul class="notion-list notion-list-disc notion-block-8e328fd9904c4faa941b4f82b57668db"><li>将偏移的参考位置放在 EDX 寄存器中。</li></ul><div class="notion-text notion-block-d48f2eb66e9b4c97acc2126c06c12251">参考位置可以是:</div><ul class="notion-list notion-list-disc notion-block-a710016b3287452ea557a6e21bdb55e7"><li>文件的开头 - 值为 0</li></ul><ul class="notion-list notion-list-disc notion-block-1744eec189ce43bca21534751397b23c"><li>当前位置 - 值 1</li></ul><ul class="notion-list notion-list-disc notion-block-896d4d4888ba464dbbeb32778bfa6fd6"><li>文件结束 - 值 2</li></ul><div class="notion-text notion-block-a195c3d635904bb0907f0c815dda7acd">如果出错，系统调用将返回 EAX 寄存器中的错误代码。</div><h3 class="notion-h notion-h2 notion-h-indent-1 notion-block-0aefedb98df44d5198462b34e5462a07" data-id="0aefedb98df44d5198462b34e5462a07"><span><div id="0aefedb98df44d5198462b34e5462a07" class="notion-header-anchor"></div><a class="notion-hash-link" href="#0aefedb98df44d5198462b34e5462a07" title="例子 (Example)"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">例子 (Example)</span></span></h3><div class="notion-text notion-block-f7e48c24826e496ebb7d3b1ac70888e9">以下程序创建并打开名为_myfile.txt_的文件，并在此文件中写入文本 “Welcome to IOWIKI”。 接下来，程序从文件中读取并将数据存储到名为_info_的缓冲区中。 最后，它显示存储在_info_的文本。</div><div class="notion-text notion-block-75a2bfe529f94e99bbd33711abd19ac1">编译并执行上述代码时，会产生以下结果</div><h2 class="notion-h notion-h1 notion-h-indent-0 notion-block-5ebe25cf73fa42d0bd41b2a48e040478" data-id="5ebe25cf73fa42d0bd41b2a48e040478"><span><div id="5ebe25cf73fa42d0bd41b2a48e040478" class="notion-header-anchor"></div><a class="notion-hash-link" href="#5ebe25cf73fa42d0bd41b2a48e040478" title="内存管理(Memory Management)"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">内存管理(<b>Memory Management</b>)</span></span></h2><div class="notion-text notion-block-1c1a58e9dcb34430a239beb9ab632130"><b>sys_brk()</b> 系统调用由内核提供，用于分配内存而无需在以后移动它。 此调用在内存中的应用程序映像后面分配内存。 </div><div class="notion-text notion-block-0e18e1d45a9c47b5bc2b5f6335854c24">此系统功能允许您在数据部分中设置最高可用地址。</div><div class="notion-text notion-block-f79b1778bf6f4e53afe7e8d1c6dc72a4">此系统调用采用一个参数，这是需要设置的最高内存地址。 该值存储在 EBX 寄存器中。</div><div class="notion-text notion-block-bf4a882990214b4f9aeec78ad78148c1">如果有任何错误，sys_brk（）返回 - 1 或返回负错误代码本身。 </div><div class="notion-blank notion-block-0952c97ed0034e51b4c271c826dc0f22"> </div><div class="notion-text notion-block-4d3eeb1d399e4c89969f88fe2b42cba2">以下示例演示了动态内存分配</div><h3 class="notion-h notion-h2 notion-h-indent-1 notion-block-d28761001d124cc7ab74562453d99509" data-id="d28761001d124cc7ab74562453d99509"><span><div id="d28761001d124cc7ab74562453d99509" class="notion-header-anchor"></div><a class="notion-hash-link" href="#d28761001d124cc7ab74562453d99509" title="例子 (Example)"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">例子 (Example)</span></span></h3><div class="notion-text notion-block-f64594b5d2b9447c84229a573bea601b">以下程序使用 sys_brk（）系统调用分配 16kb 的内存</div><div class="notion-text notion-block-3dc71ffd3c02427eb0901fa47216d92b">编译并执行上述代码时，会产生以下结果 -</div><h2 class="notion-h notion-h1 notion-h-indent-0 notion-block-2f77226b6daa44848c9eeabb99269223" data-id="2f77226b6daa44848c9eeabb99269223"><span><div id="2f77226b6daa44848c9eeabb99269223" class="notion-header-anchor"></div><a class="notion-hash-link" href="#2f77226b6daa44848c9eeabb99269223" title="引用"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">引用</span></span></h2><div class="notion-row"><a target="_blank" rel="noopener noreferrer" class="notion-bookmark notion-block-ce9ef37ec1984256af2e20e548484086" href="https://iowiki.com/assembly_programming/assembly_programming_index.html"><div><div class="notion-bookmark-title">汇编 - 教程_学习汇编|WIKI教程</div><div class="notion-bookmark-description">汇编语言是用于特定于特定计算机体系结构的计算机或其他可编程设备的低级编程语言，与大多数高级编程语言相反，后者通常可跨多个系统移植。 汇编语言被称为汇编程序（如NASM，MASM等）的实用程序转换为可执行机器代码。 本教程专为那些想要从头学习汇编编程基础知识的人而设计。 本教程将为您提供有关汇编编程的充分理解，您可以从中获得更高水平的专业知识。 ...</div><div class="notion-bookmark-link"><div class="notion-bookmark-link-icon"><img src="https://www.notion.so/image/https%3A%2F%2Fiowiki.com%2Fstatic%2Fcimg%2Frumenz.ico?table=block&amp;id=ce9ef37e-c198-4256-af2e-20e548484086&amp;t=ce9ef37e-c198-4256-af2e-20e548484086" alt="汇编 - 教程_学习汇编|WIKI教程" loading="lazy" decoding="async"/></div><div class="notion-bookmark-link-text">https://iowiki.com/assembly_programming/assembly_programming_index.html</div></div></div><div class="notion-bookmark-image"><img style="object-fit:cover" src="https://www.notion.so/image/https%3A%2F%2Frumenz.com%2Fstatic%2Fcimg%2Fswx.png?table=block&amp;id=ce9ef37e-c198-4256-af2e-20e548484086&amp;t=ce9ef37e-c198-4256-af2e-20e548484086" alt="汇编 - 教程_学习汇编|WIKI教程" loading="lazy" decoding="async"/></div></a></div><div class="notion-blank notion-block-5da259ad97094b08bd65aedd94c5251a"> </div></main></div>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[花指令分析学习]]></title>
            <link>https://thestar0.github.io//article/2022/08/06/20f75995-1829-4fc6-9f33-13b64eb7e0be</link>
            <guid>https://thestar0.github.io//article/2022/08/06/20f75995-1829-4fc6-9f33-13b64eb7e0be</guid>
            <pubDate>Sat, 06 Aug 2022 16:00:00 GMT</pubDate>
            <description><![CDATA[花指令详解]]></description>
            <content:encoded><![CDATA[<div id="notion-article" class="mx-auto overflow-hidden "><main class="notion light-mode notion-page notion-block-20f7599518294fc69f3313b64eb7e0be"><div class="notion-viewport"></div><div class="notion-collection-page-properties"></div><div class="notion-callout notion-gray_background_co notion-block-55796a563d684824ae2b9b55c9281a10"><div class="notion-page-icon-inline notion-page-icon-span"><span class="notion-page-icon" role="img" aria-label="💡">💡</span></div><div class="notion-callout-text">我所用到的环境vs stuio code 2022,ida7.7(曾因为环境问题一直没有好好弄这个，希望对你有帮助)</div></div><h3 class="notion-h notion-h2 notion-h-indent-0 notion-block-88ab2c21527a4a7095e48dd99ce12ecc" data-id="88ab2c21527a4a7095e48dd99ce12ecc"><span><div id="88ab2c21527a4a7095e48dd99ce12ecc" class="notion-header-anchor"></div><a class="notion-hash-link" href="#88ab2c21527a4a7095e48dd99ce12ecc" title="花指令介绍"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">花指令介绍</span></span></h3><blockquote class="notion-quote notion-block-016177ef593a4e7d9245ffa63b501aa1"><div>花指令是对抗反汇编的杀器之一，正常代码添加了花指令之后，可以破坏静态反汇编的过程，使反汇编出错，可以让破解者的分析工作大量增加，从而使不能理解程序的结构和算法，然后不能破解程序，达到保护病毒和软件的目的</div></blockquote><h3 class="notion-h notion-h2 notion-h-indent-0 notion-block-ef6357234f2942d8ae9617ffe903886c" data-id="ef6357234f2942d8ae9617ffe903886c"><span><div id="ef6357234f2942d8ae9617ffe903886c" class="notion-header-anchor"></div><a class="notion-hash-link" href="#ef6357234f2942d8ae9617ffe903886c" title="作用"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">作用</span></span></h3><blockquote class="notion-quote notion-block-c85fa9da66d344168e5703851db91e46"><div>欺骗反汇编器，让反汇编器无法正确反汇编出汇编代码，具体来说是破坏了反编译的分析,使得栈指针在反编译引擎中出现异常，从而加大静态分析的难度，使得逆向分析人员难以识别代码的真正意图 </div></blockquote><h3 class="notion-h notion-h2 notion-h-indent-0 notion-block-4ea5adb753174e91b3cd36bf379500f9" data-id="4ea5adb753174e91b3cd36bf379500f9"><span><div id="4ea5adb753174e91b3cd36bf379500f9" class="notion-header-anchor"></div><a class="notion-hash-link" href="#4ea5adb753174e91b3cd36bf379500f9" title="花指令分类"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">花指令分类</span></span></h3><details class="notion-toggle notion-block-a925bb6ae6444016b7efb5960b887ad1"><summary><h4 class="notion-h notion-h3 notion-h-indent-1 notion-block-a925bb6ae6444016b7efb5960b887ad1" data-id="a925bb6ae6444016b7efb5960b887ad1"><span><div id="a925bb6ae6444016b7efb5960b887ad1" class="notion-header-anchor"></div><span class="notion-h-title">可执行花指令</span></span></h4></summary><div><blockquote class="notion-quote notion-block-1bcc66dfe4a246569fd382666d6d35fc"><div>通常程序保护用到的一般就是可执行的花指令，即垃圾指令</div></blockquote><div class="notion-text notion-block-fc2e6fe035564bbd93b24d8b8d9dc7c3">可执行花指令指的是能够正常运行的但又不改变原始程序逻辑性的一组无用指令</div><div class="notion-text notion-block-a2eec7021c00479598118df938fb7997">其特点：</div><ol start="1" class="notion-list notion-list-numbered notion-block-3def0f07bdb14365a373b70e64f002c3" style="list-style-type:decimal"><li>程序可以正常运行</li></ol><ol start="2" class="notion-list notion-list-numbered notion-block-e2e5a9dff9f74e51a82beae8e4c1630e" style="list-style-type:decimal"><li>不改变任何寄存器的值</li></ol><ol start="3" class="notion-list notion-list-numbered notion-block-031c4f44a2a340c284709d87d1581407" style="list-style-type:decimal"><li>反汇编器可以正常反汇编该指令</li></ol></div></details><details class="notion-toggle notion-block-a6da59eae88a4e52ab49d0d07866c5df"><summary><h4 class="notion-h notion-h3 notion-h-indent-1 notion-block-a6da59eae88a4e52ab49d0d07866c5df" data-id="a6da59eae88a4e52ab49d0d07866c5df"><span><div id="a6da59eae88a4e52ab49d0d07866c5df" class="notion-header-anchor"></div><span class="notion-h-title">不可执行花指令</span></span></h4></summary><div></div></details><h3 class="notion-h notion-h2 notion-h-indent-0 notion-block-2b7cd11936224417afc2dae208fec887" data-id="2b7cd11936224417afc2dae208fec887"><span><div id="2b7cd11936224417afc2dae208fec887" class="notion-header-anchor"></div><a class="notion-hash-link" href="#2b7cd11936224417afc2dae208fec887" title="反编译器的工作原理"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">反编译器的工作原理</span></span></h3><div class="notion-text notion-block-5e627f907d294d1c889d6e0f835a6bb7">由于反编译器的工作原理一般是<span class="notion-orange"><b>线性扫描算法</b></span>或<span class="notion-orange"><b>递归下降反汇编</b></span>算法。</div><div class="notion-text notion-block-983c77b9d87e4376ba208f770d3d737e">线性扫描反汇编算法从程序的入口点开始反汇编，然后对整个代码进行扫描，反汇编扫描其过程中所遇到的每条指令。那么线性扫描算法的缺点也就显而易见了，由于其不定常的指令格式，在反汇编扫描过程中无法区分数据与代码，从而导致将代码段中嵌入的数据误解释为指令的操作码，以致最后得到错误的反汇编结果。</div><div class="notion-text notion-block-bb52773c0f884610ad6c32514a32b99a">递归下降算法，递归下降算法通过程序的控制流来确定反汇编的下一条指令，遇到非控制转移指令时顺序进行反汇编，而遇到控制转移指令时则从转移地址处开始进行反汇编。该算法的缺点在于难于准确确定间接转移的目的地址。 </div><h3 class="notion-h notion-h2 notion-h-indent-0 notion-block-626fbaeb3620466383c3e29a14219bd9" data-id="626fbaeb3620466383c3e29a14219bd9"><span><div id="626fbaeb3620466383c3e29a14219bd9" class="notion-header-anchor"></div><a class="notion-hash-link" href="#626fbaeb3620466383c3e29a14219bd9" title="花指令原理"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">花指令原理</span></span></h3><div class="notion-text notion-block-55c7cc96cccb451d89e1bae85841f408">不同的字节码可以转换为不同的指令，有的一个字节码就可以转换成一条指令，比如0x55就反编译为<span class="notion-red"><b>push ebp</b></span></div><div class="notion-text notion-block-04e1c4ccd1274b688c5a836d4c9c8df0">如果是0xe8，就为汇编中的call指令，后面就会跟着四个与地址有关的字节，反汇编器就会一下子读取5个字节。同理除了0xe8字节码外还有其他字节码会读取2,3,4个字节</div><div class="notion-text notion-block-b3ef3bab47e5441ab57055f989966263">如果中间的反编译出错，例如两条汇编中出现一个0xe8字节，那么反编译器会把跟着的四个字节处理为call地址相关的数据，反汇编成 call XXXXXXX的指令，但其实后面的四个字节码根本不是需要调用的地址字节码，而是其他的字节码或者指令</div><h3 class="notion-h notion-h2 notion-h-indent-0 notion-block-64e0a878f02148499435d07da5abb6f9" data-id="64e0a878f02148499435d07da5abb6f9"><span><div id="64e0a878f02148499435d07da5abb6f9" class="notion-header-anchor"></div><a class="notion-hash-link" href="#64e0a878f02148499435d07da5abb6f9" title="常见花指令"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">常见花指令</span></span></h3><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-b451981b33fd4432a24b0e54ac4044a0"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column;height:100%"><img style="object-fit:cover" src="https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fa910c7de-70c6-4363-91d2-99bbb615001b%2FUntitled.png?table=block&amp;id=b451981b-33fd-4432-a24b-0e54ac4044a0&amp;t=b451981b-33fd-4432-a24b-0e54ac4044a0&amp;width=708.984375&amp;cache=v2" alt="notion image" loading="lazy" decoding="async"/></div></figure><h4 class="notion-h notion-h3 notion-h-indent-1 notion-block-bd32c789edd24912a55d5edbdaa4e1a2" data-id="bd32c789edd24912a55d5edbdaa4e1a2"><span><div id="bd32c789edd24912a55d5edbdaa4e1a2" class="notion-header-anchor"></div><a class="notion-hash-link" href="#bd32c789edd24912a55d5edbdaa4e1a2" title="简单花指令"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">简单花指令</span></span></h4><blockquote class="notion-quote notion-block-e74877488801445da323774a3da7c9ee"><div>除了上面两种，还有一种只会增加垃圾指令的简单花指令（只能生成垃圾指令，不影响ida反编译）</div></blockquote><div class="notion-text notion-block-966fea10e2134018b7576a344277d1ad">我写的源码（镶嵌到main函数里面），垃圾指令就这个一个，没啥用，不影响，ida反编译后自动就进入了main函数的伪代码，ida可正常f5</div><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-372a9045196a4261805cf5de4e57db7f"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:326px;max-width:100%;flex-direction:column"><img style="object-fit:cover" src="https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fd1d46fee-bced-446a-8d09-2de8be01d92a%2FUntitled.png?table=block&amp;id=372a9045-196a-4261-805c-f5de4e57db7f&amp;t=372a9045-196a-4261-805c-f5de4e57db7f&amp;width=326&amp;cache=v2" alt="notion image" loading="lazy" decoding="async"/></div></figure><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-bb4e8a0eb7694220872164919397d511"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column;height:100%"><img style="object-fit:cover" src="https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F6a7892fb-73d1-43c7-a7cc-227594ca5ec6%2FUntitled.png?table=block&amp;id=bb4e8a0e-b769-4220-8721-64919397d511&amp;t=bb4e8a0e-b769-4220-8721-64919397d511&amp;width=708.9921875&amp;cache=v2" alt="notion image" loading="lazy" decoding="async"/></div></figure><div class="notion-text notion-block-62293d6cf3ad4deab9bb6ecd6964e56a">多层嵌套</div><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-4da2c495097444f3858d0f311173b318"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:338px;max-width:100%;flex-direction:column"><img style="object-fit:cover" src="https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F2a9caa8b-e6b5-4199-a66c-bdb855e1a027%2FUntitled.png?table=block&amp;id=4da2c495-0974-44f3-858d-0f311173b318&amp;t=4da2c495-0974-44f3-858d-0f311173b318&amp;width=338&amp;cache=v2" alt="notion image" loading="lazy" decoding="async"/></div></figure><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-85f66aaa93c043c7a8986924af59867e"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column;height:100%"><img style="object-fit:cover" src="https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F2e8d2e29-6dc1-4fb2-a86a-c3dd36cb5079%2FUntitled.png?table=block&amp;id=85f66aaa-93c0-43c7-a898-6924af59867e&amp;t=85f66aaa-93c0-43c7-a898-6924af59867e&amp;width=708.9921875&amp;cache=v2" alt="notion image" loading="lazy" decoding="async"/></div></figure><h4 class="notion-h notion-h3 notion-h-indent-1 notion-block-ee67b93753e2473593cd4b5813668dd2" data-id="ee67b93753e2473593cd4b5813668dd2"><span><div id="ee67b93753e2473593cd4b5813668dd2" class="notion-header-anchor"></div><a class="notion-hash-link" href="#ee67b93753e2473593cd4b5813668dd2" title="互补条件跳转"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">互补条件跳转</span></span></h4><div class="notion-text notion-block-3dfac477dcf041279e09b86feaa545fc">先看我写的源码（我写在main函数里的）</div><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-f200540c645e4aafb25dccc4724a0e25"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:274px;max-width:100%;flex-direction:column"><img style="object-fit:cover" src="https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F8d7279c8-0a1b-4446-989b-766557792ee1%2FUntitled.png?table=block&amp;id=f200540c-645e-4aaf-b25d-ccc4724a0e25&amp;t=f200540c-645e-4aaf-b25d-ccc4724a0e25&amp;width=274&amp;cache=v2" alt="notion image" loading="lazy" decoding="async"/></div></figure><div class="notion-text notion-block-3eac0ddd9a6f4bb0b28232fb360ee923">反汇编就成了这样</div><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-4052d976e0dc4a3cbc0d173044ad7686"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column;height:100%"><img style="object-fit:cover" src="https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fb23a40c6-613d-48ac-a062-f64d8accf613%2FUntitled.png?table=block&amp;id=4052d976-e0dc-4a3c-bc0d-173044ad7686&amp;t=4052d976-e0dc-4a3c-bc0d-173044ad7686&amp;width=708.9921875&amp;cache=v2" alt="notion image" loading="lazy" decoding="async"/></div></figure><div class="notion-text notion-block-f366d829f797443a9271d20b97d80964">升级版</div><blockquote class="notion-quote notion-block-e138e157125d45d2a8412ad78d91674d"><div>在如下代码中，先对eax进行xor之后，再进行test比较，zf标志位肯定为1，就肯定执行跳转jz code2;，也就是说中间0xC7永远不会执行</div></blockquote><div class="notion-text notion-block-837a687fe4f448199f585ab8007bf092">注意先压栈保存eax的值，最后再把eax的值pop出来</div><div class="notion-text notion-block-ecebe2081d8446788b106fcb4f0c772f">编译源码（嵌入在main函数里），实测ida f5已经废了，花指令如下</div><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-ed77c0be6b444f0088e98ddfe29a0f00"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:437px;max-width:100%;flex-direction:column"><img style="object-fit:cover" src="https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Ff51e9813-97c2-42d7-8224-cfb14eac5d7a%2FUntitled.png?table=block&amp;id=ed77c0be-6b44-4f00-88e9-8ddfe29a0f00&amp;t=ed77c0be-6b44-4f00-88e9-8ddfe29a0f00&amp;width=437&amp;cache=v2" alt="notion image" loading="lazy" decoding="async"/></div></figure><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-7ef01690a3a54dd5bfef002aff2c2566"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column;height:100%"><img style="object-fit:cover" src="https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F10b4af58-9c9f-4c5e-9d3b-67b66968890a%2FUntitled.png?table=block&amp;id=7ef01690-a3a5-4dd5-bfef-002aff2c2566&amp;t=7ef01690-a3a5-4dd5-bfef-002aff2c2566&amp;width=708.9921875&amp;cache=v2" alt="notion image" loading="lazy" decoding="async"/></div></figure><div class="notion-text notion-block-a4eb6828db814048bdafa4de280134d8">再来个加强版</div><div class="notion-text notion-block-f789a2c69e8c44259abd5db1abc2252f">编译源码，这个花指令已经不是看着很明显了（ida f5照样废了）</div><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-fa55ae65815744ca95bf832b8c12ad41"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:323px;max-width:100%;flex-direction:column"><img style="object-fit:cover" src="https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fdb52f3c8-16e5-4b9e-8577-0e2c20644c79%2FUntitled.png?table=block&amp;id=fa55ae65-8157-44ca-95bf-832b8c12ad41&amp;t=fa55ae65-8157-44ca-95bf-832b8c12ad41&amp;width=323&amp;cache=v2" alt="notion image" loading="lazy" decoding="async"/></div></figure><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-517bdf73d50c419d8f6461b3bb1f3560"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column;height:100%"><img style="object-fit:cover" src="https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F97356b96-3f5f-4c4e-acd5-f35a42d32606%2FUntitled.png?table=block&amp;id=517bdf73-d50c-419d-8f64-61b3bb1f3560&amp;t=517bdf73-d50c-419d-8f64-61b3bb1f3560&amp;width=708.9921875&amp;cache=v2" alt="notion image" loading="lazy" decoding="async"/></div></figure><div class="notion-text notion-block-d50aa99a914b4d3f8e1060b2967a2076">看到花指令的强大没有</div><div class="notion-text notion-block-fcd4eaedd71041abad122315da5393a6">其实还有</div><h4 class="notion-h notion-h3 notion-h-indent-1 notion-block-57d1aa19e7d1469c976194ff058d6a28" data-id="57d1aa19e7d1469c976194ff058d6a28"><span><div id="57d1aa19e7d1469c976194ff058d6a28" class="notion-header-anchor"></div><a class="notion-hash-link" href="#57d1aa19e7d1469c976194ff058d6a28" title="call&amp;ret构造花指令"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">call&amp;ret构造花指令</span></span></h4><blockquote class="notion-quote notion-block-b2dd7648db4743e9865baa470183b494"><div>代码中的esp存储的就是函数返回地址，对[esp]+8，就是函数的返回地址+8，正好盖过代码中的函数指令和垃圾数据。</div></blockquote><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-94a920ea3833443baf42f93f638102cf"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:452px;max-width:100%;flex-direction:column"><img style="object-fit:cover" src="https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F094837da-cba9-494f-8273-739d9678a8f8%2FUntitled.png?table=block&amp;id=94a920ea-3833-443b-af42-f93f638102cf&amp;t=94a920ea-3833-443b-af42-f93f638102cf&amp;width=452&amp;cache=v2" alt="notion image" loading="lazy" decoding="async"/></div></figure><div class="notion-text notion-block-fb5ad012584046328bbc8ee507bd8b89">编译源码（我同样写在main函数里的）这个花指令，刚开始反编译完，我人傻了，要不是往后面翻有个83h,都看不出来是一个花</div><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-9799fc04bafc4ed7aed1589df5d4733b"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column;height:100%"><img style="object-fit:cover" src="https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fb5d19b2b-fd4f-4d50-a3ba-7898d835acad%2FUntitled.png?table=block&amp;id=9799fc04-bafc-4ed7-aed1-589df5d4733b&amp;t=9799fc04-bafc-4ed7-aed1-589df5d4733b&amp;width=708.984375&amp;cache=v2" alt="notion image" loading="lazy" decoding="async"/></div></figure><div class="notion-text notion-block-0ebe41f17f8f4c44a9763c3d19def517">这里建议动态调试一下</div><div class="notion-text notion-block-b177b9a0357e4f63af4c5dfcc969f4a8">动态花就没了，还能理解一下这个花指令</div><div class="notion-callout notion-gray_background_co notion-block-1cbe7aec2a8947a2a870801f883d5c32"><div class="notion-page-icon-inline notion-page-icon-span"><span class="notion-page-icon" role="img" aria-label="💡">💡</span></div><div class="notion-callout-text">call 指令的直观理解：push 函数返回地址; jmp 立即数                                                           ret 指令的直观理解：pop eip; add esp,4 </div></div><h4 class="notion-h notion-h3 notion-h-indent-1 notion-block-3ca906cea1d8440ea213ae9f2d916427" data-id="3ca906cea1d8440ea213ae9f2d916427"><span><div id="3ca906cea1d8440ea213ae9f2d916427" class="notion-header-anchor"></div><a class="notion-hash-link" href="#3ca906cea1d8440ea213ae9f2d916427" title="利用函数返回确定值"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">利用函数返回确定值</span></span></h4><blockquote class="notion-quote notion-block-8b1e30ccae644db0aa899c64edf8b83e"><div>有些函数返回值是确定的，比如我们自己写的函数，返回值可以是任意非零整数，就可以自己构造永恒跳转</div></blockquote><blockquote class="notion-quote notion-block-b527441c73ff4a679259a047976ff735"><div>还有些API函数也是如此，比如在Win下HMODULE LoadLibraryA(LPCSTR lpLibFileName);函数，如果我们故意传入一个不存在的模块名称，那么他就会返回一个确定的值NULL，此时就可以通过这个函数来构造永恒跳转。</div></blockquote><div class="notion-text notion-block-62bfa2edce5442bdb4282d0fb50df4ee">如下例子：</div><div class="notion-text notion-block-74c37d45c70d4994b6903f5bcc9def0b">这里注意一下,LoadLibrary函数需要调用windows.h这个库，这次写在外面的函数，花指令如下，f5可以实现</div><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-f051ba9a55e245cbaa6f46912e8014c2"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:417px;max-width:100%;flex-direction:column"><img style="object-fit:cover" src="https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F2d756729-47a8-4305-a3f7-cdf6e50fa85f%2FUntitled.png?table=block&amp;id=f051ba9a-55e2-45cb-aa6f-46912e8014c2&amp;t=f051ba9a-55e2-45cb-aa6f-46912e8014c2&amp;width=417&amp;cache=v2" alt="notion image" loading="lazy" decoding="async"/></div></figure><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-55c7e97f7c9744ada45d9b2c8594771f"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column;height:100%"><img style="object-fit:cover" src="https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fc308d845-5a43-4d93-bcb3-471858a3e6c2%2FUntitled.png?table=block&amp;id=55c7e97f-7c97-44ad-a45d-9b2c8594771f&amp;t=55c7e97f-7c97-44ad-a45d-9b2c8594771f&amp;width=708.9921875&amp;cache=v2" alt="notion image" loading="lazy" decoding="async"/></div></figure><h4 class="notion-h notion-h3 notion-h-indent-1 notion-block-c418bd610b584fe5a99ecb7fa8c2d44e" data-id="c418bd610b584fe5a99ecb7fa8c2d44e"><span><div id="c418bd610b584fe5a99ecb7fa8c2d44e" class="notion-header-anchor"></div><a class="notion-hash-link" href="#c418bd610b584fe5a99ecb7fa8c2d44e" title="call和ret的组合"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">call和ret的组合</span></span></h4><div class="notion-text notion-block-711f8362b67b4202a44838d77f3885c3">这里直接放出处的图片</div><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-9137cec6f1e84bb2a9c27c7f5e103999"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column;height:100%"><img style="object-fit:cover" src="https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F12176ac3-b643-40d6-adaa-1e64842ba079%2FUntitled.png?table=block&amp;id=9137cec6-f1e8-4bb2-a9c2-7c7f5e103999&amp;t=9137cec6-f1e8-4bb2-a9c2-7c7f5e103999&amp;width=708.9921875&amp;cache=v2" alt="notion image" loading="lazy" decoding="async"/></div></figure><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-741c7cde3a054b0f80ce7c2c38a1e1d0"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column;height:100%"><img style="object-fit:cover" src="https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F6f4c3daf-2d6f-49aa-89ab-bf0cc65d2568%2FUntitled.png?table=block&amp;id=741c7cde-3a05-4b0f-80ce-7c2c38a1e1d0&amp;t=741c7cde-3a05-4b0f-80ce-7c2c38a1e1d0&amp;width=708.9765625&amp;cache=v2" alt="notion image" loading="lazy" decoding="async"/></div></figure><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-7dbbe954b72a4497ad617ddedad0da70"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column;height:100%"><img style="object-fit:cover" src="https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Ffaa01b5f-2559-4ec3-b0d3-6b02ef6b19d1%2FUntitled.png?table=block&amp;id=7dbbe954-b72a-4497-ad61-7ddedad0da70&amp;t=7dbbe954-b72a-4497-ad61-7ddedad0da70&amp;width=708.984375&amp;cache=v2" alt="notion image" loading="lazy" decoding="async"/></div></figure><div class="notion-text notion-block-48f6d6f393a04b849ec80034acc77556">思路有很多种，按照自己喜欢的方式组合，只要不影响其他正常代码的运行就可以，如下也是比较好的两种思路</div><h3 class="notion-h notion-h2 notion-h-indent-0 notion-block-f61e9847f62446ff9c641c7d58547ce3" data-id="f61e9847f62446ff9c641c7d58547ce3"><span><div id="f61e9847f62446ff9c641c7d58547ce3" class="notion-header-anchor"></div><a class="notion-hash-link" href="#f61e9847f62446ff9c641c7d58547ce3" title="call嵌套的思路1"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">call嵌套的思路1</span></span></h3><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-bc253ba4e07f46ae819d1e00851f1267"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:295px;max-width:100%;flex-direction:column"><img style="object-fit:cover" src="https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F70f0845f-6ab3-43de-9b60-1f0e37c40e47%2FUntitled.png?table=block&amp;id=bc253ba4-e07f-46ae-819d-1e00851f1267&amp;t=bc253ba4-e07f-46ae-819d-1e00851f1267&amp;width=295&amp;cache=v2" alt="notion image" loading="lazy" decoding="async"/></div></figure><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-d5c3fe2f686946cb9cd7274562b7a8e3"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column;height:100%"><img style="object-fit:cover" src="https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Faebdd7e0-c7ab-441f-a6e8-986ea373aa99%2FUntitled.png?table=block&amp;id=d5c3fe2f-6869-46cb-9cd7-274562b7a8e3&amp;t=d5c3fe2f-6869-46cb-9cd7-274562b7a8e3&amp;width=708.9921875&amp;cache=v2" alt="notion image" loading="lazy" decoding="async"/></div></figure><h3 class="notion-h notion-h2 notion-h-indent-0 notion-block-efec4fee076b40cb8b311b36d2691c5f" data-id="efec4fee076b40cb8b311b36d2691c5f"><span><div id="efec4fee076b40cb8b311b36d2691c5f" class="notion-header-anchor"></div><a class="notion-hash-link" href="#efec4fee076b40cb8b311b36d2691c5f" title="call嵌套的思路2"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">call嵌套的思路2</span></span></h3><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-1c6b2ceb960a4789943a3b342815c483"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:288px;max-width:100%;flex-direction:column"><img style="object-fit:cover" src="https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Ff215f610-2a43-4607-877e-7c88a8946ce3%2FUntitled.png?table=block&amp;id=1c6b2ceb-960a-4789-943a-3b342815c483&amp;t=1c6b2ceb-960a-4789-943a-3b342815c483&amp;width=288&amp;cache=v2" alt="notion image" loading="lazy" decoding="async"/></div></figure><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-0882007d32dd49cd947a94451b534460"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column;height:100%"><img style="object-fit:cover" src="https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fda1d291c-9f9d-4638-b555-dc45a50563a9%2FUntitled.png?table=block&amp;id=0882007d-32dd-49cd-947a-94451b534460&amp;t=0882007d-32dd-49cd-947a-94451b534460&amp;width=708.9921875&amp;cache=v2" alt="notion image" loading="lazy" decoding="async"/></div></figure><h4 class="notion-h notion-h3 notion-h-indent-1 notion-block-71d08011d84b404ea6036a64d884dc67" data-id="71d08011d84b404ea6036a64d884dc67"><span><div id="71d08011d84b404ea6036a64d884dc67" class="notion-header-anchor"></div><a class="notion-hash-link" href="#71d08011d84b404ea6036a64d884dc67" title="花指令原理另类利用"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">花指令原理另类利用</span></span></h4><div class="notion-text notion-block-a5dae72ba74f4e87b18053f77dfc9605">当我们理解了花指令的原理后，我们可以在将花指令中的垃圾数据替换为一些特定的特征码，可以对应的$“定位功能”$，尤其在SMC自解码这个反调试技术中可以运用。</div><div class="notion-text notion-block-8e49cb3b27c543eeb1ff02e3bee13b3b">例如： </div><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-c02f8d46650b4d2f9e60ff516749e6a2"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:297px;max-width:100%;flex-direction:column"><img style="object-fit:cover" src="https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F9999ba85-e4b0-4e6f-8df8-ca3e92b652a6%2FUntitled.png?table=block&amp;id=c02f8d46-650b-4d2f-9e60-ff516749e6a2&amp;t=c02f8d46-650b-4d2f-9e60-ff516749e6a2&amp;width=297&amp;cache=v2" alt="notion image" loading="lazy" decoding="async"/></div></figure><div class="notion-text notion-block-ac5237851f574bd591ed93857a089c14">将这串特征码hElLowoRlD嵌入到代码中，那我们只需要在当前进程中搜索hElLowoRlD字符串，就可以定位到当前代码位置，然后对下面的代码进行SMC自解密。 </div><h3 class="notion-h notion-h2 notion-h-indent-0 notion-block-2ecc6df927de4c27bf99d3f580d91f94" data-id="2ecc6df927de4c27bf99d3f580d91f94"><span><div id="2ecc6df927de4c27bf99d3f580d91f94" class="notion-header-anchor"></div><a class="notion-hash-link" href="#2ecc6df927de4c27bf99d3f580d91f94" title="破解之道"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">破解之道</span></span></h3><ol start="1" class="notion-list notion-list-numbered notion-block-ca56ab5708d24fed931ad9bdf420b8c3" style="list-style-type:decimal"><li>手动分析出花指令，然后nop掉，然后保存副本</li></ol><ol start="2" class="notion-list notion-list-numbered notion-block-bd00fa54308b4e6b88a6719cc2be4279" style="list-style-type:decimal"><li>动态调试，不用管花指令（不过好像并不是所有都能这样）上面有个call ret那个可以直接动调过了</li></ol><ol start="3" class="notion-list notion-list-numbered notion-block-36c7a77688584ff9964f801424d5d9df" style="list-style-type:decimal"><li>简单分析几个花指令，写一个idc,idapython脚本</li></ol><h4 class="notion-h notion-h3 notion-h-indent-1 notion-block-e7ad8d9966f44235ae8dc74d7447f6a9" data-id="e7ad8d9966f44235ae8dc74d7447f6a9"><span><div id="e7ad8d9966f44235ae8dc74d7447f6a9" class="notion-header-anchor"></div><a class="notion-hash-link" href="#e7ad8d9966f44235ae8dc74d7447f6a9" title="这里简单演示一个，手动去花指令"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">这里简单演示一个，手动去花指令</span></span></h4><div class="notion-text notion-block-53657e59d3c94d99b93724a70ddef700">先上源码</div><div class="notion-text notion-block-cf0aee6272214e63833176082a8cd3f2">编译完，反编译</div><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-11ad8922c5ea4f7ab95a79b3b9fcfd11"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column;height:100%"><img style="object-fit:cover" src="https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Ffee37ed4-7bd3-4a01-a776-6bd1101f8adc%2FUntitled.png?table=block&amp;id=11ad8922-c5ea-4f7a-b95a-79b3b9fcfd11&amp;t=11ad8922-c5ea-4f7a-b95a-79b3b9fcfd11&amp;width=708.984375&amp;cache=v2" alt="notion image" loading="lazy" decoding="async"/></div></figure><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-c085ee4c124141d9a5b8cee7d447aed3"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column;height:100%"><img style="object-fit:cover" src="https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F09b98afb-0b99-4946-97ae-4f330a39e7ff%2FUntitled.png?table=block&amp;id=c085ee4c-1241-41d9-a5b8-cee7d447aed3&amp;t=c085ee4c-1241-41d9-a5b8-cee7d447aed3&amp;width=708.9921875&amp;cache=v2" alt="notion image" loading="lazy" decoding="async"/></div></figure><div class="notion-text notion-block-2de94252d76f47c28de045a07a03bef3">这个花简单，就在这里，直接nop掉，快捷键ctrl n</div><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-d3b4579544a04f1d85d162353de594cd"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column;height:100%"><img style="object-fit:cover" src="https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F482f2fd6-b1b1-4852-ab73-d0e1d244e38d%2FUntitled.png?table=block&amp;id=d3b45795-44a0-4f1d-85d1-62353de594cd&amp;t=d3b45795-44a0-4f1d-85d1-62353de594cd&amp;width=708.9921875&amp;cache=v2" alt="notion image" loading="lazy" decoding="async"/></div></figure><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-592f111cf2fc483497dff3e09e2f24c9"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column;height:100%"><img style="object-fit:cover" src="https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F69f389e4-7a56-4aed-8077-e44d85ff39af%2FUntitled.png?table=block&amp;id=592f111c-f2fc-4834-97df-f3e09e2f24c9&amp;t=592f111c-f2fc-4834-97df-f3e09e2f24c9&amp;width=708.984375&amp;cache=v2" alt="notion image" loading="lazy" decoding="async"/></div></figure><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-36f681c3023941cc9e4e41e4819d515f"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column;height:100%"><img style="object-fit:cover" src="https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Ffcbbd841-f27e-4d95-8014-0d4728210809%2FUntitled.png?table=block&amp;id=36f681c3-0239-41cc-9e4e-41e4819d515f&amp;t=36f681c3-0239-41cc-9e4e-41e4819d515f&amp;width=708.9921875&amp;cache=v2" alt="notion image" loading="lazy" decoding="async"/></div></figure><div class="notion-text notion-block-79139857c994447385b654d6e00af3ed">然后反编译结果为：</div><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-063391c129fb414aa12ded0b0207e9bd"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column;height:100%"><img style="object-fit:cover" src="https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fa8130ba5-4fbe-45d2-ae45-4aee0e58a56a%2FUntitled.png?table=block&amp;id=063391c1-29fb-414a-a12d-ed0b0207e9bd&amp;t=063391c1-29fb-414a-a12d-ed0b0207e9bd&amp;width=708.984375&amp;cache=v2" alt="notion image" loading="lazy" decoding="async"/></div></figure><div class="notion-text notion-block-752e0c29e1e14b0b848fd9135c26db9b">好像大差不差，其实是我这个花没写好。。。。问题不大，下次一定，写在flag下面</div><div class="notion-blank notion-block-3731a9e2b3fa4317a1e931600e2b1d9d"> </div><div class="notion-text notion-block-cb8c68380cfe4b26b8801be1d15e63f3">参考</div><div class="notion-row"><a target="_blank" rel="noopener noreferrer" class="notion-bookmark notion-block-421e841c1432482994dd1d8242fb468c" href="https://www.bilibili.com/read/cv13177757/"><div><div class="notion-bookmark-title">【原创】手脱花指令及IDA脚本编写</div><div class="notion-bookmark-description">综合许多篇帖子而成，大多参考以末尾参考文章形式给出，适用于初学者，感谢大家提出意见。可结合末尾源码参考学习。感觉有用的话感谢大佬们点个赞。 由于反编译器的工作原理一般是线性扫描算法或递归下降反汇编算法。 ...</div><div class="notion-bookmark-link"><div class="notion-bookmark-link-icon"><img src="https://www.notion.so/image/https%3A%2F%2Fwww.bilibili.com%2Ffavicon.ico?table=block&amp;id=421e841c-1432-4829-94dd-1d8242fb468c&amp;t=421e841c-1432-4829-94dd-1d8242fb468c" alt="【原创】手脱花指令及IDA脚本编写" loading="lazy" decoding="async"/></div><div class="notion-bookmark-link-text">https://www.bilibili.com/read/cv13177757/</div></div></div></a></div><div class="notion-blank notion-block-8ceec8e2c6124f17b77ea48b7353a41c"> </div></main></div>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[LLVM-PASS编写]]></title>
            <link>https://thestar0.github.io//article/2022/12/15/385cfc11-4eea-4d18-832e-2ff52b908961</link>
            <guid>https://thestar0.github.io//article/2022/12/15/385cfc11-4eea-4d18-832e-2ff52b908961</guid>
            <pubDate>Thu, 15 Dec 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[llvm-pass初步上手]]></description>
            <content:encoded><![CDATA[<div id="notion-article" class="mx-auto overflow-hidden "><main class="notion light-mode notion-page notion-block-385cfc114eea4d18832e2ff52b908961"><div class="notion-viewport"></div><div class="notion-collection-page-properties"></div><h3 class="notion-h notion-h2 notion-h-indent-0 notion-block-0627bc708ea24f8a8a0e01080ba4cb6a" data-id="0627bc708ea24f8a8a0e01080ba4cb6a"><span><div id="0627bc708ea24f8a8a0e01080ba4cb6a" class="notion-header-anchor"></div><a class="notion-hash-link" href="#0627bc708ea24f8a8a0e01080ba4cb6a" title="LLVM PASS 基本概念"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">LLVM PASS 基本概念</span></span></h3><div class="notion-text notion-block-a51db98df7864828be9e50128e369f11">LLVM Pass 框架是整个 LLVM 提供给用户用来干预代码优化过程的框架
编译后的 LLVM Pass 一般是. So 文件 (动态链接库) 通过优化器 opt 进行加载，作用是对 LLVM IR 中间代码进行分析和修改，生成新的中间代码
如图所示:</div><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-3402eefcedde4d82910cb146e1093fd6"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column"><img src="https://thestar0-1308426403.cos.ap-chengdu.myqcloud.com/img/20221215225138.png?spaceId=0dd8935a-39f8-4c94-aaf7-d2de23196366&amp;t=3402eefc-edde-4d82-910c-b146e1093fd6" alt="notion image" loading="lazy" decoding="async"/></div></figure><h3 class="notion-h notion-h2 notion-h-indent-0 notion-block-d433f2a38f45426b8e7435ebdf956276" data-id="d433f2a38f45426b8e7435ebdf956276"><span><div id="d433f2a38f45426b8e7435ebdf956276" class="notion-header-anchor"></div><a class="notion-hash-link" href="#d433f2a38f45426b8e7435ebdf956276" title="LLVM 源代码目录结构"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">LLVM 源代码目录结构</span></span></h3><h4 class="notion-h notion-h3 notion-h-indent-1 notion-block-23526c4c0e8546bb9826586bc3b1474f" data-id="23526c4c0e8546bb9826586bc3b1474f"><span><div id="23526c4c0e8546bb9826586bc3b1474f" class="notion-header-anchor"></div><a class="notion-hash-link" href="#23526c4c0e8546bb9826586bc3b1474f" title="llvm/include/llvm 文件夹"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">llvm/include/llvm 文件夹</span></span></h4><blockquote class="notion-quote notion-block-b8bed3763cd443548fc4c5bf854a2329"><div>llvm/include/llvm 文件夹存放了 LLVM 提供的一些公共头文件</div></blockquote><div class="notion-text notion-block-f3335d2d78bd4a37b6000cd05831a4d4"><div class="notion-text-children"><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-c9dfd9ca4dfc4864945121c0e6f6f4bd"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column"><img src="https://thestar0-1308426403.cos.ap-chengdu.myqcloud.com/img/20221215225720.png?spaceId=0dd8935a-39f8-4c94-aaf7-d2de23196366&amp;t=c9dfd9ca-4dfc-4864-9451-21c0e6f6f4bd" alt="notion image" loading="lazy" decoding="async"/></div></figure></div></div><h4 class="notion-h notion-h3 notion-h-indent-1 notion-block-448ccd17ea5543d8a94d478652f8677d" data-id="448ccd17ea5543d8a94d478652f8677d"><span><div id="448ccd17ea5543d8a94d478652f8677d" class="notion-header-anchor"></div><a class="notion-hash-link" href="#448ccd17ea5543d8a94d478652f8677d" title="llvm/lib 文件夹"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">llvm/lib 文件夹</span></span></h4><blockquote class="notion-quote notion-block-fbe21b940050443aab7f0c6976e873de"><div>llvm/lib 文件夹存放了 LLVM 大部分源代码（. cpp 文件）和一些不公开的
头文件</div></blockquote><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-2a0d88a8ab0d446598c726af89bd9df9"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column"><img src="https://thestar0-1308426403.cos.ap-chengdu.myqcloud.com/img/20221215225740.png?spaceId=0dd8935a-39f8-4c94-aaf7-d2de23196366&amp;t=2a0d88a8-ab0d-4465-98c7-26af89bd9df9" alt="notion image" loading="lazy" decoding="async"/></div></figure><h4 class="notion-h notion-h3 notion-h-indent-1 notion-block-1ce8a5a50afc4d899d6bb986f287c5e0" data-id="1ce8a5a50afc4d899d6bb986f287c5e0"><span><div id="1ce8a5a50afc4d899d6bb986f287c5e0" class="notion-header-anchor"></div><a class="notion-hash-link" href="#1ce8a5a50afc4d899d6bb986f287c5e0" title="llvm/lib/Transforms 文件夹"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">llvm/lib/Transforms 文件夹</span></span></h4><blockquote class="notion-quote notion-block-fc611f861aa3482aa33ae043fc8b3ba0"><div>llvm/lib/Transforms 文件夹存放所有 LLVM Pass 的源代码，以及 LLVM 自带的一些 PASS</div></blockquote><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-ef77e6cd620f4baa8ffcb0a674cad2d7"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column"><img src="https://thestar0-1308426403.cos.ap-chengdu.myqcloud.com/img/20221215225822.png?spaceId=0dd8935a-39f8-4c94-aaf7-d2de23196366&amp;t=ef77e6cd-620f-4baa-8ffc-b0a674cad2d7" alt="notion image" loading="lazy" decoding="async"/></div></figure><div class="notion-text notion-block-dceaf23129c54cd38eaa44a56bb70676">其他目录官方文档有详细的说明</div><h3 class="notion-h notion-h2 notion-h-indent-0 notion-block-3c88daa911294d1aa95562d90dbc0016" data-id="3c88daa911294d1aa95562d90dbc0016"><span><div id="3c88daa911294d1aa95562d90dbc0016" class="notion-header-anchor"></div><a class="notion-hash-link" href="#3c88daa911294d1aa95562d90dbc0016" title="LVM Pass 的编写、编译以及加载"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">LVM Pass 的编写、编译以及加载</span></span></h3><h4 class="notion-h notion-h3 notion-h-indent-1 notion-block-9ac608c91008480793edd5ad89280416" data-id="9ac608c91008480793edd5ad89280416"><span><div id="9ac608c91008480793edd5ad89280416" class="notion-header-anchor"></div><a class="notion-hash-link" href="#9ac608c91008480793edd5ad89280416" title="编译方式"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">编译方式</span></span></h4><div class="notion-text notion-block-1796ad63d7ee49cca33d9bb35c2b9243">LLVM Pass 支持三种编译方式：</div><ol start="1" class="notion-list notion-list-numbered notion-block-34e7fcf360024f3e8572019b36dc9370" style="list-style-type:decimal"><li>与整个 LLVM 一起重新编译，Pass 代码需要存放在 llvm/lib/Transforms 文件夹中（编译太耗时间）</li></ol><ol start="2" class="notion-list notion-list-numbered notion-block-2c964ff3480242a5b946f770c6b1fc2c" style="list-style-type:decimal"><li>通过 CMake 对 Pass 进行单独编译。（本文章使用）</li></ol><ol start="3" class="notion-list notion-list-numbered notion-block-12abcc1c625f4810a633dfb25ef9ad10" style="list-style-type:decimal"><li>使用命令行对 Pass 进行单独编译。（项目越大越不好管理）</li></ol><h4 class="notion-h notion-h3 notion-h-indent-1 notion-block-b018ad5df1e64536ac31490187155a5f" data-id="b018ad5df1e64536ac31490187155a5f"><span><div id="b018ad5df1e64536ac31490187155a5f" class="notion-header-anchor"></div><a class="notion-hash-link" href="#b018ad5df1e64536ac31490187155a5f" title="Pass 类型"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">Pass 类型</span></span></h4><div class="notion-text notion-block-0b80b98d68c649e594b218db333704d6">Pass 有很多种类型, 如下：</div><ol start="1" class="notion-list notion-list-numbered notion-block-8985926afada435ab3e4f737c1f9650d" style="list-style-type:decimal"><li>ModulePass（基于模块的 Pass）</li></ol><ol start="2" class="notion-list notion-list-numbered notion-block-4bfb41b8648642f681ab6e344768eddd" style="list-style-type:decimal"><li>FuncitonPass (基于函数的 Pass)</li></ol><ol start="3" class="notion-list notion-list-numbered notion-block-a8c76581896b46aaa56b7dd0f847f649" style="list-style-type:decimal"><li>CallGraphPass (基于调用图的 Pass)</li></ol><ol start="4" class="notion-list notion-list-numbered notion-block-bc875dd40fde4883bb8c5dd4556d3ace" style="list-style-type:decimal"><li>LoopPass（基于循环的 Pass）</li></ol><ol start="5" class="notion-list notion-list-numbered notion-block-9b9976ca373847ffbed280070a2a5a7f" style="list-style-type:decimal"><li>等等</li></ol><h4 class="notion-h notion-h3 notion-h-indent-1 notion-block-0405a0c7f8ad4b64b6a3ca0195bfccdd" data-id="0405a0c7f8ad4b64b6a3ca0195bfccdd"><span><div id="0405a0c7f8ad4b64b6a3ca0195bfccdd" class="notion-header-anchor"></div><a class="notion-hash-link" href="#0405a0c7f8ad4b64b6a3ca0195bfccdd" title="编写前须知"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">编写前须知</span></span></h4><div class="notion-text notion-block-6b9a0d6c0a364c0b9fa2a4294f69672f">以 FuncitonPass 为例子
编写 FuncitonPass 需要知道的</div><ol start="1" class="notion-list notion-list-numbered notion-block-96805abfdf18407c979f43c6896ae673" style="list-style-type:decimal"><li>FunctionPass 以函数为单位进行处理。</li></ol><ol start="2" class="notion-list notion-list-numbered notion-block-53f39f600c914ad387a77b50d2e75d41" style="list-style-type:decimal"><li>FunctionPass 的子类必须实现 runOnFunction (Function &amp;F) 函数。</li></ol><ol start="3" class="notion-list notion-list-numbered notion-block-2d63ae801cb249dc83f43a8d637c7803" style="list-style-type:decimal"><li>在 FunctionPass 运行时，会对程序中的每个函数执行 runOnFunction 函数。</li></ol><h4 class="notion-h notion-h3 notion-h-indent-1 notion-block-2938016c34e9435db0d763287bd60e82" data-id="2938016c34e9435db0d763287bd60e82"><span><div id="2938016c34e9435db0d763287bd60e82" class="notion-header-anchor"></div><a class="notion-hash-link" href="#2938016c34e9435db0d763287bd60e82" title="编写步骤"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">编写步骤</span></span></h4><ol start="1" class="notion-list notion-list-numbered notion-block-3333f8b5d4794e38b50b78587999c7d9" style="list-style-type:decimal"><li>创建一个类（class），继承 FunctionPass 父类。</li></ol><ol start="2" class="notion-list notion-list-numbered notion-block-f69c11114ceb411a954ff53225a08a9d" style="list-style-type:decimal"><li>在创建的类中实现 runOnFunction (Function &amp;F) 函数。</li></ol><ol start="3" class="notion-list notion-list-numbered notion-block-29a1fa05dd7c4755944890e2eba5316a" style="list-style-type:decimal"><li>向 LLVM 注册我们的 Pass 类。</li></ol><h4 class="notion-h notion-h3 notion-h-indent-1 notion-block-f697df18e07f46928e09af1662f78ca3" data-id="f697df18e07f46928e09af1662f78ca3"><span><div id="f697df18e07f46928e09af1662f78ca3" class="notion-header-anchor"></div><a class="notion-hash-link" href="#f697df18e07f46928e09af1662f78ca3" title="编译"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">编译</span></span></h4><blockquote class="notion-quote notion-block-6b4f4e584ad143b39f02bd2eea790c64"><div>如果选择基于 CMake 的编译方法，直接使用 CMake 进行编译即可。然后在 Build 文件夹内可以找到编译好的 so 文件。也就是我们编译好的 LLVM PASS</div></blockquote><h4 class="notion-h notion-h3 notion-h-indent-1 notion-block-73ef39300120409cb80034183d32a266" data-id="73ef39300120409cb80034183d32a266"><span><div id="73ef39300120409cb80034183d32a266" class="notion-header-anchor"></div><a class="notion-hash-link" href="#73ef39300120409cb80034183d32a266" title="加载"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">加载</span></span></h4><div class="notion-text notion-block-3c7af88df9a848eab0210307c02044ad">使用优化器 opt 将处理中间代码（. ll 或者. bs），生成新的中间代码 (. ll 或者. bs)</div><div class="notion-text notion-block-5d5583a3d8fd4a9c8aacd8245e3e0aa2">命令大致如下</div><ul class="notion-list notion-list-disc notion-block-18d202f1c4c7483d9c97f00beea22a58"><li>load 让 opt 优化器加载编译好的 LLVM Pass（. so 文件）进行优化中间代码</li></ul><h4 class="notion-h notion-h3 notion-h-indent-1 notion-block-a7349d5bbf4a4ed7ac822c14e93e9ddf" data-id="a7349d5bbf4a4ed7ac822c14e93e9ddf"><span><div id="a7349d5bbf4a4ed7ac822c14e93e9ddf" class="notion-header-anchor"></div><a class="notion-hash-link" href="#a7349d5bbf4a4ed7ac822c14e93e9ddf" title="Cmake 项目创建"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">Cmake 项目创建</span></span></h4><div class="notion-text notion-block-8634494cdc94488eb25ebfcf547646e9">目录:</div><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-c245a6ce71964be39c640bc7eb3282f7"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column"><img src="https://thestar0-1308426403.cos.ap-chengdu.myqcloud.com/img/20221215233144.png?spaceId=0dd8935a-39f8-4c94-aaf7-d2de23196366&amp;t=c245a6ce-7196-4be3-9c64-0bc7eb3282f7" alt="notion image" loading="lazy" decoding="async"/></div></figure><ul class="notion-list notion-list-disc notion-block-c77051a7a44e436095ec2b3ac929f7b4"><li>Build 文件夹：存放编译后 LLVM Pass (. so 文件)</li></ul><ul class="notion-list notion-list-disc notion-block-0222489db7234390b49bf5748d06036c"><li>Test 文件夹：存放测试程序 TestProgram. cpp</li></ul><ul class="notion-list notion-list-disc notion-block-e5da7570b7d0492ba90c12626263f473"><li>Test/TestProgram. cpp：示例代码（简单逆向题）</li></ul><ul class="notion-list notion-list-disc notion-block-bc249955ff90480ca0f2d22177d7f295"><li>Transforms/include 文件夹：存放整个 LLVM Pass 项目的头文件，暂时还没有用到</li></ul><ul class="notion-list notion-list-disc notion-block-266047c8da7642e1a5d309d140a89f5d"><li>Transforms/src 文件夹：存放整个 LLVM Pass 项目的源代码</li></ul><ul class="notion-list notion-list-disc notion-block-68d0157547554bd2b963f7e16cd9d6c3"><li>Transforms/src/HelloWorld. cpp：HelloWorld Pass 的源代码，一般来说一个 Pass 使用一个 cpp 文件实现即可。</li></ul><ul class="notion-list notion-list-disc notion-block-9b02ca1885e340d0ac848cb571bb00d1"><li>Transforms/CMakeLists. txt：整个 CMake 项目的配置文件</li></ul><ul class="notion-list notion-list-disc notion-block-e91f4e4befd34525acd3e9020a56d694"><li>test.sh</li></ul><h4 class="notion-h notion-h3 notion-h-indent-1 notion-block-d308e1a628234806b1c6a767d3682016" data-id="d308e1a628234806b1c6a767d3682016"><span><div id="d308e1a628234806b1c6a767d3682016" class="notion-header-anchor"></div><a class="notion-hash-link" href="#d308e1a628234806b1c6a767d3682016" title="模板源码"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">模板源码</span></span></h4><div class="notion-text notion-block-516251f5c8ce4db4833eed19a3b259a7">实例代码</div><div class="notion-text notion-block-d4e5ff9d7d94450c8136424cad0e7d0a">Cmakelists文件</div><div class="notion-text notion-block-e7d134bd521d4999ae90176a08d851e2">模板 LLVM Pass 源码</div><div class="notion-text notion-block-6d43c01eb280461baf6cb74d87afee05">编译脚本 test. sh 文件</div><h3 class="notion-h notion-h2 notion-h-indent-0 notion-block-48244b362dce45489ccb93dc5e13b048" data-id="48244b362dce45489ccb93dc5e13b048"><span><div id="48244b362dce45489ccb93dc5e13b048" class="notion-header-anchor"></div><a class="notion-hash-link" href="#48244b362dce45489ccb93dc5e13b048" title="最后实现的结果"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">最后实现的结果</span></span></h3><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-b08b2d096d5b4ec6ac35db70782a3efd"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column"><img src="https://thestar0-1308426403.cos.ap-chengdu.myqcloud.com/img/20221215235316.png?spaceId=0dd8935a-39f8-4c94-aaf7-d2de23196366&amp;t=b08b2d09-6d5b-4ec6-ac35-db70782a3efd" alt="notion image" loading="lazy" decoding="async"/></div></figure><div class="notion-text notion-block-763ffca881f64ab58973cbc2129d4b39">实现了对示例程序中的每个函数进行扫描，并且输出“Hello”加上函数名</div></main></div>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[代码混淆技术之随机控制流]]></title>
            <link>https://thestar0.github.io//article/2022/12/21/001c5807-161f-4069-a99c-1b57237d2992</link>
            <guid>https://thestar0.github.io//article/2022/12/21/001c5807-161f-4069-a99c-1b57237d2992</guid>
            <pubDate>Wed, 21 Dec 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[随机控制流混淆技术]]></description>
            <content:encoded><![CDATA[<div id="notion-article" class="mx-auto overflow-hidden "><main class="notion light-mode notion-page notion-block-001c5807161f4069a99c1b57237d2992"><div class="notion-viewport"></div><div class="notion-collection-page-properties"></div><h3 class="notion-h notion-h2 notion-h-indent-0 notion-block-f3aea4f4cdb5431a8881a14df4fdc329" data-id="f3aea4f4cdb5431a8881a14df4fdc329"><span><div id="f3aea4f4cdb5431a8881a14df4fdc329" class="notion-header-anchor"></div><a class="notion-hash-link" href="#f3aea4f4cdb5431a8881a14df4fdc329" title="什么是随机控制流"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">什么是随机控制流</span></span></h3><ul class="notion-list notion-list-disc notion-block-23e0328ed6a243c9ba3821b251721d99"><li>随机控制流是虚假控制流的一种变体，随机控制流通过克隆基本块，以及添加随机跳转（随机跳转到两个功能相同的基本块中的一个）来混淆控制流。</li></ul><ul class="notion-list notion-list-disc notion-block-afca91e2ea0d4f33969281413538216c"><li>与虚假控制流不同，随机控制流中不存在不可达基本块和不透明谓词，因此用于去除虚假控制流的手段（消除不透明谓词、符号执行获得不可达基本块后去除）均失效。</li></ul><ul class="notion-list notion-list-disc notion-block-44f4a09d950f44639c5a793b019d1739"><li>随机控制流的控制流图与虚假控制流类似，都呈长条形</li></ul><h3 class="notion-h notion-h2 notion-h-indent-0 notion-block-c745188e80fa4466a1918632e68656a5" data-id="c745188e80fa4466a1918632e68656a5"><span><div id="c745188e80fa4466a1918632e68656a5" class="notion-header-anchor"></div><a class="notion-hash-link" href="#c745188e80fa4466a1918632e68656a5" title="随机控制流混淆效果"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">随机控制流混淆效果</span></span></h3><ul class="notion-list notion-list-disc notion-block-d2eaff118fa44714a561ccd9f911b349"><li>随机的跳转和冗余的不可达基本块导致了大量垃圾代码，严重干扰了攻击者的分析</li></ul><ul class="notion-list notion-list-disc notion-block-026ac3b8ed49499c81dba5b30b1de2ca"><li>并且 rdrand 指令可以干扰某些符号执行引擎（如 angr）的分析</li></ul><h3 class="notion-h notion-h2 notion-h-indent-0 notion-block-c7d7a01912074676a488633bc5b8d24f" data-id="c7d7a01912074676a488633bc5b8d24f"><span><div id="c7d7a01912074676a488633bc5b8d24f" class="notion-header-anchor"></div><a class="notion-hash-link" href="#c7d7a01912074676a488633bc5b8d24f" title="随机控制流混淆原理"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">随机控制流混淆原理</span></span></h3><ul class="notion-list notion-list-disc notion-block-372eba4248794e8cb8d1e9c34855e047"><li>随机控制流同样是以基本块为单位进行混淆的，每个基本块要经过分裂、克隆、构造随机跳转和构造虚假随机跳转四个操作
如图所示</li><ul class="notion-list notion-list-disc notion-block-372eba4248794e8cb8d1e9c34855e047"><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-e4fc4b12e38942fc95886b9d203a41b4"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column"><img src="https://thestar0-1308426403.cos.ap-chengdu.myqcloud.com/img/20221221224342.png?spaceId=0dd8935a-39f8-4c94-aaf7-d2de23196366&amp;t=e4fc4b12-e389-42fc-9588-6b9d203a41b4" alt="notion image" loading="lazy" decoding="async"/></div></figure></ul></ul><h3 class="notion-h notion-h2 notion-h-indent-0 notion-block-8144974cea4b493e876f9d74bcaddabc" data-id="8144974cea4b493e876f9d74bcaddabc"><span><div id="8144974cea4b493e876f9d74bcaddabc" class="notion-header-anchor"></div><a class="notion-hash-link" href="#8144974cea4b493e876f9d74bcaddabc" title="随机控制流实现"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">随机控制流实现</span></span></h3><h4 class="notion-h notion-h3 notion-h-indent-1 notion-block-6f60e228d74c45e082d8a3f5a69f2482" data-id="6f60e228d74c45e082d8a3f5a69f2482"><span><div id="6f60e228d74c45e082d8a3f5a69f2482" class="notion-header-anchor"></div><a class="notion-hash-link" href="#6f60e228d74c45e082d8a3f5a69f2482" title="实现步骤"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">实现步骤</span></span></h4><div class="notion-text notion-block-65916db4e972445c88ebcb94170f2c0d">一共分为四步</div><ol start="1" class="notion-list notion-list-numbered notion-block-7a940b0ac18648ffbfb13455fa769223" style="list-style-type:decimal"><li>基本块拆分</li></ol><ol start="2" class="notion-list notion-list-numbered notion-block-1ce1c3218378484ca8ecd205a381858a" style="list-style-type:decimal"><li>基本块克隆</li></ol><ol start="3" class="notion-list notion-list-numbered notion-block-90d75da1cddb41d19a1718f48ad4b166" style="list-style-type:decimal"><li>构造随机跳转</li></ol><ol start="4" class="notion-list notion-list-numbered notion-block-732bcfdc79f84c3ca86008a531f547dc" style="list-style-type:decimal"><li>构造虚假随机跳转</li></ol><h4 class="notion-h notion-h3 notion-h-indent-1 notion-block-03ed86ab221a4691a44a9a34c7fbeb4c" data-id="03ed86ab221a4691a44a9a34c7fbeb4c"><span><div id="03ed86ab221a4691a44a9a34c7fbeb4c" class="notion-header-anchor"></div><a class="notion-hash-link" href="#03ed86ab221a4691a44a9a34c7fbeb4c" title="基本块拆分"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">基本块拆分</span></span></h4><ul class="notion-list notion-list-disc notion-block-f8a0b9955f2d43d9aee946ba05a0a174"><li>通过 getFirstNonPHI 函数获取第一个不是 PHINode 的指令，以该指令为界限进行分割，得到 entryBB 和 bodyBB</li></ul><ul class="notion-list notion-list-disc notion-block-d0ea006ab48544a19f3c54f55034c44f"><li>以 bodyBB 的终结指令为界限进行分割，最终得到头部、中部和尾部三个基本块，也就是 entryBB, bodyBB 和 endBB
和虚假控制流几乎一样</li></ul><h4 class="notion-h notion-h3 notion-h-indent-1 notion-block-8f12cf14b94d4c0bbe136ae60e223393" data-id="8f12cf14b94d4c0bbe136ae60e223393"><span><div id="8f12cf14b94d4c0bbe136ae60e223393" class="notion-header-anchor"></div><a class="notion-hash-link" href="#8f12cf14b94d4c0bbe136ae60e223393" title="基本块克隆"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">基本块克隆</span></span></h4><ul class="notion-list notion-list-disc notion-block-867b5ae725bd4d03bd4de634d26c28dc"><li>将中间的基本块进行克隆，这里可以选择对基本块进行变异，但不能改变基本块的功能。（与虚假控制流不同）
</li></ul><ul class="notion-list notion-list-disc notion-block-cc7d4ea3a20345d2ab83c3478710999a"><li>与虚假控制流不同，随机控制流在克隆时还需要修复逃逸变量。</li><ul class="notion-list notion-list-disc notion-block-cc7d4ea3a20345d2ab83c3478710999a"><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-c26200b8a5f4442480b4488bde0085b7"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column"><img src="https://thestar0-1308426403.cos.ap-chengdu.myqcloud.com/img/20221221224651.png?spaceId=0dd8935a-39f8-4c94-aaf7-d2de23196366&amp;t=c26200b8-a5f4-4424-80b4-488bde0085b7" alt="notion image" loading="lazy" decoding="async"/></div></figure></ul></ul><h4 class="notion-h notion-h3 notion-h-indent-1 notion-block-8241cbbec2ca4f5a95745280b3b378fb" data-id="8241cbbec2ca4f5a95745280b3b378fb"><span><div id="8241cbbec2ca4f5a95745280b3b378fb" class="notion-header-anchor"></div><a class="notion-hash-link" href="#8241cbbec2ca4f5a95745280b3b378fb" title="逃逸变量引发的问题"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">逃逸变量引发的问题</span></span></h4><ul class="notion-list notion-list-disc notion-block-ebc4383338f242ea8c188a3c28b1d5ac"><li>在一个基本块中定义的变量，如果在另一个基本块中被引用，那么该变量称为逃逸变量</li><ul class="notion-list notion-list-disc notion-block-ebc4383338f242ea8c188a3c28b1d5ac"><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-01c61c9ff6a14be4b80120cfda236f72"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column"><img src="https://thestar0-1308426403.cos.ap-chengdu.myqcloud.com/img/20221221224745.png?spaceId=0dd8935a-39f8-4c94-aaf7-d2de23196366&amp;t=01c61c9f-f6a1-4be4-b801-20cfda236f72" alt="notion image" loading="lazy" decoding="async"/></div></figure></ul></ul><h4 class="notion-h notion-h3 notion-h-indent-1 notion-block-940e4288ad5b4bfd9a7bece492bd9422" data-id="940e4288ad5b4bfd9a7bece492bd9422"><span><div id="940e4288ad5b4bfd9a7bece492bd9422" class="notion-header-anchor"></div><a class="notion-hash-link" href="#940e4288ad5b4bfd9a7bece492bd9422" title="构造随机跳转"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">构造随机跳转</span></span></h4><ul class="notion-list notion-list-disc notion-block-de81a4ea8b50443884465da1d48077c0"><li>将生成随机数的指令插入到 entryBB ，将生成的随机数命名为 randVar，并在 entryBB 后插入基于 randVar 的随机跳转指令。
如图所示</li><ul class="notion-list notion-list-disc notion-block-de81a4ea8b50443884465da1d48077c0"><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-b077cad86ae04b9caf125a43dfd5c75a"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column"><img src="https://thestar0-1308426403.cos.ap-chengdu.myqcloud.com/img/20221221224829.png?spaceId=0dd8935a-39f8-4c94-aaf7-d2de23196366&amp;t=b077cad8-6ae0-4b9c-af12-5a43dfd5c75a" alt="notion image" loading="lazy" decoding="async"/></div></figure></ul></ul><h4 class="notion-h notion-h3 notion-h-indent-1 notion-block-14de19edd6d24d21bf867d44f92df8e0" data-id="14de19edd6d24d21bf867d44f92df8e0"><span><div id="14de19edd6d24d21bf867d44f92df8e0" class="notion-header-anchor"></div><a class="notion-hash-link" href="#14de19edd6d24d21bf867d44f92df8e0" title="插入生成随机数指令和随机跳转"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">插入生成随机数指令和随机跳转</span></span></h4><ul class="notion-list notion-list-disc notion-block-48568e642dd147b9879baf9e88d01805"><li>向 entryBB 中插入生成随机数的指令和随机跳转，使其能够随机跳转到 bodyBB 或者 bodyBB 的克隆块</li></ul><ul class="notion-list notion-list-disc notion-block-a64743c749e84bd080c0b2b3890d90dc"><li>其中随机数指令我们可以使用 LLVM 的内置函数 rdrand ()</li></ul><h4 class="notion-h notion-h3 notion-h-indent-1 notion-block-bc9b0ffb33e44b83b2cc30aad70f68b7" data-id="bc9b0ffb33e44b83b2cc30aad70f68b7"><span><div id="bc9b0ffb33e44b83b2cc30aad70f68b7" class="notion-header-anchor"></div><a class="notion-hash-link" href="#bc9b0ffb33e44b83b2cc30aad70f68b7" title="构造虚假随机跳转"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">构造虚假随机跳转</span></span></h4><ul class="notion-list notion-list-disc notion-block-7b69008314ff417583004192feacfc3d"><li>在 bodyBB 和 cloneBB 后插入虚假随机跳转指令（实际上仍会直接跳转到 endBB</li><ul class="notion-list notion-list-disc notion-block-7b69008314ff417583004192feacfc3d"><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-900b080699e84a44abe07c73bb8bbb4f"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column"><img src="https://thestar0-1308426403.cos.ap-chengdu.myqcloud.com/img/20221221225010.png?spaceId=0dd8935a-39f8-4c94-aaf7-d2de23196366&amp;t=900b0806-99e8-4a44-abe0-7c73bb8bbb4f" alt="notion image" loading="lazy" decoding="async"/></div></figure><div class="notion-blank notion-block-d82e5698e1b94cee82bba238a3cf6b87"> </div><h3 class="notion-h notion-h2 notion-block-d8fe601cad444642a85b2e8927cc2ea2" data-id="d8fe601cad444642a85b2e8927cc2ea2"><span><div id="d8fe601cad444642a85b2e8927cc2ea2" class="notion-header-anchor"></div><a class="notion-hash-link" href="#d8fe601cad444642a85b2e8927cc2ea2" title="参考于"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">参考于</span></span></h3><div class="notion-row"><a target="_blank" rel="noopener noreferrer" class="notion-bookmark notion-block-b179489408304234b99ae952455cddd5" href="https://www.kanxue.com/book-section_list-88.htm"><div><div class="notion-bookmark-title">LLVM与代码混淆技术 - Android - 看雪学苑-看雪-安全培训|安全招聘|www.kanxue.com</div><div class="notion-bookmark-description">LLVM与代码混淆技术 - 看雪学苑-看雪-安全培训|安全招聘|www.kanxue.com</div><div class="notion-bookmark-link"><div class="notion-bookmark-link-icon"><img src="https://www.notion.so/image/https%3A%2F%2Fwww.kanxue.com%2Fview%2Fimg%2Ffavicon.ico?table=block&amp;id=b1794894-0830-4234-b99a-e952455cddd5&amp;t=b1794894-0830-4234-b99a-e952455cddd5" alt="LLVM与代码混淆技术 - Android - 看雪学苑-看雪-安全培训|安全招聘|www.kanxue.com" loading="lazy" decoding="async"/></div><div class="notion-bookmark-link-text">https://www.kanxue.com/book-section_list-88.htm</div></div></div><div class="notion-bookmark-image"><img style="object-fit:cover" src="https://www.notion.so/image/https%3A%2F%2Fwww.kanxue.com%2Fupload%2Fbrief%2F195.png?table=block&amp;id=b1794894-0830-4234-b99a-e952455cddd5&amp;t=b1794894-0830-4234-b99a-e952455cddd5" alt="LLVM与代码混淆技术 - Android - 看雪学苑-看雪-安全培训|安全招聘|www.kanxue.com" loading="lazy" decoding="async"/></div></a></div></ul></ul></main></div>]]></content:encoded>
        </item>
    </channel>
</rss>